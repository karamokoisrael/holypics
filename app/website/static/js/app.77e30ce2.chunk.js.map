{"version":3,"sources":["assets/img/logo-bg.png","assets/img/logo.png","helpers/tailwind.ts","constants/theme.ts","constants/layout.ts","components/custom/Error.tsx","screens/error/Error.tsx","stores/store.ts","constants/environment.ts","helpers/utils.ts","components/layout/Footer.tsx","components/layout/BottomNavigator.tsx","components/layout/Layout.tsx","screens/home/Home.tsx","styles/shared.tsx","screens/onBoarding/OnBoarding.tsx","screens/error/NotFound.tsx","components/layout/Header.tsx","screens/account/Account.tsx","components/layout/ModelCard.tsx","screens/ai/StableDiffusion.tsx","screens/ai/Model.tsx","screens/apps/Apps.tsx","components/navigation/Navigation.tsx","components/layout/ConditionalSuspense.tsx","components/custom/Loader.tsx","helpers/local-storage.ts","components/providers/DataProvider.tsx","constants/translations.ts","App.tsx","tailwind.config.js","assets/fonts/Gemunu_Libre/GemunuLibre-VariableFont_wght.ttf"],"names":["module","exports","tw","create","require","fontConfig","default","regular","fontFamily","fontWeight","medium","light","thin","theme","DefaultTheme","roundness","version","colors","background","color","onBackground","onbb","primary","primaryOpac","secondary","tertiary","headerControls","primary10","success","warning","info","gray","danger","dark","white","chip","transparent","fonts","configureFonts","darkTheme","card","text","border","notification","lightTheme","tint","headerTintColor","window","Dimensions","get","WINDOW_HEIGHT","height","WINDOW_WIDTH","width","FULL_WIDTH","SMALL_SCREEN","CustomErrorFallback","props","View","style","flex","alignItems","justifyContent","backgroundColor","Text","variant","error","toString","Button","onPress","alert","I18n","t","errorHandler","stackTrace","console","log","Error","resetError","configurePersist","storage","AsyncStorage","rootKey","persist","purge","useStore","key","allowlist","denylist","set","isAuthenticated","user","hf_token","colorScheme","bottomBarSelectedIndex","drawerSelectedIndex","drawerOpened","onBoardingPassed","configs","notifications","socketConnId","socket","undefined","toggleOnboardingStatus","setBottomBarSelectedIndex","value","setDrawerSelectedIndex","setConfigs","toggleColorScheme","setColorScheme","setSocket","setUser","purgePersistenStore","a","async","formatUrl","path","environment","openUrl","url","Linking","canOpenURL","openURL","safelyGetProp","data","filter","defaultValue","Footer","Platform","OS","navigation","useNavigation","Appbar","Header","minHeight","flexDirection","TouchableOpacity","navigate","Image","size","source","Action","icon","bottomRoutes","id","title","focusedIcon","unfocusedIcon","BottomNavigator","insets","useSafeAreaInsets","renderScene","BottomNavigation","SceneMap","Home","Articles","Models","Account","store","selected","state","marginBottom","bottom","navigationState","index","routes","map","item","onIndexChange","activeColor","onTabPress","route","Layout","children","bottomNavigation","noScrollView","webStyle","StatusBar","translucent","maxWidth","ScrollView","useEffect","useState","searchText","setSearchText","pageRef","useRef","limitRef","loading","setLoadingStatus","dataCtrl","useSWR","limit","query","status","page","current","meta","search","axios","params","models","Math","round","filter_count","revalidateOnFocus","shouldRetryOnError","fontSize","Searchbar","placeholder","onChangeText","mutate","onIconPress","ActivityIndicator","model","uri","thumb","truncate","translations","length","tags","join","mode","disabled","sharedStyles","StyleSheet","boxBordered","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","responsiveRow","flexWrap","centeredText","textAlign","currencyLogo","OnBoarding","hideHeader","styles","container","image","logo","marginTop","NotFound","headerShown","toggleDrawer","minWidth","options","back","BackAction","goBack","Content","headerTitle","ModelCard","isLoading","testEnabled","Card","includes","Title","titleVariant","Cover","Paragraph","description","WebBrowser","doc_url","StableDiffusion","find","req","Model","available_locally","test_url","Apps","apps","FlatList","contentContainerStyle","renderItem","TouchableHighlight","underlayColor","IconButton","keyExtractor","linking","prefixes","config","screens","Drawer","createDrawerNavigator","Navigation","defaultScreenOptions","drawerActiveBackgroundColor","drawerHiddenOptions","drawerItemStyle","display","NavigationContainer","Navigator","initialRouteName","screenOptions","header","screenListeners","currentRoute","name","Screen","component","drawerLabel","ConditionalSuspense","condition","fallBack","storeData","setItem","i18n","fr","welcome","on_boarding_slogan","en","on_boarding_slogan_description","get_started","home","create_new_wallet","i_already_have_a_wallet","legal","please_review_the_terms_of_service_and_privacy_policy","privacy_policy","terms_of_service","continue","backup_wallet","i_ve_read_and_accept_the_terms_of_service_and_privacy_policy","you_should_accept_our_policies_first","i_understand_that_if_i_lose_my_recovery_words_i_will_not_be_able_to_access_my_wallet","make_sure_to_agree_with_our_guidelines","backup_your_wallet_now","in_the_following_sequence_you_will_see_24_words_that_will_allow_you_to_backup_up_your_wallet","sign_up","your_recovery_phrase","write_down_or_copy_these_words_in_the_right_order_and_save_them_somewhere_safe","verify_recovery_phrase","tap_the_words_to_put_them_next_to_each_other_in_the_correct_order","verify","recovery_phrases_do_not_match","wallet","wallets","send","receive","swap","settings","refresh","articles","account","evaluate_ai","image_url","submit","test","comment","submit_feedback","see_documentation","holipics","hi","on_boarding","DataProvider","currentLocale","fetch","res","json","resJson","errors","Object","keys","onError","FallbackComponent","Loader","App","useDeviceContext","withDeviceColorScheme","useFonts","plugin","plugins","addUtilities","btn"],"mappings":"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","file":"static/js/app.77e30ce2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-bg.10b866f1.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.af37ae06.png\";","import { create } from 'twrnc';\nconst tw = create(require(\"../tailwind.config\"));\nexport default tw;","import { configureFonts, MD3LightTheme as DefaultTheme } from 'react-native-paper';\nimport tw from \"../helpers/tailwind\";\n\nconst _fontConfig = {\n  regular: {\n    fontFamily: 'Global-Font',\n    fontWeight: 'normal',\n  },\n  medium: {\n    fontFamily: 'Global-Font',\n    fontWeight: 'normal',\n  },\n  light: {\n    fontFamily: 'Global-Font',\n    fontWeight: 'normal',\n  },\n  thin: {\n    fontFamily: 'Global-Font',\n    fontWeight: 'normal',\n  },\n};\n\nconst fontConfig = {\n  // web: _fontConfig,\n  // ios: _fontConfig,\n  // android: _fontConfig,\n  default: _fontConfig,\n};\n\nexport const theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  version: 3,\n  colors: {\n    ...DefaultTheme.colors,\n    background: tw.color('bg-gray-100'),\n    onBackground: tw.color('bg-gray-100'),\n    onbb: tw.color('bg-gray-100'),\n    primary: '#e94256',\n    primaryOpac: \"#ffdde1\",\n    secondary: '#96cc6a',\n    tertiary: '#4527a0',\n    headerControls: \"#fff\",\n    primary10: \"#222835\",\n    success: \"#28a745\",\n    warning: \"#ffc107\",\n    info: \"#17a2b8\",\n    gray: \"#6c757d\",\n    danger: \"#dc3545\",\n    dark: \"#343a40\",\n    light: \"#f8f9fa\",\n    white: \"#fff\",\n    chip: \"#ebdefa\",\n    transparent: \"#fff0\"\n  },\n  // @ts-ignore\n  fonts: configureFonts(fontConfig),\n};\n\nexport const darkTheme = {\n  dark: true,\n  colors: {\n    primary: theme.colors.primary,\n    background: theme.colors.background,\n    card: theme.colors.background,\n    text: theme.colors.headerControls,\n    border: theme.colors.dark,\n    notification: theme.colors.primary,\n  }\n};\n\nexport const lightTheme = {\n  dark: false,\n  colors: {\n    primary: theme.colors.primary,\n    background: theme.colors.background,\n    card: theme.colors.primary,\n    text: theme.colors.headerControls,\n    border: theme.colors.transparent,\n    notification: theme.colors.primary,\n    tint: theme.colors.headerControls,\n    headerTintColor: theme.colors.headerControls,\n  }\n\n};\n\nexport default theme;","import { Dimensions } from \"react-native\";\nconst window = Dimensions.get(\"window\");\nexport const MAX_SMALL_SCREEN_WIDTH = 767\nexport const WINDOW_HEIGHT = window.height\nexport const WINDOW_WIDTH = window.width\nexport const APP_WITH_LIMIT = 1185 //1185\nexport const FULL_WIDTH = WINDOW_WIDTH > APP_WITH_LIMIT ? APP_WITH_LIMIT : WINDOW_WIDTH\nexport const SMALL_SCREEN = WINDOW_WIDTH < MAX_SMALL_SCREEN_WIDTH;\n","import I18n from \"i18n-js\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport { Button, Text } from \"react-native-paper\";\nimport { WINDOW_HEIGHT } from \"../../constants/layout\";\nimport theme from \"../../constants/theme\";\n\nexport default function CustomErrorFallback(props: { error: Error; resetError: Function }) {\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"flex-start\", height: WINDOW_HEIGHT, backgroundColor: theme.colors.light }}>\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"flex-start\", height: 100 }}>\n                <Text variant=\"headlineLarge\">Error</Text>\n                <Text variant=\"bodySmall\">{props.error.toString()}</Text>\n            </View>\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"flex-start\", height: 100 }}>\n                <Button onPress={() => alert(\"...\")} style={{ backgroundColor: theme.colors.warning }}>{I18n.t(\"refresh\")}</Button>\n            </View>\n        </View>\n    )\n}\n\nexport const errorHandler = (error: Error, stackTrace: string) => {\n    console.log(\"Handled Error => \", stackTrace, \"__\", error);\n};\n","import React from \"react\";\nimport CustomErrorFallback from \"../../components/custom/Error\";\nexport default function Error() {\n  return (\n    <CustomErrorFallback error={{} as Error} resetError={() => null} />\n  );\n}\n","import { RnColorScheme } from 'twrnc';\nimport { Directus } from '@directus/sdk';\nimport create from \"zustand\";\nimport { Store } from '../@types/store';\nimport environment from '../constants/environment';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { configurePersist } from \"zustand-persist\"\nconst { persist, purge } = configurePersist({\n    storage: AsyncStorage, // use `AsyncStorage` in react native\n    rootKey: 'root', // optional, default value is `root`\n})\n\n\nconst useStore = create<Store>(\n    persist({\n        key: 'cookie', // required, child key of storage\n        allowlist: ['isAuthenticated', 'user', 'configs', 'colorScheme', 'onBoardingPassed'], // optional, will save everything if allowlist is undefined\n        denylist: [], // optional, if allowlist set, denylist will be ignored\n    }, (set, get) => ({\n        isAuthenticated: false,\n        user: { hf_token: \"\" },\n        colorScheme: \"light\",\n        bottomBarSelectedIndex: 0,\n        drawerSelectedIndex: 0,\n        drawerOpened: false,\n        onBoardingPassed: false,\n        configs: {},\n        notifications: [],\n        socketConnId: \"\",\n        socket: undefined,\n        toggleOnboardingStatus: () => set(() => ({ onBoardingPassed: !get().onBoardingPassed })),\n        setBottomBarSelectedIndex: (value: number) => set(() => ({ bottomBarSelectedIndex: value })),\n        setDrawerSelectedIndex: (value: number) => set(() => ({ drawerSelectedIndex: value })),\n        setConfigs: (value: Record<string, any>) => set(() => ({ configs: value })),\n        toggleColorScheme: () => { return set(() => ({ colorScheme: get().colorScheme == \"light\" ? \"dark\" : \"light\" })) },\n        setColorScheme: (value: RnColorScheme) => { return set(() => ({ colorScheme: value })) },\n        setSocket: (value: WebSocket) => { return set(() => ({ socket: value })) },\n        setUser: (value: Record<string, any>) => { return set(() => ({ user: value })); },\n        purgePersistenStore: async ()=> {\n            try {\n                await purge();\n            } catch (error) {\n                \n            }\n        }\n    }))\n)\n\nexport default useStore; ","export default {\n    // apiUrl: process.env.NODE_ENV === \"development\" ? 'http://192.168.1.3:8055' : 'https://mgx-api.karamokoisrael.tech',\n    apiUrl: 'https://mgx-api.karamokoisrael.tech',\n    environment: process.env.NODE_ENV,\n    websiteUrl: \"https://karamokoisrael.tech\",\n    hugginsFaceSecret: ''\n}\n","import { Linking } from \"react-native\"\nimport environment from \"../constants/environment\"\n\nexport const formatUrl = (path: string) => {\n    return `${environment.apiUrl}/${path}`\n}\n\nexport const getLogoUrl = () => {\n    return formatUrl(\"public/logo\")\n}\n\n// export const truncateText = (text: string, maxLength: number)=> text.length >= maxLength ? `${text.substring(0, 3)}...` : text\n\nexport const getImageUrl = (imageId: string) => {\n    return formatUrl(`file/${imageId}`)\n}\n\nexport const openUrl = async (url:  string)=>{\n    try {\n        const supported = await Linking.canOpenURL(url);\n        if (supported) await Linking.openURL(url);\n    } catch (error) { }\n}\n\nexport const safelyGetProp = (data:any, filter: Function, defaultValue: any = undefined)=>{\n    try {\n        return filter(data);\n    } catch (error) {\n        return defaultValue;\n    }\n}\n","import { Appbar, Avatar, Text } from \"react-native-paper\";\nimport { Linking, Platform, TouchableOpacity, View } from \"react-native\";\nimport { FULL_WIDTH, SMALL_SCREEN, WINDOW_WIDTH } from \"../../constants/layout\";\nimport I18n from \"i18n-js\";\nimport theme from \"../../constants/theme\";\nimport React from \"react\";\nimport useStore from \"../../stores/store\";\nimport tw from \"../../helpers/tailwind\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport environment from \"../../constants/environment\";\nimport { openUrl } from \"../../helpers/utils\";\n\nexport default function Footer() {\n\n  if (Platform.OS != \"web\") return null;\n  // const store = useStore();\n  const navigation = useNavigation();\n\n  return (\n    <View style={{ ...tw`mt-${SMALL_SCREEN ? '175' : '95'}`, width: WINDOW_WIDTH, flex: 1, alignItems: \"center\", justifyContent: \"center\", backgroundColor: theme.colors.background }}>\n      <Appbar.Header style={{ minHeight: 50, width: FULL_WIDTH, flex: 1, alignItems: \"center\", justifyContent: \"space-between\", flexDirection: \"row\", backgroundColor: theme.colors.primaryOpac }}>\n        <Appbar.Header style={{ backgroundColor: \"transparent\", flex: 1, alignItems: \"center\", justifyContent: \"space-around\", flexDirection: \"row\"}}>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"Home\")}>\n            <Avatar.Image size={30} source={require('../../assets/img/logo-bg.png')} />\n          </TouchableOpacity>\n          <Text variant=\"labelLarge\" style={tw`text-center ml-4`}>Copyright © 2022 Megamax Development</Text>\n        </Appbar.Header>\n\n        {\n          !SMALL_SCREEN ?\n            <Appbar.Header style={{ backgroundColor: \"transparent\" }}>\n              <Appbar.Action icon=\"web\" onPress={async () => await openUrl(environment.websiteUrl)} />\n              <Appbar.Action icon=\"github\" onPress={async () => await openUrl(\"https://github.com/karamokoisrael\")} />\n              <Appbar.Action icon=\"twitter\" onPress={async () => await openUrl(\"https://twitter.com/IsraelKaramoko\")} />\n            </Appbar.Header> :\n            null\n        }\n      </Appbar.Header>\n    </View>\n  )\n}\n","import React from \"react\";\nimport useStore from \"../../stores/store\";\nimport { BottomNavigation } from 'react-native-paper';\nimport theme from \"../../constants/theme\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FULL_WIDTH } from \"../../constants/layout\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport I18n from \"i18n-js\";\n\n\nexport const bottomRoutes = [\n  {\n    id: 0,\n    title: \"home\",\n    key: \"Home\",\n    focusedIcon: \"home\",\n    unfocusedIcon: 'home-outline',\n  },\n  {\n    id: 1,\n    title: \"articles\",\n    key: \"Articles\",\n    focusedIcon: \"newspaper\",\n    unfocusedIcon: 'newspaper-variant',\n  },\n  {\n    id: 2,\n    title: \"models\",\n    key: \"Models\",\n    focusedIcon: \"camera\",\n    unfocusedIcon: 'camera-outline',\n  },\n  {\n    id: 3,\n    title: \"account\",\n    key: \"Account\",\n    focusedIcon: \"account\",\n    unfocusedIcon: 'account-outline',\n  },\n\n];\n\nconst BottomNavigator: React.FC = () => {\n\n  const insets = useSafeAreaInsets();\n  \n  const renderScene = BottomNavigation.SceneMap({\n    Home: () => null,\n    Articles: () => null,\n    Models: () => null,\n    Account: () => null,\n  });\n\n  const store = useStore();\n  const selected = useStore((state) => state.bottomBarSelectedIndex);\n  const navigation = useNavigation();\n\n  return (\n      <BottomNavigation\n        style={{ minHeight: 70, backgroundColor: theme.colors.primary, width: FULL_WIDTH, marginBottom: insets.bottom }}\n        navigationState={{ index: selected, routes: bottomRoutes.map((item)=> {return {...item, title: I18n.t(item.title)}}) }}\n        onIndexChange={() => null}\n        renderScene={renderScene}\n        activeColor={theme.colors.primary}\n        \n        // style={{backgroundColor: theme.colors.primary}}\n        // @ts-ignore\n        onTabPress={(route) => { navigation.navigate(route.route.key); store.setBottomBarSelectedIndex(route.route.id) }}\n      />\n  )\n};\n\nexport default BottomNavigator;\n","import React, { Fragment, } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Platform, ScrollView, View } from \"react-native\";\nimport Footer from \"./Footer\";\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../../constants/layout\";\nimport theme from \"../../constants/theme\";\nimport BottomNavigator from \"./BottomNavigator\";\nimport tw from \"../../helpers/tailwind\";\n\nexport type LayoutProps = {\n  children: JSX.Element,\n  title?: string\n  backgroundColor?: string,\n  bottomNavigation?: boolean,\n  hideHeader?: boolean,\n  noScrollView?: boolean,\n  webStyle?: Record<string, any>\n};\n\nconst Layout: React.FC<LayoutProps> = ({ children, backgroundColor, bottomNavigation, noScrollView, webStyle }) => {\n\n  return (\n    <Fragment>\n      <StatusBar\n        translucent\n        backgroundColor=\"transparent\"\n      />\n      {\n        Platform.OS === \"web\" ?\n          // @ts-ignore\n          <View style={{ ...(webStyle || {}),  ...tw`flex flex-col items-end justify-around content-end`, minHeight: WINDOW_HEIGHT,  height: \"auto\", maxWidth: WINDOW_WIDTH, backgroundColor: backgroundColor || theme.colors.background }}>\n            {children}\n            <Footer />\n          </View>\n          :\n          (\n            !noScrollView ?\n              <>\n                <ScrollView>\n                  {children}\n                </ScrollView>\n              </>\n\n              :\n              <>\n                {children}\n              </>\n\n          )\n      }\n\n      {\n        bottomNavigation && Platform.OS !== \"web\" ?\n          <BottomNavigator /> :\n          null\n      }\n\n    </Fragment>\n  );\n};\n\n\nexport default Layout;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { View, TouchableOpacity, Image } from \"react-native\";\nimport { ActivityIndicator, Button, Searchbar, Text } from \"react-native-paper\";\nimport Layout from \"../../components/layout/Layout\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport tw from '../../helpers/tailwind';\nimport useStore from \"../../stores/store\";\nimport useSWR from \"swr\";\nimport environment from \"../../constants/environment\";\nimport { formatUrl } from \"../../helpers/utils\";\nimport { FULL_WIDTH } from \"../../constants/layout\";\nimport { OnlyForWeb } from \"../../components/layout/PlateformTweaks\";\nimport { truncate } from \"lodash\";\nimport axios from \"axios\";\n\nexport default function Home() {\n  const navigation = useNavigation();\n  const onBoardingPassed = useStore(state => state.onBoardingPassed);\n  useEffect(() => {\n    if (!onBoardingPassed) navigation.navigate(\"OnBoarding\");\n  }, [onBoardingPassed])\n  const [searchText, setSearchText] = useState(\"\");\n  const pageRef = useRef(1);\n  const limitRef = useRef(2);\n  const [loading, setLoadingStatus] = useState(true);\n  const configs = useStore(state => state.configs);\n\n  const dataCtrl = useSWR(\"models\", async () => {\n    try {\n      setLoadingStatus(true)\n      const limit = 6\n      const query: Record<string, any> = { filter: { status: \"published\" }, page: pageRef.current, limit, meta: \"*\" };\n      if (searchText != \"\") query.search = searchText;\n      const models = await axios.get(formatUrl(\"items/models\"), {\n        params: query\n      })\n\n\n      limitRef.current = Math.round(models.data.meta.filter_count / limit)\n\n      setLoadingStatus(false);\n      let data = dataCtrl.data && searchText == \"\" ? dataCtrl.data : []\n      return [...data, ...models.data.data];\n    } catch (error) {\n      console.log(error);\n      setLoadingStatus(false);\n      throw new Error(\"\");\n    }\n  }, {\n    revalidateOnFocus: false,\n    shouldRetryOnError: true,\n  });\n  return (\n    <Layout>\n      <View style={tw`flex flex-col w-full items-center`}>\n        <View style={tw`flex flex-col justify-around items-start mt-5`}>\n          <Text style={{ ...tw`ml-2 mb-10 font-bold`, fontSize: 30 }}>What are you looking for ?</Text>\n          <Searchbar\n            style={tw`w-full`}\n            placeholder=\"I am looking for\"\n            value={searchText}\n            onChangeText={(text: string) => {\n              setSearchText(text)\n              if (text == \"\") {\n                pageRef.current = 1;\n                limitRef.current = 2;\n                dataCtrl.mutate();\n              }\n            }}\n            onIconPress={() => {\n              pageRef.current = 1;\n              limitRef.current = 2;\n              dataCtrl.mutate();\n            }}\n          />\n        </View>\n        <View style={tw`flex flex-col justify-around items-start mt-5`}>\n          <View style={tw`mb-5 flex items-center flex-row w-full`}>\n            <Text style={{ ...tw`ml-2 mr-2 font-bold` }} variant=\"headlineSmall\">Models</Text>\n            {\n              loading ?\n                <ActivityIndicator /> :\n                null\n            }\n          </View>\n\n\n          <View style={{ width: FULL_WIDTH, ...tw`flex flex-wrap flex-row justify-around` }}>\n            {\n              dataCtrl.data?.map((model: Record<string, any>, key: any) => (\n                // @ts-ignore\n                <TouchableOpacity key={`${key}${model.id}`} onPress={() => navigation.navigate(\"Model\", { id: model.id })}>\n                  <View key={model.id} style={tw`bg-white w-[180px] min-h-[220px] rounded-lg flex justify-center items-center bg-white mb-2`}>\n                    <Image style={tw`w-[160px] h-[160px] rounded-lg mt-2 mb-2`} source={{ uri: `${environment.apiUrl}/file/${model.thumb}` }} />\n                    <View style={tw`flex justify-start w-full`}>\n                      <Text variant=\"titleMedium\" style={tw`font-bold ml-5`}>{truncate(model?.translations[0].title, { length: 20 })}</Text>\n                      <Text variant=\"titleMedium\" style={tw`font-thin ml-5 text-gray-400 pr-5`}>{truncate(model.tags?.join(\" \"), { length: 30 })}</Text>\n                    </View>\n                  </View>\n                </TouchableOpacity>\n              ))\n            }\n          </View>\n\n          {\n            !loading && dataCtrl.data?.length == 0 ?\n              <Text style={{ ...tw`ml-2` }} variant=\"labelMedium\">No data found</Text> :\n              null\n          }\n\n          <View style={tw`ml-4 mt-10 flex items-center flex-row w-full`}>\n\n            <Button mode=\"contained\" disabled={pageRef.current >= limitRef.current} onPress={() => {\n              pageRef.current = pageRef.current + 1\n              dataCtrl.mutate()\n            }}>Load more</Button>\n\n            {\n              loading ?\n                <ActivityIndicator /> :\n                null\n            }\n          </View>\n        </View>\n      </View>\n    </Layout>\n  );\n}\n\n\n","import { StyleSheet } from 'react-native';\n\nexport const sharedStyles = StyleSheet.create({\n  boxBordered: {\n    borderRadius: 4,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 1,\n      height: 4,\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10,\n    elevation: 5,\n  },\n\n  responsiveRow: {\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"100%\"\n  },\n\n  centeredText: {\n    textAlign: \"center\"\n  },\n\n  currencyLogo: {\n    width: 50,\n    height: 50\n  }\n});","import React, { useEffect } from \"react\";\nimport { View, StyleSheet, Image } from \"react-native\";\nimport { Button, Text } from \"react-native-paper\";\nimport Layout from \"../../components/layout/Layout\";\nimport { WINDOW_HEIGHT } from \"../../constants/layout\"\n// @ts-ignore\nimport logo from \"../../assets/img/logo.png\"\nimport { sharedStyles } from \"../../styles/shared\";\nimport I18n from \"i18n-js\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport useStore from \"../../stores/store\";\nimport tw from '../../helpers/tailwind';\n\nexport default function OnBoarding() {\n  const navigation = useNavigation();\n  const onBoardingPassed = useStore(state => state.onBoardingPassed);\n  const store = useStore();\n  useEffect(() => {\n    if (onBoardingPassed) navigation.navigate(\"Home\");\n  }, [onBoardingPassed])\n  return (\n    <Layout hideHeader>\n      <View style={{...tw`flex flex-col w-full items-center justify-center`, height: WINDOW_HEIGHT}}>\n        <View>\n          <View style={styles.container}>\n            <Image style={styles.image} source={logo} />\n            <Text variant=\"displaySmall\" style={{ ...sharedStyles.centeredText, marginBottom: 10, fontWeight: \"600\", textAlign: \"center\" }}>{I18n.t(\"on_boarding_slogan\")}</Text>\n            <Text variant=\"bodyLarge\" style={sharedStyles.centeredText}>{I18n.t(\"on_boarding_slogan_description\")}</Text>\n          </View>\n          <View style={{ ...styles.container, height: 200 }}>\n            <Button mode=\"contained\" style={{ marginTop: 10 }} onPress={() => {\n              store.toggleOnboardingStatus();\n              navigation.navigate(\"Home\");\n            }}>{I18n.t(\"get_started\")}</Button>\n          </View>\n        </View>\n      </View>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n  },\n  image: { width: 300, height: 300 },\n})\n","import { View } from \"react-native\";\nimport { Text } from \"react-native-paper\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/Layout\";\nimport tw from '../../helpers/tailwind';\nimport { WINDOW_HEIGHT } from \"../../constants/layout\";\n\nexport default function NotFound() {\n  return (\n    <Layout>\n      <View style={{ height: WINDOW_HEIGHT, ...tw`w-full flex items-center justify-center` }}>\n        <Text variant=\"headlineMedium\">Page not found</Text>\n      </View>\n    </Layout>\n  );\n}\n","import { Appbar, Avatar } from \"react-native-paper\";\nimport { Platform, View } from \"react-native\";\nimport { FULL_WIDTH, WINDOW_WIDTH } from \"../../constants/layout\";\nimport theme from \"../../constants/theme\";\nimport React from \"react\";\nimport tw from \"../../helpers/tailwind\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nexport default function Header(props: Record<string, any>) {\n\n  if (Platform.OS != \"ios\" && props.headerShown == false) return null;\n  // const store = useStore();\n  const navigation = useNavigation();\n  if (Platform.OS === \"web\") {\n    return (\n      <View style={{ width: WINDOW_WIDTH, flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Appbar.Header style={{ width: FULL_WIDTH, flex: 1, alignItems: \"center\", justifyContent: \"space-between\", flexDirection: \"row\", backgroundColor: theme.colors.primaryOpac }}>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"Home\")}>\n            <Avatar.Image size={50} source={require('../../assets/img/logo-bg.png')} />\n          </TouchableOpacity>\n          <View style={tw`flex flex-row`}>\n            <Appbar.Action icon=\"account\" onPress={() => navigation.navigate(\"Account\")} />\n            <Appbar.Action icon=\"menu\" onPress={() => (navigation as Record<string, any>).toggleDrawer()} />\n          </View>\n        </Appbar.Header>\n      </View>\n    )\n  }\n\n  return (\n    <>\n      <Appbar.Header style={{ maxWidth: FULL_WIDTH, minWidth: FULL_WIDTH }}>\n        {props.options?.back ? <Appbar.BackAction onPress={() => navigation.goBack()} /> : null}\n        {!props.options?.back ? <Appbar.Action icon=\"menu\" onPress={() => (navigation as Record<string, any>).toggleDrawer()} /> : null}\n        <Appbar.Content title={props.options.headerTitle != undefined ? props.options.headerTitle : \"\"} />\n        {!props.options?.back ? <Appbar.Action icon=\"account\" onPress={() => navigation.navigate(\"Account\")} /> : null}\n      </Appbar.Header>\n    </>\n  )\n\n}\n","import { View } from \"react-native\";\nimport { Text } from \"react-native-paper\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/Layout\";\nimport tw from '../../helpers/tailwind';\nimport { WINDOW_HEIGHT } from \"../../constants/layout\";\n\nexport default function Account() {\n  return (\n    <Layout>\n      <View style={{height: WINDOW_HEIGHT, ...tw`w-full flex items-center justify-center`}}>\n        <Text variant=\"headlineMedium\">Page under construction</Text>\n      </View>\n    </Layout>\n  );\n}\n","\nimport React from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Card, Paragraph, Title, Button, ActivityIndicator } from \"react-native-paper\";\nimport tw from '../../helpers/tailwind';\nimport { formatUrl, safelyGetProp } from \"../../helpers/utils\";\nimport I18n from \"i18n-js\";\nimport { FULL_WIDTH, WINDOW_HEIGHT } from \"../../constants/layout\";\nimport * as WebBrowser from 'expo-web-browser';\ntype Props = {\n    dataCtrl: Record<string, any>;\n    isLoading: boolean,\n    testEnabled: true\n}\nexport default function ModelCard({ dataCtrl, isLoading, testEnabled }: Props) {\n    return (\n        <Card style={{ width: FULL_WIDTH, minHeight: [\"android\", \"ios\"].includes(Platform.OS) ? WINDOW_HEIGHT : 320, height: \"auto\" }}>\n            <Card.Title titleVariant=\"headlineSmall\" title={safelyGetProp(dataCtrl?.data, (item: any) => item.translations[0].title)} />\n            <Card.Cover style={{ minHeight: 300 }} source={{ uri: formatUrl(`file/${dataCtrl?.data?.thumb}`) }} />\n            <Card.Content>\n                {\n                    isLoading ?\n                        <ActivityIndicator />\n                        :\n                        null\n                }\n                <Title>{safelyGetProp(dataCtrl?.data, (item: any) => item.translations[0].title)}</Title>\n                <Paragraph style={tw`p-2`}>{safelyGetProp(dataCtrl?.data, ((item: any) => item.translations[0].description))}</Paragraph>\n                <View style={tw`flex flex-row justify-around`}>\n                    {\n                        testEnabled ?\n                            <Button style={{ marginTop: 10 }} onPress={() => WebBrowser.openBrowserAsync(dataCtrl?.data?.doc_url)}>Test AI</Button>\n                            : null\n                    }\n                    <Button style={{ marginTop: 10 }} onPress={() => WebBrowser.openBrowserAsync(dataCtrl?.data?.doc_url)}>{I18n.t(\"see_documentation\")}</Button>\n                </View>\n            </Card.Content>\n        </Card>\n    )\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Card, Paragraph, Text, Title, Button, ActivityIndicator, TextInput } from \"react-native-paper\";\nimport useSWR from \"swr\";\nimport Layout from \"../../components/layout/Layout\";\nimport useStore from \"../../stores/store\";\nimport tw from '../../helpers/tailwind';\nimport { formatUrl, safelyGetProp } from \"../../helpers/utils\";\nimport I18n from \"i18n-js\";\nimport { FULL_WIDTH, WINDOW_HEIGHT } from \"../../constants/layout\";\nimport axios from \"axios\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { useNavigation } from \"@react-navigation/native\";\nimport ModelCard from \"../../components/layout/ModelCard\";\nimport Constants from 'expo-constants';\n\nexport default function StableDiffusion({ route }) {\n    const navigation = useNavigation();\n    const configs = useStore(state => state.configs);\n    const [isLoading, setLoadingStatus] = useState(true)\n    const [text, setText] = useState(\"\");\n    const [predictions, setPredictions] = useState([]);\n    const id = 2\n    const dataCtrl = useSWR(`model`, async () => {\n        setLoadingStatus(true)\n        try {\n            let data = configs?.models.find((item: { id: any; }) => item.id == id)\n            if (data == undefined) {\n                const req = await axios.get(formatUrl(`items/models/${id}`))\n                return req.data.data;\n            }\n            setLoadingStatus(false)\n            return data;\n        } catch (error) {\n            throw new Error(\"\");\n        } finally {\n            setLoadingStatus(false)\n        }\n    }, {\n        revalidateOnFocus: false,\n        shouldRetryOnError: true,\n    });\n\n    // const predict = async () => {\n    //     const req = await axios.post('https://hf.space/embed/stabilityai/stable-diffusion/+/', {\n    //         inputs: \"Hey man\",\n    //     }, {\n    //         headers: {\n    //             // \"Authorization\": `Bearer ${Constants?.manifest?.extra?.huggingFaceApiToken}` \n    //         }\n    //     })\n    //     console.log(req.data);\n    // }\n    // useEffect(() => {\n    //     predict()\n    // }, [])\n    return (\n        <Layout>\n            <View style={tw`flex flex-col w-full items-center`}>\n                <ModelCard dataCtrl={dataCtrl} isLoading={isLoading} testEnabled={true} />\n                {\n                    !isLoading && dataCtrl.data == undefined ?\n                        <Text style={{ ...tw`ml-2 mt-2` }} variant=\"titleMedium\">No data found</Text> :\n                        null\n                }\n\n                {/* <View style={{ width: FULL_WIDTH, ...tw`mb-5 mt-5 flex items-center flex-row` }}>\n                    <Text style={{ ...tw`ml-2 mr-2 font-bold` }} variant=\"headlineSmall\">Test model</Text>\n                </View>\n\n                <View style={{ width: FULL_WIDTH, ...tw`flex flex-row justify-around items-center mt` }}>\n              \n                    <TextInput\n                        style={tw`w-1/2`}\n                        label=\"Prompt\"\n                        value={text}\n                        onChangeText={currentText => setText(currentText)}\n                    />\n                    <Button mode=\"contained\">Generate Image</Button>\n                </View> */}\n            </View>\n\n        </Layout>\n    );\n}\n\n","import React, { useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Card, Paragraph, Text, Title, Button, ActivityIndicator } from \"react-native-paper\";\nimport useSWR from \"swr\";\nimport Layout from \"../../components/layout/Layout\";\nimport useStore from \"../../stores/store\";\nimport tw from '../../helpers/tailwind';\nimport { formatUrl, safelyGetProp } from \"../../helpers/utils\";\nimport I18n from \"i18n-js\";\nimport { FULL_WIDTH, WINDOW_HEIGHT } from \"../../constants/layout\";\nimport axios from \"axios\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function Model({ route }) {\n  const navigation = useNavigation();\n  const configs = useStore(state => state.configs);\n  const [isLoading, setLoadingStatus] = useState(true)\n  const dataCtrl = useSWR(`model-${route?.params?.id}`, async () => {\n    setLoadingStatus(true)\n    try {\n      let data = configs?.models.find((item: { id: any; }) => item.id == route?.params?.id)\n      if (data == undefined) {\n        const req = await axios.get(formatUrl(`items/models/${route?.params?.id}`))\n        return req.data.data;\n      }\n      setLoadingStatus(false)\n      return data;\n    } catch (error) {\n      throw new Error(\"\");\n    } finally {\n      setLoadingStatus(false)\n    }\n  }, {\n    revalidateOnFocus: false,\n    shouldRetryOnError: true,\n  });\n\n  return (\n    <Layout>\n      <View style={tw`flex flex-col w-full items-center`}>\n        <Card style={{ width: FULL_WIDTH, minHeight: [\"android\", \"ios\"].includes(Platform.OS) ? WINDOW_HEIGHT : 320, height: \"auto\" }}>\n          <Card.Title titleVariant=\"headlineSmall\" title={safelyGetProp(dataCtrl?.data, (item: any) => item.translations[0].title)} />\n          <Card.Cover style={{ minHeight: 300 }} source={{ uri: formatUrl(`file/${dataCtrl?.data?.thumb}`) }} />\n          <Card.Content>\n            {\n              isLoading ?\n                <ActivityIndicator />\n                :\n                null\n            }\n            <Title>{safelyGetProp(dataCtrl?.data, (item: any) => item.translations[0].title)}</Title>\n            <Paragraph style={tw`p-2`}>{safelyGetProp(dataCtrl?.data, ((item: any) => item.translations[0].description))}</Paragraph>\n            <View style={tw`flex flex-row justify-around`}>\n              <Button style={{ marginTop: 10 }} onPress={() => {\n                if (dataCtrl.data?.available_locally) return navigation.navigate(dataCtrl?.data?.test_url)\n                WebBrowser.openBrowserAsync(dataCtrl?.data?.test_url)\n              }}>Test AI</Button>\n              <Button style={{ marginTop: 10 }} onPress={() => WebBrowser.openBrowserAsync(dataCtrl?.data?.doc_url)}>{I18n.t(\"see_documentation\")}</Button>\n            </View>\n          </Card.Content>\n\n\n        </Card>\n\n        {\n          !isLoading && dataCtrl.data == undefined ?\n            <Text style={{ ...tw`ml-2 mt-2` }} variant=\"titleMedium\">No data found</Text> :\n            null\n        }\n\n\n      </View>\n    </Layout>\n  );\n}\n\n","import React, { useEffect } from \"react\";\nimport { View, FlatList, TouchableHighlight } from \"react-native\";\nimport { IconButton, Text } from \"react-native-paper\";\nimport Layout from \"../../components/layout/Layout\";\nimport { FULL_WIDTH, SMALL_SCREEN, WINDOW_HEIGHT } from \"../../constants/layout\"\n// @ts-ignore\nimport { useNavigation } from \"@react-navigation/native\";\nimport useStore from \"../../stores/store\";\nimport tw from '../../helpers/tailwind';\nimport { openUrl } from \"../../helpers/utils\";\nimport environment from \"../../constants/environment\";\nimport theme from \"../../constants/theme\";\n\nexport default function Apps() {\n    const navigation = useNavigation();\n    const onBoardingPassed = useStore(state => state.onBoardingPassed);\n    const store = useStore();\n    useEffect(() => {\n        if (onBoardingPassed) navigation.navigate(\"Home\");\n    }, [onBoardingPassed])\n    type App = {\n        title: string,\n        icon: string,\n        url: string\n    }\n    const apps: App[] = [\n        {\n            title: \"Download on android\",\n            url: environment.websiteUrl,\n            icon: \"google-play\"\n        },\n        {\n            title: \"Download for iphone\",\n            url: environment.websiteUrl,\n            icon: \"apple\"\n        },\n        {\n            title: \"Download for windows\",\n            url: environment.websiteUrl,\n            icon: \"microsoft-windows\"\n        },\n        {\n            title: \"Download for macos\",\n            url: environment.websiteUrl,\n            icon: \"apple\"\n        },\n        {\n            title: \"Download for linux\",\n            url: environment.websiteUrl,\n            icon: \"penguin\"\n        },\n        {\n            title: \"Visit our Website\",\n            url: environment.websiteUrl,\n            icon: \"web\"\n        }\n    ]\n    return (\n        <Layout hideHeader>\n            <View style={{ ...tw`flex flex-col w-full items-center justify-center`, height: WINDOW_HEIGHT }}>\n                <View style={tw`mt-10`}>\n                    <Text variant=\"titleMedium\" style={{ ...tw`ml-2 mb-10 font-bold text-center leading-10`, fontSize: 30 }}>Access our apps on several devices</Text>\n                </View>\n                <FlatList\n                    contentContainerStyle={{ width: SMALL_SCREEN ? FULL_WIDTH : 400 }}\n                    data={apps}\n                    renderItem={({ item }) => (\n                        <TouchableHighlight onPress={async () => await openUrl(item.url)} underlayColor={theme.colors.primaryOpac}>\n                            <View style={tw`flex flex-row items-center justify-between w-full`} key={item.title}>\n                                <IconButton icon={item.icon} />\n                                <Text variant=\"titleSmall\">{item.title}</Text>\n                            </View>\n                        </TouchableHighlight>\n                    )}\n                    keyExtractor={(item) => item.title}\n                />\n            </View>\n        </Layout>\n    );\n}\n","import { NavigationContainer } from \"@react-navigation/native\";\nimport React from \"react\";\nimport Error from \"../../screens/error/Error\";\nimport { RootStackParamList } from \"../../@types/types\";\nimport { LinkingOptions } from \"@react-navigation/native\";\nimport * as Linking from \"expo-linking\";\nimport theme, { darkTheme, lightTheme } from \"../../constants/theme\";\nimport useStore from \"../../stores/store\";\nimport Home from \"../../screens/home/Home\";\nimport OnBoarding from \"../../screens/onBoarding/OnBoarding\";\nimport NotFound from \"../../screens/error/NotFound\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Header from \"../layout/Header\";\nimport { bottomRoutes } from \"../layout/BottomNavigator\";\nimport Account from \"../../screens/account/Account\";\nimport I18n from \"i18n-js\";\nimport StableDiffusion from \"../../screens/ai/StableDiffusion\";\nimport Model from \"../../screens/ai/Model\";\nimport Apps from \"../../screens/apps/Apps\";\n\n\nexport type CustomRoute = {\n  // path: string;\n  component: React.FC<any>;\n  icon?: React.FC<any>;\n  access?: string;\n  title?: string;\n  modal?: boolean;\n  directLink?: boolean;\n  hideTitle?: boolean;\n  hideHeader?: boolean;\n};\n\n\nexport const linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl(\"/\")],\n  config: {\n    screens: {\n      OnBoarding: \"/on-boarding\",\n      Home: '/',\n      Model: '/model',\n      Apps: '/apps',\n      StableDiffusion: '/stable-diffusion',\n      Account: '/me',\n      Error: '/error',\n      NotFound: '*'\n    },\n  },\n};\n\nconst Drawer = createDrawerNavigator();\n\ntype NavigationProps = {\n  colorScheme: \"dark\" | \"light\"\n}\n\nexport default function Navigation({ colorScheme }: NavigationProps) {\n  const store = useStore();\n  const t = (text: string) => I18n.t(text) || \"\"\n\n\n  const defaultScreenOptions = {\n    headerShown: true,\n    // drawerActiveTintColor: theme.colors.headerControls,\n    // drawerActiveBackgroundColor: theme.colors.primary,\n    // headerLeft: routeGroup.modal ? () => <Appbar.Action icon=\"arrow-left\" color={theme.colors.headerControls} onPress={() => navigation.goBack()} /> : undefined,\n    // headerStyle: { maxWidth: FULL_WIDTH, minWidth: FULL_WIDTH},\n    // headerTitle: routeGroup.hideTitle ? \"\" : undefined,\n    // headerTintColor: theme.colors.headerControls,\n\n    // @ts-ignore\n    drawerActiveBackgroundColor: theme.colors.primaryOpac,\n    // @ts-ignore\n    // drawerActiveTintColor: theme.colors.primary\n    back: true\n  }\n  const drawerHiddenOptions = {\n    drawerItemStyle: { display: \"none\" } as any\n  }\n\n  return (\n    <NavigationContainer\n      linking={linking}\n      theme={colorScheme === \"dark\" ? darkTheme : lightTheme}\n    >\n      <Drawer.Navigator initialRouteName=\"Home\"\n        screenOptions={{\n          header: (props) => <Header {...props} />,\n        }}\n\n        screenListeners={({ route }) => ({\n          state: () => {\n            bottomRoutes.map((currentRoute, index) => {\n              if (currentRoute.key === route.name) return store.setBottomBarSelectedIndex(index);\n            })\n          },\n        })}\n      >\n        <Drawer.Screen name=\"Home\" component={Home} options={{ ...defaultScreenOptions, title: \"home\", drawerLabel: t(\"home\"), ...{ back: false } }} />\n        <Drawer.Screen name=\"Apps\" component={Apps} options={{ ...defaultScreenOptions, title: \"apps\", drawerLabel: \"Apps\" }} />\n        <Drawer.Screen name=\"OnBoarding\" component={OnBoarding} options={{ ...defaultScreenOptions, ...drawerHiddenOptions, title: t(\"on_boarding\"), headerShown: false }} />\n        <Drawer.Screen name=\"Account\" component={Account} options={{ ...defaultScreenOptions, title: \"account\", drawerLabel: t(\"account\"), headerTitle: t(\"account\") }} />\n        <Drawer.Screen name=\"StableDiffusion\" component={StableDiffusion} options={{ ...defaultScreenOptions, title: \"stable_diffusion\", drawerLabel: \"Stable Diffusion\" }} />\n        <Drawer.Screen name=\"Model\" component={Model} options={{ ...defaultScreenOptions, ...drawerHiddenOptions, title: \"model\" }} />\n        <Drawer.Screen name=\"Error\" component={Error} options={{ ...defaultScreenOptions, ...drawerHiddenOptions, title: \"error\", }} />\n        <Drawer.Screen name=\"NotFound\" component={NotFound} options={{ ...defaultScreenOptions, ...drawerHiddenOptions, title: \"not_found\", }} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\n\n","type Props = {\n  condition: boolean;\n  children: JSX.Element;\n  fallBack?: JSX.Element;\n};\n\ntype RenderProps = {\n  condition: boolean;\n  component: JSX.Element;\n  fallBack?: JSX.Element;\n};\n\nexport const ConditionalSuspense = ({\n  condition,\n  children,\n  fallBack,\n}: Props) => {\n  if (condition) return children;\n  return fallBack != undefined ? fallBack : null;\n};\n\nexport const ConditionalRender = ({\n  condition,\n  component,\n  fallBack,\n}: RenderProps) => {\n  if (condition) return component;\n  return fallBack != undefined ? fallBack : null;\n};\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { ActivityIndicator } from \"react-native-paper\";\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../../constants/layout\";\nexport default function () {\n    return (\n        <View style={{ width: WINDOW_WIDTH, height: WINDOW_HEIGHT, flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <ActivityIndicator/>\n        </View>\n    );\n}\n\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport const storeData = async (key: string, value: any) => {\n    try {\n        await AsyncStorage.setItem(key, value)\n    } catch (e) {\n      // saving error\n    }\n}\n\nexport const getData = async (key: string) => {\n    try {\n      const value = await AsyncStorage.getItem(key)\n      if(value !== null) return value;\n      return null;\n    } catch(e) {\n      return null;\n    }\n}\n\nexport const storeJsonData = async (key: string, value: any) => {\n    try {\n        const jsonValue = JSON.stringify(value);\n        await AsyncStorage.setItem(key, jsonValue)\n    } catch (e) {\n      // saving error\n    }\n}\n\nexport const getJsonData = async (key: string) => {\n    try {\n        const data = await getData(key)\n        let jsonValue: Record<string, any> | null  = null;        \n        if(data != null) jsonValue = JSON.parse(data);\n        return jsonValue;\n    } catch (e) {\n        return null;\n    }\n}\n  ","import useStore from \"../../stores/store\";\nimport { formatUrl } from \"../../helpers/utils\";\nimport React from \"react\";\nimport useSWR, { SWRConfig } from \"swr\";\nimport ErrorBoundary from \"react-native-error-boundary\";\nimport { ConditionalSuspense } from \"../layout/ConditionalSuspense\";\nimport CustomErrorFallback, { errorHandler } from \"../custom/Error\";\nimport Loader from \"../custom/Loader\";\nimport i18n from 'i18n-js';\nimport { translations } from \"../../constants/translations\";\nimport I18n from \"i18n-js\";\nimport { storeData } from \"../../helpers/local-storage\";\n// import * as Localization from 'expo-localization';\ni18n.translations = translations;\n// Set the locale once at the beginning of your app.\n// i18n.locale = Localization.locale;\n\ntype DataProviderProps = {\n  children: JSX.Element;\n};\nconst DataProvider: React.FC<DataProviderProps> = ({ children }) => {\n  const store = useStore();\n  const isAuthenticated = useStore(state => state.isAuthenticated)\n  const configs = useSWR(formatUrl(`config?culture=${I18n.currentLocale()}`), async (...args: Parameters<typeof fetch>) => {\n    try {\n      const res = await fetch(...args);\n      const resJson = await res.json();\n      if (resJson.errors !== undefined || resJson.data === undefined || Object.keys(resJson.data).length == 0)\n        throw new Error(\"No config found\");\n      if (!isAuthenticated) storeData(\"auth_token\", \"\")\n      if (!isAuthenticated) storeData(\"AuthToken\", \"\")\n      store.setConfigs(resJson.data);\n      return resJson.data;\n    } catch (error) {\n      console.log(error);\n      if (Object.keys(store.configs).length == 0) throw new Error(\"No local config\");\n      return store.configs;\n    }\n  }, {\n    revalidateOnFocus: false,\n    shouldRetryOnError: true,\n  });\n\n\n  return (\n    // @ts-ignore\n    <ErrorBoundary\n      onError={errorHandler}\n      FallbackComponent={CustomErrorFallback}\n    >\n      <SWRConfig>\n        <ConditionalSuspense\n          condition={configs.data != undefined && Object.keys(configs.data).length != 0}\n          fallBack={<Loader />}\n        >\n          {children}\n        </ConditionalSuspense>\n      </SWRConfig>\n    </ErrorBoundary>\n  );\n};\n\nexport default DataProvider;\n","export const languages = {\n    fr: {\n        key: \"fr-FR\"\n    },\n    en: {\n        key: \"en-US\"\n    }\n}\n\nexport const translations = {\n    fr: {\n        welcome: 'Bienvenue',\n        on_boarding_slogan: ''\n    },\n    en: {\n        welcome: 'Welcome',\n        on_boarding_slogan: 'Welcome to megamax dev',\n        on_boarding_slogan_description: 'Discover more about artificial intelligence and technology',\n        get_started: \"Get Started\",\n        home: \"Home\",\n        create_new_wallet: 'Create a new wallet',\n        i_already_have_a_wallet: 'I already have a wallet',\n        legal: \"Legal\",\n        please_review_the_terms_of_service_and_privacy_policy: \"Please review the CMCI wallet Terms of Service and Privacy Policy\",\n        privacy_policy: \"Privacy policy\",\n        terms_of_service: \"Terms of service\",\n        continue: \"Continue\",\n        backup_wallet: \"Backup Wallet\",\n        i_ve_read_and_accept_the_terms_of_service_and_privacy_policy: \"I've read and accept the terms of service and privacy policy\",\n        you_should_accept_our_policies_first: \"You should accept our policies first\",\n        error: \"Error\",\n        i_understand_that_if_i_lose_my_recovery_words_i_will_not_be_able_to_access_my_wallet: \"I understand that if i lose my recovery words i will not be able to access my wallet\",\n        make_sure_to_agree_with_our_guidelines: \"Make sure to agree with our guidelines\",\n        backup_your_wallet_now: \"Backup your wallet now\",\n        in_the_following_sequence_you_will_see_24_words_that_will_allow_you_to_backup_up_your_wallet: \"In the following sequence you will see 24 words that will allow you to backup up your wallet\",\n        sign_up: \"Sign Up\",\n        your_recovery_phrase: \"Your recovery phrase\",\n        write_down_or_copy_these_words_in_the_right_order_and_save_them_somewhere_safe: \"Write down or copy these words in the right order and save them somewhere safe\",\n        verify_recovery_phrase: \"Verify recovery phrase\",\n        tap_the_words_to_put_them_next_to_each_other_in_the_correct_order: \"Tap the words to put them next to each other in the correct order\",\n        verify: \"Verify\",\n        recovery_phrases_do_not_match: \"Recovery phrases do not match\",\n        wallet: \"Wallet\",\n        wallets: \"Wallets\",\n        send: \"Send\",\n        receive: \"Receive\",\n        swap: \"Swap\",\n        settings: \"Settings\",\n        refresh: \"Refresh\",\n        models: \"Models\",\n        model: \"model\",\n        articles: \"Articles\",\n        account: \"Account\",\n        evaluate_ai: \"Evaluate ai\",\n        image_url: \"Image url\",\n        submit: \"Submit\",\n        test: \"Test\",\n        comment:  \"Comment\",\n        submit_feedback: \"Submit feedback\",\n        see_documentation: \"See documentation\",\n        holipics: \"Holipics\",\n        hi: \"Hi\",\n        // @ts-ignore\n        holipics: \"Holipics\",\n        on_boarding: \"OnBoarding\"\n    },\n}","import { StatusBar } from \"expo-status-bar\";\nimport \"react-native-gesture-handler\";\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport theme from \"./constants/theme\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport DataProvider from \"./components/providers/DataProvider\";\nimport { Fragment } from \"react\";\nimport { useFonts } from 'expo-font';\nimport useStore from \"./stores/store\";\nimport { useDeviceContext } from 'twrnc';\nimport tw from \"./helpers/tailwind\";\n// SplashScreen.preventAutoHideAsync();\n  \nexport default function App() {\n  const colorScheme = useStore((state) => state.colorScheme); \n  useDeviceContext(tw, { withDeviceColorScheme: false });\n  if (process.env.NODE_ENV !== \"development\") console.log = () => { }\n  const [fontsLoaded] = useFonts({\n    'Global-Font': require('./assets/fonts/Gemunu_Libre/GemunuLibre-VariableFont_wght.ttf'),\n  });\n\n  if (!fontsLoaded) return null;\n\n  return (\n    <PaperProvider theme={{ ...theme, dark: colorScheme === \"dark\" }}>\n      <DataProvider>\n        <Fragment>\n          <StatusBar />\n          <Navigation colorScheme={colorScheme} />\n        </Fragment>\n      </DataProvider>\n    </PaperProvider>\n  );\n}\n","const { plugin } = require('twrnc');\n\nmodule.exports = {\n    plugins: [\n      plugin(({ addUtilities }) => {\n        addUtilities({\n          btn: `px-1 py-1 rounded-full bg-red-800 text-white mt-20`,\n          'body-text': `font-serif leading-relaxed tracking-wide text-gray-800`,\n        });\n      }),\n    ],\n  };","module.exports = __webpack_public_path__ + \"./fonts/GemunuLibre-VariableFont_wght.ttf\";"],"sourceRoot":""}