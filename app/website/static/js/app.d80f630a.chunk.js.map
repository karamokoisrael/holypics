{"version":3,"sources":["assets/img/logo.png","assets/img/stellar-logo.png","constants/theme.ts","constants/layout.ts","components/custom/Error.tsx","constants/environment.ts","stores/store.ts","components/layout/Footer.tsx","components/layout/BottomNavigator.tsx","components/layout/DrawerNavigator.tsx","components/layout/Layout.tsx","screens/authentication/SignUp.tsx","styles/shared.tsx","screens/home/Home.tsx","screens/onBoarding/OnBoarding.tsx","components/layout/Header.tsx","screens/ai/Models.tsx","helpers/utils.ts","constants/translations.ts","screens/ai/Model.tsx","components/navigation/index.tsx","screens/authentication/SignIn.tsx","screens/account/Account.tsx","screens/account/Security.tsx","screens/blog/Articles.tsx","screens/blog/Portfolio.tsx","screens/error/Error.tsx","screens/error/NotFound.tsx","components/layout/ConditionalSuspense.tsx","components/custom/Loader.tsx","components/providers/DataProvider.tsx","App.tsx"],"names":["module","exports","theme","DefaultTheme","roundness","version","colors","background","primary","primaryOpac","secondary","tertiary","headerControls","primary10","success","warning","info","gray","danger","dark","light","white","chip","transparent","darkTheme","card","text","border","notification","lightTheme","tint","headerTintColor","window","Dimensions","get","WINDOW_HEIGHT","height","WINDOW_WIDTH","width","FULL_WIDTH","CustomErrorFallback","props","useNavigation","View","style","flex","alignItems","justifyContent","backgroundColor","Text","variant","error","toString","errorHandler","stackTrace","console","log","apiUrl","environment","process","configurePersist","storage","AsyncStorage","rootKey","persist","useStore","purge","create","key","allowlist","denylist","set","isAuthenticated","user","id","colorMode","bottomBarSelectedIndex","drawerSelectedIndex","drawerOpened","onBoardingPassed","configs","notifications","socketConnId","socket","undefined","directus","Directus","recoveryPhrase","toggleDrawer","setBottomBarSelectedIndex","value","setDrawerSelectedIndex","setConfigs","setColorMode","setSocketConnId","setSocket","setUser","setNotifications","Footer","bottomRoutes","title","focusedIcon","unfocusedIcon","BottomNavigator","insets","useSafeAreaInsets","renderScene","BottomNavigation","SceneMap","Home","Articles","Models","Account","store","selected","state","navigation","minHeight","marginBottom","bottom","navigationState","index","routes","map","item","I18n","t","onIndexChange","activeColor","onTabPress","route","navigate","drawerRoutes","DrawerNavigator","Portal","Modal","contentContainerStyle","visible","onDismiss","IconButton","icon","onPress","Section","Item","label","active","Layout","children","bottomNavigation","noScrollView","StatusBar","translucent","Platform","OS","maxHeight","maxWidth","ScrollView","styles","StyleSheet","fullContainer","marginTop","bottomSectionContainer","container","image","sharedStyles","boxBordered","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","responsiveRow","flexDirection","flexWrap","centeredText","textAlign","currencyLogo","Header","Appbar","Image","size","source","require","Action","minWidth","back","BackAction","goBack","Content","options","headerTitle","formatUrl","path","languages","fr","en","OnBoarding","component","hideHeader","logo","fontWeight","Button","mode","padding","modal","AI","React","useState","useRef","color","margin","description","left","stellarLogo","right","Divider","params","toast","req","useSWR","a","async","data","models","find","name","supData","translations","languages_id","locale","revalidateOnFocus","shouldRetryOnError","predictions","setPredictions","cameraOn","cameraPermissionGranted","cameraType","Camera","Constants","Type","predictionControls","setPredictionControls","cameraRef","formRef","imageUrl","content","uri","textData","json","rating","comment","predictionModalData","setPredictionModalData","predict","base64Image","url","setLoadingStatus","formData","FormData","append","fetch","body","method","res","resJson","Error","text_data","predictionOutput","base64_image","isLoading","useEffect","requestCameraPermissionsAsync","status","Card","Cover","Paragraph","TextInput","onChangeText","Array","keys","star","iconColor","Actions","JSON","stringify","model_id","prediction_data","image_data","includes","flexBasis","currentPredictions","filter","ref","type","autoFocus","whiteBalance","WhiteBalance","auto","current","takePictureAsync","base64","imageData","handleImageCapture","front","thumb","Title","Linking","openURL","doc_url","ImagePicker","mediaTypes","All","allowsEditing","quality","result","cancelled","FileSystem","encoding","pickImage","ActivityIndicator","TouchableHighlight","Authentication","seedPhrase","recoveryArray","split","sort","b","Math","random","enteredSeedPhrase","setEnteredSeedPhrase","toggleWord","word","replace","Chip","trim","splitted","length","getTransformedEnteredSeedPhrase","Alert","alert","access","hideTitle","Blog","resetError","linking","prefixes","config","screens","Model","SignUp","SignIn","Security","Portfolio","NotFound","Stack","createStackNavigator","Navigation","renderScreen","routeGroup","Screen","headerShown","NavigationContainer","Navigator","initialRouteName","screenOptions","header","screenListeners","e","currentRoute","Object","routeName","Group","presentation","ConditionalSuspense","condition","fallBack","i18n","welcome","on_boarding_slogan","on_boarding_slogan_description","get_started","home","create_new_wallet","i_already_have_a_wallet","legal","please_review_the_terms_of_service_and_privacy_policy","privacy_policy","terms_of_service","continue","backup_wallet","i_ve_read_and_accept_the_terms_of_service_and_privacy_policy","you_should_accept_our_policies_first","i_understand_that_if_i_lose_my_recovery_words_i_will_not_be_able_to_access_my_wallet","make_sure_to_agree_with_our_guidelines","backup_your_wallet_now","in_the_following_sequence_you_will_see_24_words_that_will_allow_you_to_backup_up_your_wallet","sign_up","your_recovery_phrase","write_down_or_copy_these_words_in_the_right_order_and_save_them_somewhere_safe","verify_recovery_phrase","tap_the_words_to_put_them_next_to_each_other_in_the_correct_order","verify","recovery_phrases_do_not_match","wallet","wallets","send","receive","swap","settings","refresh","model","articles","account","evaluate_ai","image_url","submit","test","submit_feedback","see_documentation","holipics","DataProvider","errors","onError","FallbackComponent","Loader","App"],"mappings":"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","file":"static/js/app.d80f630a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.10b866f1.png\";","module.exports = __webpack_public_path__ + \"static/media/stellar-logo.9485d8f2.png\";","import { configureFonts, MD3LightTheme as DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\n// const fontConfig = {\n//   web: {\n//     regular: {\n//       fontFamily: 'sans-serif',\n//       fontWeight: 'normal',\n//     },\n//     medium: {\n//       fontFamily: 'sans-serif-medium',\n//       fontWeight: 'normal',\n//     },\n//     light: {\n//       fontFamily: 'sans-serif-light',\n//       fontWeight: 'normal',\n//     },\n//     thin: {\n//       fontFamily: 'sans-serif-thin',\n//       fontWeight: 'normal',\n//     },\n//   },\n//   ios: {\n//     regular: {\n//       fontFamily: 'sans-serif',\n//       fontWeight: 'normal',\n//     },\n//     medium: {\n//       fontFamily: 'sans-serif-medium',\n//       fontWeight: 'normal',\n//     },\n//     light: {\n//       fontFamily: 'sans-serif-light',\n//       fontWeight: 'normal',\n//     },\n//     thin: {\n//       fontFamily: 'sans-serif-thin',\n//       fontWeight: 'normal',\n//     },\n//   },\n//   android: {\n//     regular: {\n//       fontFamily: 'sans-serif',\n//       fontWeight: 'normal',\n//     },\n//     medium: {\n//       fontFamily: 'sans-serif-medium',\n//       fontWeight: 'normal',\n//     },\n//     light: {\n//       fontFamily: 'sans-serif-light',\n//       fontWeight: 'normal',\n//     },\n//     thin: {\n//       fontFamily: 'sans-serif-thin',\n//       fontWeight: 'normal',\n//     },\n//   }\n// };\n\nexport const theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  version: 3,\n  colors: {\n    ...DefaultTheme.colors,\n    background: \"#fff\",\n    primary: '#e94256',\n    primaryOpac: \"#ffdde1\",\n    secondary: '#96cc6a',\n    tertiary: '#4527a0',\n    headerControls: \"#fff\",\n    primary10: \"#222835\",\n    success: \"#28a745\",\n    warning: \"#ffc107\",\n    info: \"#17a2b8\",\n    gray: \"#6c757d\",\n    danger: \"#dc3545\",\n    dark: \"#343a40\",\n    light: \"#f8f9fa\",\n    white: \"#fff\",\n    chip: \"#ebdefa\",\n    transparent: \"#fff0\"\n  },\n\n  // @ts-ignore\n  // fonts: configureFonts(fontConfig),\n};\n\nexport const darkTheme = {\n  dark: true,\n  colors: {\n    primary: theme.colors.primary,\n    background: theme.colors.background,\n    card: theme.colors.background,\n    text: theme.colors.headerControls,\n    border: theme.colors.dark,\n    notification: theme.colors.primary,\n  }\n};\n\nexport const lightTheme = {\n  dark: false,\n  colors: {\n    primary: theme.colors.primary,\n    background: theme.colors.background,\n    card: theme.colors.primary,\n    text: theme.colors.headerControls,\n    border: theme.colors.transparent,\n    notification: theme.colors.primary,\n    tint: theme.colors.headerControls,\n    headerTintColor: theme.colors.headerControls,\n  }\n\n};\n\n\nexport default theme;","import { Dimensions } from \"react-native\";\nconst window = Dimensions.get(\"window\");\nexport const MAX_SMALL_SCREEN_WIDTH = 767\nexport const WINDOW_HEIGHT = window.height\nexport const WINDOW_WIDTH = window.width\nexport const APP_WITH_LIMIT = 600 //1185\nexport const FULL_WIDTH = WINDOW_WIDTH > APP_WITH_LIMIT ? APP_WITH_LIMIT : WINDOW_WIDTH\nexport const SMALL_SCREEN = WINDOW_WIDTH < MAX_SMALL_SCREEN_WIDTH;","import { useNavigation } from \"@react-navigation/native\";\nimport I18n from \"i18n-js\";\nimport React from \"react\";\nimport { View } from \"react-native\";\nimport { Button, Text } from \"react-native-paper\";\nimport { WINDOW_HEIGHT } from \"../../constants/layout\";\nimport theme from \"../../constants/theme\";\n\nexport default function CustomErrorFallback(props: { error: Error; resetError: Function }) {\n    const navigation = useNavigation();\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"flex-start\", height: WINDOW_HEIGHT, backgroundColor: theme.colors.light }}>\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"flex-start\", height: 100 }}>\n                <Text variant=\"headlineLarge\">Error</Text>\n                <Text variant=\"bodySmall\">{props.error.toString()}</Text>\n            </View>\n            <View  style={{ flex: 1, alignItems: \"center\", justifyContent: \"flex-start\", height: 100 }}>\n                {/* <Button onPress={()=> navigation.navigate(\"Wallets\")} style={{ backgroundColor: theme.colors.warning }}>{I18n.t(\"refresh\")}</Button> */}\n            </View>\n        </View>\n    )\n}\n\nexport const errorHandler = (error: Error, stackTrace: string) => {\n    console.log(\"Handled Error => \", stackTrace, \"__\", error);\n};\n","export default {\n    apiUrl: process.env.NODE_ENV === \"development\" ? 'http://192.168.1.2:8055' : 'https://mgx-api.karamokoisrael.tech',\n    // apiUrl: 'https://mgx-api.karamokoisrael.tech',\n    environment: process.env.NODE_ENV\n}","import { Directus } from '@directus/sdk';\nimport create from \"zustand\";\nimport { Store } from '../@types/store';\nimport environment from '../constants/environment';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { configurePersist } from \"zustand-persist\"\nconst { persist, purge } = configurePersist({\n    storage: AsyncStorage, // use `AsyncStorage` in react native\n    rootKey: 'root', // optional, default value is `root`\n})\n\n\nconst useStore = create<Store>(\n    persist({\n        key: 'auth', // required, child key of storage\n        allowlist: ['isAuthenticated', 'user', 'configs'], // optional, will save everything if allowlist is undefined\n        denylist: [], // optional, if allowlist set, denylist will be ignored\n    }, (set, get) => ({\n        isAuthenticated: false,\n        user: { id: \"\" },\n        colorMode: \"light\",\n        bottomBarSelectedIndex: 0,\n        drawerSelectedIndex: 0,\n        drawerOpened: false,\n        onBoardingPassed: false,\n        configs: {},\n        notifications: [],\n        socketConnId: \"\",\n        socket: undefined,\n        directus: new Directus(environment.apiUrl),\n        recoveryPhrase: \"\",\n        toggleDrawer: () => { return set(() => ({ drawerOpened: !get().drawerOpened })) },\n        setBottomBarSelectedIndex: (value: number) => set(() => ({ bottomBarSelectedIndex: value })),\n        setDrawerSelectedIndex: (value: number) => set(() => ({ drawerSelectedIndex: value })),\n        setConfigs: (value: Record<string, any>) => set(() => ({ configs: value })),\n        setColorMode: (value: \"light\" | \"dark\") => { return set(() => ({ colorMode: value })) },\n        setSocketConnId: (value: string) => { return set(() => ({ socketConnId: value })) },\n        setSocket: (value: WebSocket) => { return set(() => ({ socket: value })) },\n        setUser: (value: Record<string, any>) => { return set(() => ({ user: value })); },\n        setNotifications: (value: Array<Notification>) => { return set(() => ({ notifications: value })) },\n    }))\n)\n\nexport default useStore; ","import * as React from 'react';\n\nconst Footer: React.FC<Record<string, any>> = () => {\n  return null;\n};\n\nexport default Footer;\n","import React from \"react\";\nimport useStore from \"../../stores/store\";\nimport { BottomNavigation } from 'react-native-paper';\nimport theme from \"../../constants/theme\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FULL_WIDTH } from \"../../constants/layout\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport I18n from \"i18n-js\";\n\n\nexport const bottomRoutes = [\n  {\n    id: 0,\n    title: \"home\",\n    key: \"Home\",\n    focusedIcon: \"home\",\n    unfocusedIcon: 'home-outline',\n  },\n  {\n    id: 1,\n    title: \"articles\",\n    key: \"Articles\",\n    focusedIcon: \"newspaper\",\n    unfocusedIcon: 'newspaper-variant',\n  },\n  {\n    id: 2,\n    title: \"models\",\n    key: \"Models\",\n    focusedIcon: \"camera\",\n    unfocusedIcon: 'camera-outline',\n  },\n  {\n    id: 3,\n    title: \"account\",\n    key: \"Account\",\n    focusedIcon: \"account\",\n    unfocusedIcon: 'account-outline',\n  },\n\n];\n\nconst BottomNavigator: React.FC = () => {\n\n  const insets = useSafeAreaInsets();\n  \n  const renderScene = BottomNavigation.SceneMap({\n    Home: () => null,\n    Articles: () => null,\n    Models: () => null,\n    Account: () => null,\n  });\n\n  const store = useStore();\n  const selected = useStore((state) => state.bottomBarSelectedIndex);\n  const navigation = useNavigation();\n\n  return (\n      <BottomNavigation\n        style={{ minHeight: 70, backgroundColor: theme.colors.primary, width: FULL_WIDTH, marginBottom: insets.bottom }}\n        navigationState={{ index: selected, routes: bottomRoutes.map((item)=> {return {...item, title: I18n.t(item.title)}}) }}\n        onIndexChange={() => null}\n        renderScene={renderScene}\n        activeColor={theme.colors.primary}\n        \n        // style={{backgroundColor: theme.colors.primary}}\n        // @ts-ignore\n        onTabPress={(route) => { navigation.navigate(route.route.key); store.setBottomBarSelectedIndex(route.route.id) }}\n      />\n  )\n};\n\nexport default BottomNavigator;\n","import React from \"react\";\nimport useStore from \"../../stores/store\";\nimport { Drawer, IconButton, Modal, Portal } from 'react-native-paper';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FULL_WIDTH } from \"../../constants/layout\";\nimport { View } from \"react-native\";\nimport I18n from \"i18n-js\";\nimport theme from \"../../constants/theme\";\n\nexport const drawerRoutes = [\n    {\n        id: 0,\n        title: \"home\",\n        key: \"Home\",\n        focusedIcon: \"home\",\n        unfocusedIcon: 'home-outline',\n    },\n    {\n        id: 1,\n        title: \"holipics\",\n        key: \"Model\",\n        focusedIcon: \"newspaper\",\n        unfocusedIcon: 'newspaper-variant',\n    },\n];\n\nconst DrawerNavigator: React.FC = () => {\n    const store = useStore();\n    const drawerOpened = useStore(state => state.drawerOpened)\n    const drawerSelectedIndex = useStore(state => state.drawerSelectedIndex)\n    const navigation = useNavigation();\n\n    return (\n        <Portal>\n            <Modal contentContainerStyle={{ flex: 1, alignItems: \"center\", justifyContent: \"center\", backgroundColor: theme.colors.background, width: FULL_WIDTH }} visible={drawerOpened} onDismiss={() => store.toggleDrawer()}>\n                <View style={{ width: \"100%\", flex: 1, alignItems: \"flex-start\", justifyContent: \"flex-start\"}}>\n                    <View style={{ flex: 1, alignItems: \"flex-end\", width: \"100%\", height: \"10%\" }}>\n                        <IconButton icon={\"close\"} onPress={() => store.toggleDrawer()}></IconButton>\n                    </View>\n                    <Drawer.Section style={{ height: \"90%\", width: \"100%\" }}>\n                        {\n                            drawerRoutes.map((item, index) => (\n                                <Drawer.Item\n                                    key={index}\n                                    label={I18n.t(item.title)}\n                                    style={index === drawerSelectedIndex ? { backgroundColor: theme.colors.primaryOpac }: {}}\n                                    active={index === drawerSelectedIndex}\n                                    onPress={() => {\n                                        if (item.key === \"Model\") {\n                                            // @ts-ignore\n                                            navigation.navigate(item.key, { id: \"holipics\" });\n                                        } else {\n                                            // @ts-ignore\n                                            navigation.navigate(item.key);\n                                        }\n                                        store.toggleDrawer()\n                                    }}\n                                />\n                            ))\n                        }\n                    </Drawer.Section>\n                </View>\n            </Modal>\n        </Portal>\n    )\n};\n\nexport default DrawerNavigator;\n","import React, { Fragment, } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Platform, ScrollView, View } from \"react-native\";\nimport Footer from \"./Footer\";\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../../constants/layout\";\nimport theme from \"../../constants/theme\";\nimport BottomNavigator from \"./BottomNavigator\";\nimport DrawerNavigator from \"./DrawerNavigator\";\n\n\nexport type LayoutProps = {\n  children: JSX.Element,\n  title?: string\n  backgroundColor?: string,\n  bottomNavigation?: boolean,\n  hideHeader?: boolean,\n  noScrollView?: boolean\n};\n\nconst Layout: React.FC<LayoutProps> = ({ children, backgroundColor, bottomNavigation, noScrollView }) => {\n\n  return (\n    <Fragment>\n      <StatusBar\n        translucent\n        backgroundColor=\"transparent\"\n      />\n      {\n        Platform.OS === \"web\" ?\n\n          <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\", maxHeight: WINDOW_HEIGHT, maxWidth: WINDOW_WIDTH, backgroundColor: backgroundColor || theme.colors.background }}>\n            <DrawerNavigator />\n            <ScrollView>\n              {children}\n            </ScrollView>\n          </View>\n          :\n          (\n            noScrollView ?\n              <>\n                <DrawerNavigator />\n                {children}\n              </>\n              :\n              <>\n                <DrawerNavigator />\n                <ScrollView>\n                  {children}\n                </ScrollView>\n              </>\n\n          )\n      }\n\n      {\n        bottomNavigation && Platform.OS !== \"web\" ?\n          <BottomNavigator /> :\n          null\n      }\n\n\n      {\n        Platform.OS === \"web\" ?\n          <Footer />\n          : null\n      }\n\n    </Fragment>\n  );\n};\n\n\nexport default Layout;\n","import React, { useRef, useState } from \"react\";\nimport { View, StyleSheet, Image, Alert } from \"react-native\";\nimport { Button, Checkbox, Chip, Text } from \"react-native-paper\";\nimport Layout from \"../../components/layout/Layout\";\nimport { WINDOW_HEIGHT, FULL_WIDTH } from \"../../constants/layout\";\nimport { sharedStyles } from \"../../styles/shared\";\nimport I18n from \"i18n-js\";\n// @ts-ignore\nimport illustration from \"../../assets/img/backup-wallet.png\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport theme from \"../../constants/theme\";\nexport default function SignUp() {\n    const navigation = useNavigation();\n    const [checked, setChecked] = useState(false);\n    const [seedPhrase, setSeedPhrase] = useState(\"dizzy spray tooth humor ready iron zero dream trophy define powder young laundry father dune inflict seat satoshi govern defense subject stadium wash now\");\n    const recoveryArray = useRef(seedPhrase.split(\" \").sort((a, b) => 0.5 - Math.random()))\n    const [enteredSeedPhrase, setEnteredSeedPhrase] = useState(seedPhrase);\n\n    const getTransformedEnteredSeedPhrase = ()  => {\n        if(enteredSeedPhrase.trim() === \"\") return []\n        const splitted = enteredSeedPhrase.trim().split(\" \");\n        return splitted.length > 0  ? splitted : []\n    }\n\n    const toggleWord = (word: string) => {\n        if (enteredSeedPhrase.includes(word)) {\n            setEnteredSeedPhrase(enteredSeedPhrase.replace(`${word} `, \"\").replace(word, \"\"))\n        } else {\n            setEnteredSeedPhrase(`${enteredSeedPhrase}${word} `)\n        }\n    }\n    return (\n        <Layout>\n            <View style={styles.fullContainer}>\n                <View style={{ ...styles.container }}>\n                    <Text variant=\"headlineMedium\" style={{ textAlign: \"center\", marginBottom: 10, fontWeight: \"600\" }}>{I18n.t(\"verify_recovery_phrase\")}</Text>\n                    <Text variant=\"bodyLarge\" style={{ textAlign: \"center\", marginBottom: 10 }}>{I18n.t(\"tap_the_words_to_put_them_next_to_each_other_in_the_correct_order\")}</Text>\n                </View>\n                <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"space-around\" }}>\n                    <View style={{ maxHeight: 400, flexDirection: \"row\", flexWrap: \"wrap\", width: \"100%\" }}>\n                        {\n                            recoveryArray.current.map((item: string, index: any) => (\n                                <Chip key={index} onPress={() => {\n                                    toggleWord(item)\n                                }} style={{\n                                    width: \"auto\",\n                                    maxHeight: 30,\n                                    margin: 2,\n                                    backgroundColor: enteredSeedPhrase.includes(item) ? theme.colors.info : theme.colors.chip\n                                }}>{index + 1} {item}</Chip>\n                            ))\n                        }\n                    </View>\n                    <View style={{ maxHeight: 400, flexDirection: \"row\", flexWrap: \"wrap\", width: \"100%\", marginTop: 20, marginBottom: 20 }}>\n                        {\n                            getTransformedEnteredSeedPhrase().map((item: string, index: any) => (\n                                <Chip key={index} onPress={() => {\n                                    toggleWord(item)\n                                }} style={{\n                                    backgroundColor: theme.colors.success,\n                                    width: \"auto\",\n                                    maxHeight: 30,\n                                    margin: 2\n                                }}>{index + 1} {item}</Chip>\n                            ))\n                        }\n                    </View>\n                </View>\n                <View style={{ ...styles.bottomSectionContainer }}>\n                    <Button mode=\"contained\" onPress={() => {\n                        if (seedPhrase !== enteredSeedPhrase.trim()) {\n                            return Alert.alert(I18n.t(\"error\"), I18n.t(\"recovery_phrases_do_not_match\"))\n                        }\n\n                        navigation.navigate(\"Wallets\");\n                    }}>{I18n.t(\"verify\")}</Button>\n                </View>\n            </View>\n        </Layout>\n    );\n}\n\nconst styles = StyleSheet.create({\n    fullContainer: {\n        minHeight: WINDOW_HEIGHT,\n        marginTop: 20,\n        width: FULL_WIDTH,\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"space-around\"\n    },\n    bottomSectionContainer: {\n        maxHeight: 100,\n        maxWidth: FULL_WIDTH,\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"flex-end\"\n    },\n    container: {\n        width: \"100%\",\n        // flex: 1,\n        alignItems: \"center\",\n        // justifyContent: \"space-around\"\n    },\n    image: { \n        width: 250,\n        height: 250 \n    },\n})\n","import { StyleSheet } from 'react-native';\n\nexport const sharedStyles = StyleSheet.create({\n  boxBordered: {\n    borderRadius: 4,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 1,\n      height: 4,\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10,\n    elevation: 5,\n  },\n\n  responsiveRow: {\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"100%\"\n  },\n\n  centeredText: {\n    textAlign: \"center\"\n  },\n\n  currencyLogo: {\n    width: 50,\n    height: 50\n  }\n});","import React from \"react\";\nimport { View, StyleSheet, Image } from \"react-native\";\nimport { Button, Text } from \"react-native-paper\";\nimport Layout from \"../../components/layout/Layout\";\nimport { WINDOW_HEIGHT, FULL_WIDTH } from \"../../constants/layout\"\n// @ts-ignore\nimport logo from \"../../assets/img/logo.png\"\nimport { sharedStyles } from \"../../styles/shared\";\nimport I18n from \"i18n-js\";\nimport { useNavigation } from \"@react-navigation/native\";\nexport default function Home() {\n  const navigation = useNavigation();\n  return (\n    <Layout>\n      <View style={styles.fullContainer}>\n        <View style={styles.container}>\n          <Image style={styles.image} source={logo} />\n          <Text variant=\"displaySmall\" style={{...sharedStyles.centeredText, marginBottom: 10, fontWeight: \"600\"}}>{I18n.t(\"on_boarding_slogan\")}</Text>\n          <Text variant=\"bodyLarge\" style={{textAlign: \"center\", padding: 4}}>{I18n.t(\"on_boarding_slogan_description\")}</Text>\n        </View>\n\n        <View style={{...styles.container, height: 200}}>\n          {/* @ts-ignore */}\n          <Button mode=\"contained\"  style={{marginTop: 10}} onPress={()=> navigation.navigate(\"Model\", {id: \"holipics\"})}>{I18n.t(\"evaluate_ai\")}</Button>\n        \n        </View>\n\n      </View>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fullContainer: {\n    maxHeight: WINDOW_HEIGHT,\n    minHeight: WINDOW_HEIGHT,\n    width: FULL_WIDTH,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  container: {\n    alignItems: \"center\",\n  },\n  image: { width: 300, height: 300 },\n})\n","import React from \"react\";\nimport { View, StyleSheet, Image } from \"react-native\";\nimport { Button, Text } from \"react-native-paper\";\nimport Layout from \"../../components/layout/Layout\";\nimport { WINDOW_HEIGHT, FULL_WIDTH } from \"../../constants/layout\"\n// @ts-ignore\nimport logo from \"../../assets/img/logo.png\"\nimport { sharedStyles } from \"../../styles/shared\";\nimport I18n from \"i18n-js\";\nimport { useNavigation } from \"@react-navigation/native\";\nexport default function OnBoarding() {\n  const navigation = useNavigation();\n  return (\n    <Layout hideHeader>\n      <View style={styles.fullContainer}>\n        <View style={styles.container}>\n          <Image style={styles.image} source={logo} />\n          <Text variant=\"displaySmall\" style={{...sharedStyles.centeredText, marginBottom: 10, fontWeight: \"600\"}}>{I18n.t(\"on_boarding_slogan\")}</Text>\n          <Text variant=\"bodyLarge\" style={sharedStyles.centeredText}>{I18n.t(\"on_boarding_slogan_description\")}</Text>\n        </View>\n\n        <View style={{...styles.container, height: 200}}>\n          {/* <Text variant=\"displayLarge\" style={sharedStyles.centeredText}>...</Text> */}\n          <Button mode=\"contained\"  style={{marginTop: 10}} onPress={()=> navigation.navigate(\"Home\")}>{I18n.t(\"get_started\")}</Button>\n          {/* <Button mode=\"text\" onPress={()=> navigation.navigate(\"SignIn\")}>{I18n.t(\"i_already_have_a_wallet\")}</Button> */}\n        </View>\n\n      </View>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fullContainer: {\n    maxHeight: WINDOW_HEIGHT,\n    minHeight: WINDOW_HEIGHT,\n    width: FULL_WIDTH,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  container: {\n    alignItems: \"center\",\n  },\n  image: { width: 300, height: 300 },\n})\n","import { Appbar, Avatar, Text } from \"react-native-paper\";\nimport { Platform, View } from \"react-native\";\nimport { FULL_WIDTH, WINDOW_WIDTH } from \"../../constants/layout\";\nimport I18n from \"i18n-js\";\nimport DrawerNavigator from \"./DrawerNavigator\";\nimport theme from \"../../constants/theme\";\nimport React from \"react\";\nimport useStore from \"../../stores/store\";\n\nexport default function Header(props: Record<string, any>) {\n  // const MORE_ICON = Platform.OS === 'ios' ? 'dots-vertical' : 'dots-vertical';\n  const store = useStore();\n  if (Platform.OS === \"web\") {\n    return (\n      <View style={{ width: WINDOW_WIDTH, flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Appbar.Header style={{ width: FULL_WIDTH , flex: 1, alignItems: \"center\", justifyContent: \"space-between\", flexDirection: \"row\", backgroundColor: theme.colors.primaryOpac}}>\n          <Avatar.Image size={50} source={require('../../assets/img/logo.png')} />\n          <Appbar.Action icon=\"menu\" onPress={() => store.toggleDrawer()} />\n        </Appbar.Header>\n      </View>\n    )\n  } else {\n    return (\n      <>\n        <Appbar.Header style={{ maxWidth: FULL_WIDTH, minWidth: FULL_WIDTH, backgroundColor: theme.colors.primaryOpac }}>\n          {props.back ? <Appbar.BackAction onPress={props.navigation.goBack} /> : null}\n          <Appbar.Content title={props.options.headerTitle != undefined ? I18n.t(props.options.headerTitle) : \"\"} />\n          {/* <Appbar.Action icon={MORE_ICON} onPress={() => { }} /> */}\n          <Appbar.Action icon=\"menu\" onPress={() => store.toggleDrawer()} />\n        </Appbar.Header>\n      </>\n    )\n  }\n}\n","import React, { useRef, useState } from \"react\";\nimport { View, StyleSheet, Image } from \"react-native\";\nimport { Text, IconButton, List, Divider } from \"react-native-paper\";\nimport Layout from \"../../components/layout/Layout\";\nimport { FULL_WIDTH } from \"../../constants/layout\";\nimport { sharedStyles } from \"../../styles/shared\";\nimport I18n from \"i18n-js\";\n// @ts-ignore\nimport { useNavigation } from \"@react-navigation/native\";\nimport theme from \"../../constants/theme\";\n// @ts-ignore\nimport logo from \"../../assets/img/logo.png\"\n// @ts-ignore\nimport stellarLogo from \"../../assets/img/stellar-logo.png\"\n\nexport default function Models() {\n  const navigation = useNavigation();\n  const [checked, setChecked] = React.useState(false);\n  const [modalVisible, setModalStatus] = useState(false);\n  const sheetRef = useRef(null);\n  const [seedPhrase, setSeedPhrase] = useState(\"dizzy spray tooth humor ready iron zero dream trophy define powder young laundry father dune inflict seat satoshi govern defense subject stadium wash now\");\n  return (\n    <Layout title={I18n.t(\"home\")} bottomNavigation={true}>\n      <View style={styles.fullContainer}>\n        <View style={{ ...styles.container }}>\n          <Text variant=\"displaySmall\" style={{ ...sharedStyles.centeredText, marginBottom: 10, color: theme.colors.headerControls, fontWeight: \"600\" }}>10 CM</Text>\n          <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"space-around\", flexDirection: \"row\", height: 70, width: \"60%\" }}>\n\n            <View style={{ ...styles.container }}>\n              <IconButton icon=\"arrow-up\" style={{ width: 40, height: 40, backgroundColor: theme.colors.background }}></IconButton>\n              <Text style={{ fontWeight: \"600\", color: theme.colors.headerControls }}>{I18n.t(\"send\")}</Text>\n            </View>\n            <View style={{ ...styles.container }}>\n              <IconButton icon=\"swap-vertical\" style={{ width: 40, height: 40, backgroundColor: theme.colors.background }}></IconButton>\n              <Text style={{ fontWeight: \"600\", color: theme.colors.headerControls }}>{I18n.t(\"swap\")}</Text>\n            </View>\n            <View style={{ ...styles.container }}>\n              <IconButton icon=\"arrow-down\" style={{ width: 40, height: 40, backgroundColor: theme.colors.background }}></IconButton>\n              <Text style={{ fontWeight: \"600\", color: theme.colors.headerControls }}>{I18n.t(\"receive\")}</Text>\n            </View>\n\n          </View>\n        </View>\n\n        <View style={{ width: \"100%\", backgroundColor: theme.colors.headerControls, minHeight: 600, borderRadius: 20 }}>\n          <List.Item\n            style={{ width: \"114%\", margin: 0 }}\n            title=\"Stellar\"\n            description=\"$20.14 +2.5%\"\n            left={props => <Image source={stellarLogo} style={sharedStyles.currencyLogo} />}\n            right={props =>\n              <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"flex-end\" }}>\n                <Text variant=\"titleMedium\" style={{ ...sharedStyles.centeredText }}>10 XLM</Text>\n                <Text variant=\"bodySmall\" style={{ ...sharedStyles.centeredText, color: theme.colors.gray }}>$2.64</Text>\n              </View>\n            }\n          >\n          </List.Item>\n          <Divider />\n          <List.Item\n            style={{ width: \"114%\", margin: 0 }}\n            title=\"Cryptomarket Token\"\n            description=\"$20.14 +2.5%\"\n            left={props => <Image source={logo} style={sharedStyles.currencyLogo} />}\n            right={props =>\n              <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"flex-end\" }}>\n                <Text variant=\"titleMedium\" style={{ ...sharedStyles.centeredText }}>10 CM</Text>\n                <Text variant=\"bodySmall\" style={{ ...sharedStyles.centeredText, color: theme.colors.gray }}>$2.64</Text>\n              </View>\n            }\n          >\n          </List.Item>\n        </View>\n\n      </View>\n\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fullContainer: {\n    height: \"100%\",\n    width: FULL_WIDTH\n  },\n  container: {\n    width: \"100%\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  }\n})\n","import environment from \"../constants/environment\"\n\nexport const formatUrl = (path: string)=>{\n    return `${environment.apiUrl}/${path}`\n}\n\nexport const getLogoUrl = ()=>{\n    return formatUrl(\"public/logo\")\n}\n\nexport const getImageUrl = (imageId: string)=>{\n    return formatUrl(`file/${imageId}`)\n}","export const languages = {\n    fr: {\n        key: \"fr-FR\"\n    },\n    en: {\n        key: \"en-US\"\n    }\n}\n\nexport const translations = {\n    fr: {\n        welcome: 'Bienvenue',\n        on_boarding_slogan: ''\n    },\n    en: {\n        welcome: 'Welcome',\n        on_boarding_slogan: 'Welcome to megamax dev',\n        on_boarding_slogan_description: 'Discover more about artificial intelligence and technology',\n        get_started: \"Get Started\",\n        home: \"Home\",\n        create_new_wallet: 'Create a new wallet',\n        i_already_have_a_wallet: 'I already have a wallet',\n        legal: \"Legal\",\n        please_review_the_terms_of_service_and_privacy_policy: \"Please review the CMCI wallet Terms of Service and Privacy Policy\",\n        privacy_policy: \"Privacy policy\",\n        terms_of_service: \"Terms of service\",\n        continue: \"Continue\",\n        backup_wallet: \"Backup Wallet\",\n        i_ve_read_and_accept_the_terms_of_service_and_privacy_policy: \"I've read and accept the terms of service and privacy policy\",\n        you_should_accept_our_policies_first: \"You should accept our policies first\",\n        error: \"Error\",\n        i_understand_that_if_i_lose_my_recovery_words_i_will_not_be_able_to_access_my_wallet: \"I understand that if i lose my recovery words i will not be able to access my wallet\",\n        make_sure_to_agree_with_our_guidelines: \"Make sure to agree with our guidelines\",\n        backup_your_wallet_now: \"Backup your wallet now\",\n        in_the_following_sequence_you_will_see_24_words_that_will_allow_you_to_backup_up_your_wallet: \"In the following sequence you will see 24 words that will allow you to backup up your wallet\",\n        sign_up: \"Sign Up\",\n        your_recovery_phrase: \"Your recovery phrase\",\n        write_down_or_copy_these_words_in_the_right_order_and_save_them_somewhere_safe: \"Write down or copy these words in the right order and save them somewhere safe\",\n        verify_recovery_phrase: \"Verify recovery phrase\",\n        tap_the_words_to_put_them_next_to_each_other_in_the_correct_order: \"Tap the words to put them next to each other in the correct order\",\n        verify: \"Verify\",\n        recovery_phrases_do_not_match: \"Recovery phrases do not match\",\n        wallet: \"Wallet\",\n        wallets: \"Wallets\",\n        send: \"Send\",\n        receive: \"Receive\",\n        swap: \"Swap\",\n        settings: \"Settings\",\n        refresh: \"Refresh\",\n        models: \"Models\",\n        model: \"model\",\n        articles: \"Articles\",\n        account: \"Account\",\n        evaluate_ai: \"Evaluate ai\",\n        image_url: \"Image url\",\n        submit: \"Submit\",\n        test: \"Test\",\n        comment:  \"Comment\",\n        submit_feedback: \"Submit feedback\",\n        see_documentation: \"See documentation\",\n        holipics: \"Holipics\"\n    },\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { FlatList, Linking, Platform, StyleSheet, TouchableHighlight, View } from \"react-native\";\nimport { Button, Card, IconButton, Paragraph, TextInput, Title, Text, ActivityIndicator, Portal, Modal } from \"react-native-paper\";\nimport Layout from \"../../components/layout/Layout\";\nimport { FULL_WIDTH, SMALL_SCREEN, WINDOW_HEIGHT } from \"../../constants/layout\";\nimport I18n from \"i18n-js\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport useSWR from \"swr\";\nimport { formatUrl } from \"../../helpers/utils\";\nimport useStore from \"../../stores/store\";\nimport { languages } from \"../../constants/translations\";\nimport * as FileSystem from \"expo-file-system\";\nimport { Camera } from \"expo-camera\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nexport default function Model({ route }) {\n  const { id } = route.params;\n  const toast = {\n    show: ({ title }) => { },\n    closeAll: () => { },\n    close: (id: any) => { }\n  }\n  const navigation = useNavigation();\n  const configs = useStore(state => state.configs);\n  const req = useSWR(\"models\", async (...args: any) => {\n    const data = configs.models.find((item) => item.name == id);\n    const supData = data.translations.find((item) => item.languages_id == languages[I18n.locale].key)\n    return { ...data, ...supData }\n  }, {\n    revalidateOnFocus: false,\n    shouldRetryOnError: true,\n  });\n\n  const [predictions, setPredictions] = useState<Record<string, any>[]>([]);\n  const [predictionControls, setPredictionControls] = useState({\n    cameraOn: false,\n    cameraPermissionGranted: false,\n    cameraType: Camera.Constants.Type[\"front\"]\n  });\n\n  const cameraRef = useRef(null);\n  const formRef = useRef({\n    imageUrl: \"\"\n  })\n\n  const [predictionModalData, setPredictionModalData] = useState({\n    visible: false,\n    content: {\n      id: \" \",\n      uri: \"\",\n      textData: \"\",\n      json: {},\n      rating: -1,\n      comment: null\n    } as Record<string, any>\n  })\n\n  const predict = async (base64Image: string = null, url: string = null, live = false) => {\n    const id = toast.show({ title: \"Prédiction en cours\" });\n\n    setLoadingStatus(true)\n    try {\n      const formData = new FormData();\n      formData.append(\"get_image_back\", \"true\")\n      if (base64Image != null) {\n        formData.append(\"base64_image\", base64Image);\n      }\n      if (url != null) {\n        formData.append(\"url\", url);\n      }\n\n      const res = await fetch(formatUrl(`ai/predict/${req.data?.name}?culture=${I18n.locale}`), { body: formData, method: \"POST\" })\n      const resJson = await res.json();\n\n      if (resJson.data === undefined) throw new Error(\"No data returned\");\n\n      const { id, text_data } = resJson.data;\n      const predictionOutput = {\n        id,\n        textData: text_data,\n        json: resJson.data,\n        uri: resJson.data.base64_image,\n        rating: -1,\n        comment: null\n      }\n\n      setPredictions([\n        ...[predictionOutput],\n        ...predictions\n      ]);\n\n\n    } catch (error) {\n      console.log(\"handled error => \", error);\n      toast.closeAll();\n      toast.show({\n        title: \"Nous avons rencontré un problème lors de l'opération\",\n      });\n    } finally {\n      toast.close(id);\n      setLoadingStatus(false);\n    }\n  };\n\n  const pickImage = async () => {\n    // No permissions request is necessary for launching the image library\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        // aspect: [4, 3],\n        quality: 1,\n      });\n\n      if (!result.cancelled) {\n        const base64: string = Platform.OS === \"web\"\n          ? (result as Record<string, any>).uri\n          : `data:image/jpg;base64,${await FileSystem.readAsStringAsync(\n            (result as Record<string, any>).uri,\n            { encoding: \"base64\" }\n          )}`\n        // console.log(base64);\n\n        await predict(base64);\n      }\n    } catch (error) {\n      toast.closeAll();\n      toast.show({\n        title: \"Nous avons rencontré un problème lors de l'opération\",\n      });\n    }\n  };\n\n  const [isLoading, setLoadingStatus] = useState(false);\n\n  const handleImageCapture = async () => {\n    try {\n      const imageData = await cameraRef.current?.takePictureAsync({\n        base64: true,\n      });\n      await predict(imageData.base64, null, false)\n\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setPredictionControls({ ...predictionControls, cameraOn: false })\n    }\n  };\n\n  useEffect(() => {\n\n    (async () => {\n      const cameraPermission = await Camera.requestCameraPermissionsAsync();\n      if (cameraPermission.status === \"granted\") {\n        setPredictionControls({ ...predictionControls, cameraPermissionGranted: true })\n      }\n\n    })()\n\n  }, []);\n\n\n\n  return (\n    <Layout>\n      <>\n        <Portal>\n          <Modal contentContainerStyle={{ flex: 1, alignItems: \"center\", justifyContent: \"center\", backgroundColor: 'white', padding: 20, width: FULL_WIDTH }} visible={predictionModalData.visible} onDismiss={() => setPredictionModalData({ ...predictionModalData, visible: false })}>\n            <Card key={predictionModalData.content.id}>\n              <Card.Cover source={{ uri: predictionModalData.content.uri }} />\n              <Card.Content>\n                <Paragraph>{predictionModalData.content.textData}</Paragraph>\n                {/* @ts-ignore */}\n                <TextInput\n                  label={I18n.t(\"comment\")}\n                  onChangeText={text => setPredictionModalData({ ...predictionModalData, content: { ...predictionModalData.content, comment: text } })}\n                  style={{ width: \"100%\", marginBottom: 10 }}\n                />\n                <View style={{ minHeight: 100, flex: 1, alignItems: \"center\", justifyContent: \"space-around\", flexDirection: \"row\" }}>\n\n                  {\n                    [...Array(5).keys()].map((star) => (\n                      <IconButton key={star} iconColor={predictionModalData.content.rating >= star ? \"#ffff00\" : \"#000\"} icon=\"star\" mode=\"contained\" onPress={() => {\n                        setPredictionModalData({\n                          ...predictionModalData,\n                          content: {\n                            ...predictionModalData.content,\n                            rating:\n                              predictionModalData.content.rating === star\n                                ? star - 1\n                                : star\n                          }\n                        })\n                      }} />\n                    ))\n                  }\n\n                </View>\n              </Card.Content>\n              <Card.Actions style={{ marginTop: 100 }}>\n\n                <Button mode=\"contained\" onPress={async () => {\n                  try {\n                    setLoadingStatus(true)\n                    const res = await fetch(\n                      formatUrl(\"items/feedbacks\"),\n                      {\n                        body: JSON.stringify(\n                          {\n                            comment: predictionModalData.content.comment,\n                            rating: predictionModalData.content.rating - 1,\n                            model_id: req.data?.id,\n                            prediction_data: predictionModalData.content.json || null,\n                            image_data: predictionModalData.content.uri,\n                          }\n                        ),\n                        method: \"POST\"\n                      }\n                    );\n\n\n                    if ([204, 200].includes(res.status)) {\n                      toast.closeAll();\n                      toast.show({ title: \"Réponse soumise avec succès\" });\n                      return setPredictionModalData({ ...predictionModalData, visible: false })\n                    }\n                  } catch (error) {\n                    console.log(error);\n                  } finally {\n                    setLoadingStatus(false);\n                  }\n                }}>{I18n.t(\"submit_feedback\")}</Button>\n\n                <IconButton icon=\"close\" mode=\"contained\" style={{ flexBasis: \"10%\" }} onPress={() => {\n                  setPredictionModalData({ ...predictionModalData, visible: false })\n                }} />\n\n                <IconButton icon=\"delete\" mode=\"contained\" style={{ flexBasis: \"10%\" }} onPress={() => {\n                  const currentPredictions = predictions.filter(\n                    (item) => item.id !== predictionModalData.content.id\n                  );\n                  setPredictions(currentPredictions);\n                  setPredictionModalData({ ...predictionModalData, visible: false })\n                }} />\n\n\n\n              </Card.Actions>\n            </Card>\n          </Modal>\n        </Portal>\n\n        <Portal>\n          <Modal contentContainerStyle={{ flex: 1, alignItems: \"center\", justifyContent: \"center\", backgroundColor: 'white', padding: 20, width: FULL_WIDTH }} visible={predictionControls.cameraPermissionGranted && predictionControls.cameraOn} onDismiss={() => setPredictionControls({ ...predictionControls, cameraOn: false })} >\n            <Camera\n              ref={cameraRef}\n              style={{\n                width: FULL_WIDTH - 20,\n                height: 500,\n              }}\n              // @ts-ignore\n              type={predictionControls.cameraType}\n              autoFocus={true}\n              // @ts-ignore\n              whiteBalance={Camera.Constants.WhiteBalance.auto}\n            ></Camera>\n\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"space-around\", flexDirection: \"row\", flexWrap: \"wrap\", width: FULL_WIDTH }}>\n\n              <IconButton icon=\"camera-iris\" mode=\"contained\" style={{ flexBasis: \"50%\" }} onPress={() => handleImageCapture()} />\n\n              <IconButton icon=\"camera-retake\" mode=\"contained\" style={{ flexBasis: \"10%\" }} onPress={() => {\n                setPredictionControls({\n                  ...predictionControls,\n                  // @ts-ignore\n                  cameraType: predictionControls.cameraType === Camera.Constants.Type.front ? Camera.Constants.Type.back : Camera.Constants.Type.front\n                })\n              }} />\n\n              <IconButton icon=\"close-circle-outline\" mode=\"contained\" style={{ flexBasis: \"10%\" }} onPress={() => {\n                setPredictionControls({ ...predictionControls, cameraOn: false })\n              }} />\n\n            </View>\n\n          </Modal>\n        </Portal>\n\n        <Card>\n          {/* <Card.Title title={req.data?.title} /> */}\n          <Card.Cover source={{ uri: formatUrl(`file/${req.data?.thumb}`) }} />\n          <Card.Content>\n            <Title>{req.data?.title}</Title>\n            <Paragraph>{req.data?.description}</Paragraph>\n            <Button mode=\"contained\" style={{ marginTop: 10 }} onPress={() => Linking.openURL(req.data?.doc_url)}>{I18n.t(\"see_documentation\")}</Button>\n          </Card.Content>\n        </Card>\n\n        <View>\n          <Text style={{ textAlign: \"center\", padding: 20 }} variant=\"titleMedium\">{I18n.t(\"test\")} {req.data?.title}</Text>\n          <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"space-around\", flexDirection: \"row\", flexWrap: \"wrap\", width: FULL_WIDTH }}>\n            {/* @ts-ignore */}\n            <TextInput\n              label={I18n.t(\"image_url\")}\n              // value={formRef.current.imageUrl}\n              onChangeText={text => formRef.current.imageUrl = text}\n              style={{ flexBasis: \"85%\", width: \"89%\", marginBottom: 10 }}\n            />\n            <IconButton icon=\"send\" mode=\"contained\" style={{ flexBasis: \"10%\" }} onPress={() => predict(null, formRef.current.imageUrl)} />\n          </View>\n\n          <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"space-around\", flexDirection: \"row\", flexWrap: \"wrap\", width: FULL_WIDTH }}>\n\n            <IconButton icon=\"camera\" mode=\"contained\" style={{ flexBasis: \"10%\" }} onPress={() => setPredictionControls({ ...predictionControls, cameraOn: true })} />\n\n            <IconButton icon=\"file\" mode=\"contained\" style={{ flexBasis: \"10%\" }} onPress={() => pickImage()} />\n\n            <IconButton icon=\"image-filter-hdr\" mode=\"contained\" style={{ flexBasis: \"10%\" }} onPress={() => predict()} />\n\n            <IconButton icon=\"delete\" mode=\"contained\" style={{ flexBasis: \"10%\" }} onPress={() => setPredictions([])} />\n          </View>\n        </View>\n        {\n          isLoading ?\n            <ActivityIndicator />\n            :\n            null\n        }\n\n        {\n          predictions.map((item) => (\n            <TouchableHighlight\n              key={item.id}\n              onPress={() => setPredictionModalData({ visible: true, content: { ...predictionModalData, ...item } })}>\n              <Card key={item.id}>\n                <Card.Cover source={{ uri: item.uri }} />\n                <Card.Content>\n                  {/* <Title>{item.textData}</Title> */}\n                  <Paragraph>{item.textData}</Paragraph>\n                  {/* <Card.Actions>\n                    <IconButton icon=\"delete\"/>\n                  </Card.Actions> */}\n                </Card.Content>\n              </Card>\n            </TouchableHighlight>\n          ))\n        }\n      </>\n\n\n\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fullContainer: {\n    height: \"100%\",\n    width: FULL_WIDTH\n  },\n  container: {\n    width: \"100%\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  }\n})\n","import { NavigationContainer } from \"@react-navigation/native\";\nimport React, { useEffect } from \"react\";\nimport Error from \"../../screens/error/Error\";\nimport { RootStackParamList } from \"../../@types/types\";\nimport { LinkingOptions } from \"@react-navigation/native\";\nimport * as Linking from \"expo-linking\";\nimport { darkTheme, lightTheme, theme } from \"../../constants/theme\";\nimport useStore from \"../../stores/store\";\nimport SignIn from \"../../screens/authentication/SignIn\";\nimport SignUp from \"../../screens/authentication/SignUp\";\nimport Security from \"../../screens/account/Security\";\nimport Home from \"../../screens/home/Home\";\nimport OnBoarding from \"../../screens/onBoarding/OnBoarding\";\nimport NotFound from \"../../screens/error/NotFound\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Header from \"../layout/Header\";\nimport { bottomRoutes } from \"../layout/BottomNavigator\";\nimport Models from \"../../screens/ai/Models\";\nimport Model from \"../../screens/ai/Model\";\nimport Articles from \"../../screens/blog/Articles\";\nimport Portfolio from \"../../screens/blog/Portfolio\";\nimport Account from \"../../screens/account/Account\";\nimport { drawerRoutes } from \"../layout/DrawerNavigator\";\n\n\nexport type CustomRoute = {\n  // path: string;\n  component: React.FC<any>;\n  icon?: React.FC<any>;\n  access?: string;\n  title?: string;\n  modal?: boolean;\n  directLink?: boolean;\n  hideTitle?: boolean;\n  hideHeader?: boolean;\n};\n\ntype RouteGroup = Array<CustomRoute>;\ntype Routes = Record<string, RouteGroup>;\n\n\nexport const routes: Routes = {\n\n  OnBoarding: [\n    {\n      component:\n        OnBoarding,\n      title: \"on_boarding\",\n      hideHeader: true\n    }\n  ],\n\n  Home: [\n    {\n      component: Home,\n      title: \"home\",\n      modal: true\n    },\n  ],\n\n  AI: [\n    {\n      component: Models,\n      title: \"models\",\n      modal: true\n    },\n    {\n      component: Model,\n      title: \"model\",\n      modal: false\n    },\n  ],\n\n  Authentication: [\n    {\n      component: SignUp,\n      access: \"only-disconnected\",\n      title: \"sign_up\",\n      modal: true,\n      hideTitle: true\n    },\n    {\n      component: SignIn,\n      access: \"only-disconnected\",\n      title: \"SignIn\",\n      hideHeader: true\n    }\n  ],\n\n  Account: [\n    {\n      component: Account,\n      title: \"account\",\n    },\n    {\n      component: Security,\n      title: \"security\"\n    },\n  ],\n\n  Blog: [\n    {\n      component: Articles,\n      title: \"articles\",\n    },\n    {\n      component: Portfolio,\n      title: \"portfolio\"\n    },\n  ],\n\n  Error: [\n    { \n      component: Error, \n      title: \"error\" \n    },\n    { \n      component: NotFound,\n      title: \"not_found\"\n    }\n  ],\n\n};\n\nexport const linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl(\"/\")],\n  config: {\n    screens: {\n      OnBoarding: \"/on-boarding\",\n      Home: '/',\n      Models: '/models',\n      Model: \"/model/:id\",\n      SignUp: \"/sign-up\",\n      SignIn: \"sign-in\",\n      Account: '/me',\n      Security: '/security',\n      Articles: '/articles',\n      Portfolio: '/portfolio',\n      Error: '/error',\n      NotFound: '*'\n    },\n  },\n};\n\nconst Stack = createStackNavigator();\n\ntype NavigationProps = {\n  colorMode: \"dark\" | \"light\"\n}\n\nexport default function Navigation({ colorMode }: NavigationProps) {\n\n  const renderScreen = (routeGroup: CustomRoute) => {\n    return (\n      <Stack.Screen\n        key={routeGroup.component.name}\n        name={routeGroup.component.name as keyof RootStackParamList}\n        component={routeGroup.component}\n        options={({ navigation }) => ({\n          title: routeGroup.title,\n          headerTitle: routeGroup.title,\n          headerShown: routeGroup.hideHeader ? false : true,\n          headerTintColor: theme.colors.headerControls\n        })}\n      />\n    );\n  };\n\n  const store = useStore();\n\n  return (\n    <NavigationContainer\n      linking={linking}\n      theme={colorMode === \"dark\" ? darkTheme : lightTheme}\n\n    >\n      <Stack.Navigator initialRouteName=\"Home\"\n        screenOptions={{\n          header: (props) => <Header {...props} />,\n        }}\n\n        screenListeners={({ navigation, route }) => ({\n\n          state: (e) => {\n\n            bottomRoutes.map((currentRoute, index) => {\n              if (currentRoute.key === route.name) return store.setBottomBarSelectedIndex(index);\n            })\n\n            drawerRoutes.map((currentRoute, index) => {\n              if (currentRoute.key === route.name) return store.setDrawerSelectedIndex(index);\n            })\n\n          },\n        })}\n      >\n        {Object.keys(routes).map((routeName: string) =>\n          routes[routeName].map((routeGroup: CustomRoute) =>\n            // @ts-ignore\n            <Stack.Group screenOptions={routeGroup.modal ? { presentation: \"modal\" } : {}}>{renderScreen(routeGroup)}</Stack.Group>\n          )\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n\n","import { Text, View } from \"react-native\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/Layout\";\nimport { Button } from \"react-native-paper\";\nimport { useNavigation } from \"@react-navigation/native\";\nexport default function SignIn() {\n  const navigation = useNavigation();\n  return (\n    <Layout>\n      <View>\n      <Text>SignIn</Text>\n      <Button onPress={()=> navigation.navigate(\"SignUp\")}>Hey</Button>\n      </View>\n    </Layout>\n  );\n}\n","import { Text, View } from \"react-native\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/Layout\";\n\nexport default function Account() {\n  return (\n    <Layout>\n      <View>\n        <Text>Account</Text>\n      </View>\n    </Layout>\n  );\n}\n","import { Text, View } from \"react-native\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/Layout\";\nexport default function Security() {\n  return (\n    <Layout>\n      <View>\n        <Text>Security</Text>\n      </View>\n    </Layout>\n  );\n}\n","import { Text, View } from \"react-native\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/Layout\";\n\nexport default function Articles() {\n  return (\n    <Layout>\n      <View>\n        <Text>Articles</Text>\n      </View>\n    </Layout>\n  );\n}\n","import { Text, View } from \"react-native\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/Layout\";\n\nexport default function Portfolio() {\n  return (\n    <Layout>\n      <View>\n        <Text>Portfolio</Text>\n      </View>\n    </Layout>\n  );\n}\n","import { Text, View } from \"react-native\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/Layout\";\nimport CustomErrorFallback from \"../../components/custom/Error\";\nexport default function Error() {\n  return (\n    <CustomErrorFallback error={{} as Error} resetError={() => null} />\n  );\n}\n","import { Text, View } from \"react-native\";\nimport React from \"react\";\nimport Layout from \"../../components/layout/Layout\";\nexport default function NotFound() {\n  return (\n    <Layout>\n      <View>\n        <Text>NotFound</Text>\n      </View>\n    </Layout>\n  );\n}\n","type Props = {\n  condition: boolean;\n  children: JSX.Element;\n  fallBack?: JSX.Element;\n};\n\ntype RenderProps = {\n  condition: boolean;\n  component: JSX.Element;\n  fallBack?: JSX.Element;\n};\n\nexport const ConditionalSuspense = ({\n  condition,\n  children,\n  fallBack,\n}: Props) => {\n  if (condition) return children;\n  return fallBack != undefined ? fallBack : null;\n};\n\nexport const ConditionalRender = ({\n  condition,\n  component,\n  fallBack,\n}: RenderProps) => {\n  if (condition) return component;\n  return fallBack != undefined ? fallBack : null;\n};\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { ActivityIndicator } from \"react-native-paper\";\nimport { WINDOW_HEIGHT, WINDOW_WIDTH } from \"../../constants/layout\";\nexport default function () {\n    return (\n        <View style={{ width: WINDOW_WIDTH, height: WINDOW_HEIGHT, flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <ActivityIndicator/>\n        </View>\n    );\n}\n\n","import useStore from \"../../stores/store\";\nimport { formatUrl } from \"../../helpers/utils\";\nimport React from \"react\";\nimport useSWR, { SWRConfig } from \"swr\";\nimport ErrorBoundary from \"react-native-error-boundary\";\nimport { ConditionalSuspense } from \"../layout/ConditionalSuspense\";\nimport {\n  getJsonData,\n  storeJsonData,\n} from \"../../helpers/local-storage\";\nimport { CONFIG_KEY_NAME } from \"../../constants/global\";\nimport CustomErrorFallback, { errorHandler } from \"../custom/Error\";\nimport Loader from \"../custom/Loader\";\nimport i18n from 'i18n-js';\nimport { translations } from \"../../constants/translations\";\n// import * as Localization from 'expo-localization';\ni18n.translations = translations;\n// Set the locale once at the beginning of your app.\n// i18n.locale = Localization.locale;\n\ntype DataProviderProps = {\n  children: JSX.Element;\n};\nconst DataProvider: React.FC<DataProviderProps> = ({ children }) => {\n  const store = useStore();\n\n  const configs = useSWR(formatUrl(\"config\"), async (...args: Parameters<typeof fetch>) => {\n    try {\n      \n      const res = await fetch(...args);\n      const resJson = await res.json();\n\n      if (resJson.errors !== undefined || resJson.data === undefined || Object.keys(resJson.data).length == 0)\n        throw new Error(\"No config found\");\n\n      // await storeJsonData(CONFIG_KEY_NAME, resJson.data);\n\n      store.setConfigs(resJson.data);\n      return resJson.data;\n    } catch (error) {      \n      if(Object.keys(store.configs).length == 0) throw new Error(\"No local config\");\n\n      // const data = await getJsonData(CONFIG_KEY_NAME);\n      // if (data === null || Object.keys(data).length === 0) throw new Error(\"No local config\");\n      // store.setConfigs(data);\n\n      return store.configs;\n    }\n  }, {\n    revalidateOnFocus: false,\n    shouldRetryOnError: true,\n  });\n\n\n  return (\n    // @ts-ignore\n    <ErrorBoundary\n      onError={errorHandler}\n      FallbackComponent={CustomErrorFallback}\n    >\n      <SWRConfig>\n        <ConditionalSuspense\n          condition={configs.data != undefined && Object.keys(configs.data).length != 0}\n          fallBack={<Loader />}\n        >\n          {children}\n        </ConditionalSuspense>\n      </SWRConfig>\n    </ErrorBoundary>\n  );\n};\n\nexport default DataProvider;\n","import { StatusBar } from \"expo-status-bar\";\nimport \"react-native-gesture-handler\";\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport theme from \"./constants/theme\";\nimport Navigation from \"./components/navigation\";\nimport DataProvider from \"./components/providers/DataProvider\";\nimport { Fragment } from \"react\";\nimport useStore from \"./stores/store\";\nimport { View } from \"react-native\";\nimport { FULL_WIDTH, WINDOW_HEIGHT } from \"./constants/layout\";\n// import {\n//   useFonts,\n//   Inter_100Thin,\n//   Inter_200ExtraLight,\n//   Inter_300Light,\n//   Inter_400Regular,\n//   Inter_500Medium,\n//   Inter_600SemiBold,\n//   Inter_700Bold,\n//   Inter_800ExtraBold,\n//   Inter_900Black,\n// } from \"@expo-google-fonts/inter\";\n\nexport default function App() {\n  const colorMode = useStore((state) => state.colorMode);\n  if (process.env.NODE_ENV !== \"development\") console.log = () => { }\n  // let [fontsLoaded] = useFonts({\n  //   Inter_100Thin,\n  //   Inter_200ExtraLight,\n  //   Inter_300Light,\n  //   Inter_400Regular,\n  //   Inter_500Medium,\n  //   Inter_600SemiBold,\n  //   Inter_700Bold,\n  //   Inter_800ExtraBold,\n  //   Inter_900Black,\n  // });\n\n  // if (!fontsLoaded) {\n  //   return <></>;\n  // }\n\n  return (\n    // @ts-ignore\n    <PaperProvider theme={{ ...theme, dark: colorMode === \"dark\" }}>\n      <DataProvider>\n        <Fragment>\n          <StatusBar />\n            <Navigation colorMode={colorMode} />\n        </Fragment>\n      </DataProvider>\n    </PaperProvider>\n  );\n}\n"],"sourceRoot":""}