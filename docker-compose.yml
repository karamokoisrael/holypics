version: '3.4'
services:
  website:
    container_name: ${WEBSITE_CONTAINER_NAME}
    restart: always
    build:
      context: app
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - ${WEBSITE_PORT}:3000

  wordpress:
    container_name: ${WORDPRESS_CONTAINER_NAME}
    depends_on:
      - db
    image: wordpress:latest
    env_file:
      - .env
      - config/environment/wordpress.env
    ports:
      - ${WORDPRESS_PORT}:80
    restart: always
    environment:
       WORDPRESS_DB_HOST: "${DB_CONTAINER_NAME}:3306"
       WORDPRESS_DB_USER: "${MYSQL_USER}"
       WORDPRESS_DB_PASSWORD: "${MYSQL_PASSWORD}"
       WORDPRESS_DB_NAME: "${WORDPRESS_DB}"

  backoffice:
    container_name: ${BACKOFFICE_CONTAINER_NAME}
    restart: always
    build: 
      dockerfile: Dockerfile
      context: backoffice
    env_file:
      - .env
      - config/environment/backoffice.env
    ports:
      - ${BACKOFFICE_PORT}:8055
    links:
      - db:db
    depends_on:
      - db
    volumes:
      - ./backoffice/extensions:/app/extensions
      - backoffice_migration:/app/migration
      - backoffice_uploads:/app/uploads


  backoffice2:
    container_name: ${BACKOFFICE_2_CONTAINER_NAME}
    restart: always
    build: 
      dockerfile: Dockerfile
      context: le-bon-coursier
    env_file:
      - .env
      - config/environment/backoffice-2.env
    ports:
      - ${BACKOFFICE_2_PORT}:8055
    links:
      - db:db
    depends_on:
      - db
    volumes:
      - ./le-bon-coursier/extensions:/app/extensions
      - backoffice_2_migration:/app/migration
      - backoffice_2_uploads:/app/uploads

  db:
    container_name: ${DB_CONTAINER_NAME}
    image: mysql:latest 
    restart: always
    ports:
      - ${DB_PORT}:3306 
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - db_data:/var/lib/mysql
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"

  filebrowser:
    container_name: ${FILEBROWSER_CONTAINER_NAME}
    image: hurlenko/filebrowser
    user: "${FILEBROWSER_UID}:${FILEBROWSER_GID}"
    ports:
      - ${FILEBROWSER_PORT}:8080
    volumes:
      - backoffice_migration:/data/backoffice_migration
      - backoffice_uploads:/data/backoffice_uploads
      - ./data:/data/data
      # - /CONFIG_DIR:/config
    environment:
      - FB_BASEURL=/filebrowser
    restart: always

  tfserver:
    image: tensorflow/serving
    container_name: ${TF_SERVING_CONTAINER_NAME}
    ports:
      - ${TF_SERVING_PORT}:8501
    volumes:
      - './models:/models'
    command: --model_config_file=/models/models.config

volumes:
  backoffice_uploads:
  backoffice_migration:
  backoffice_2_uploads:
  backoffice_2_migration:
  db_data:


