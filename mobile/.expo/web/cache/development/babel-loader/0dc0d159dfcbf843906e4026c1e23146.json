{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef, useState } from \"react\";\nimport { Text, VStack, Image, ScrollView, Pressable, Stack, Heading, useMediaQuery, useToast } from \"native-base\";\nimport Layout from \"../../components/layouts/Layout\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport useSWR from \"swr\";\nimport { formatUrl, getImageUrl, getLogoUrl } from \"../../helpers/utils\";\nimport useStore from \"../../context/store\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\nimport SearchBar from \"../../components/custom/SearchBar\";\nimport ProductCard from \"../../components/custom/ProductCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var toast = useToast();\n\n  var _useState = useState({\n    services: [],\n    slides: [],\n    categories: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      screenData = _useState2[0],\n      setScreenData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nowToSeeProducts = _useState4[0],\n      setNowToSeeProducts = _useState4[1];\n\n  var renderGalleryUrl = function renderGalleryUrl(itemId, currentGallery) {\n    return currentGallery.length - 1 > itemId ? formatUrl(\"assets/\" + currentGallery[itemId].image) : getLogoUrl();\n  };\n\n  useStore.subscribe(function (state) {\n    if (screenData.categories.length == 0) {\n      setScreenData(_objectSpread(_objectSpread({}, screenData), {}, {\n        categories: state.configs.categories\n      }));\n    }\n  });\n  useSWR(formatUrl(\"items/gallery?limit=-1\"), function _callee() {\n    var res,\n        resJson,\n        gottenServices,\n        gottenSlides,\n        _args = arguments;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch.apply(void 0, _args));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            resJson = _context.sent;\n\n            if (!(resJson.errors != undefined)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", toast.show({\n              title: resJson.errors[0].message\n            }));\n\n          case 9:\n            gottenServices = resJson.data.filter(function (galleryItem) {\n              return galleryItem.group == \"service\";\n            });\n            gottenSlides = resJson.data.filter(function (galleryItem) {\n              return galleryItem.group == \"slider\";\n            });\n            setScreenData(_objectSpread(_objectSpread({}, screenData), {}, {\n              services: gottenServices,\n              slides: gottenSlides\n            }));\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  });\n  useSWR(formatUrl(\"items/products\"), function _callee2() {\n    var res,\n        resJson,\n        _args2 = arguments;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch.apply(void 0, _args2));\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            resJson = _context2.sent;\n\n            if (!(resJson.errors != undefined)) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", toast.show({\n              title: resJson.errors[0].message\n            }));\n\n          case 9:\n            setNowToSeeProducts(resJson.data);\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  });\n\n  var _useMediaQuery = useMediaQuery({\n    maxWidth: maxSmallScreenWidth\n  }),\n      _useMediaQuery2 = _slicedToArray(_useMediaQuery, 1),\n      isSmallScreen = _useMediaQuery2[0];\n\n  var menus = [{\n    text: \"Soldes\",\n    route: \"Home\",\n    icon: \"52a7196b-eea7-4e0f-9aa6-99eee1145ce5\"\n  }, {\n    text: \"Boutiques\",\n    route: \"Home\",\n    icon: \"fa4014a2-9e42-49d2-b6d6-8aa102ea7beb\"\n  }, {\n    text: \"Made in CI\",\n    route: \"Home\",\n    icon: \"ec3ce20b-1145-4e6d-b98c-ae0a897c5785\"\n  }, {\n    text: \"RecommandÃ©s\",\n    route: \"Home\",\n    icon: \"f2c80949-cae7-4295-a10e-486273147030?\"\n  }];\n  var screenWidth = Dimensions.get(\"window\").width > 1184 ? 1184 : Dimensions.get(\"window\").width;\n  var mainCarouselRef = useRef({\n    prev: function prev() {},\n    next: function next() {}\n  });\n  return _jsx(Layout, {\n    navigation: navigation,\n    route: route,\n    children: _jsx(ScrollView, {\n      flex: 1,\n      height: \"100%\",\n      width: \"100%\",\n      children: _jsxs(_Fragment, {\n        children: [isSmallScreen ? _jsx(SearchBar, {\n          navigation: navigation,\n          route: route\n        }) : null, _jsx(VStack, {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          flexDirection: \"row\",\n          paddingTop: 2,\n          width: \"100%\",\n          children: menus.map(function (menu) {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate(menu.route);\n              },\n              children: _jsxs(VStack, {\n                flex: 1,\n                alignItems: \"center\",\n                children: [_jsx(Image, {\n                  width: 35,\n                  height: 35,\n                  source: {\n                    uri: getImageUrl(menu.icon)\n                  },\n                  alt: menu.text\n                }), _jsx(Text, {\n                  textAlign: \"center\",\n                  fontWeight: \"bold\",\n                  fontSize: isSmallScreen ? \"xs\" : \"md\",\n                  children: menu.text\n                })]\n              })\n            }, menu.text);\n          })\n        }), _jsxs(Stack, {\n          paddingTop: 5,\n          flex: 1,\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"auto\",\n          children: [_jsx(Heading, {\n            margin: 5,\n            children: \" S\\xC9LECTION RAPIDE\"\n          }), _jsx(Stack, {\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            direction: \"row\",\n            flexWrap: \"wrap\",\n            children: screenData.categories.map(function (item) {\n              return _jsx(Pressable, {\n                onPress: function onPress() {\n                  return navigation.navigate(\"Category\", {\n                    id: item.id\n                  });\n                },\n                flexBasis: isSmallScreen ? \"33%\" : \"25%\",\n                height: isSmallScreen ? 100 : 125,\n                children: _jsxs(Stack, {\n                  flex: 1,\n                  alignItems: \"center\",\n                  children: [_jsx(Image, {\n                    rounded: 50,\n                    width: isSmallScreen ? 50 : 70,\n                    height: isSmallScreen ? 50 : 70,\n                    source: {\n                      uri: getImageUrl(item.thumb)\n                    },\n                    alt: item.name\n                  }), _jsx(Text, {\n                    textAlign: \"center\",\n                    fontWeight: \"bold\",\n                    fontSize: isSmallScreen ? \"xs\" : \"md\",\n                    paddingLeft: 1,\n                    children: item.name\n                  })]\n                })\n              }, item.id);\n            })\n          })]\n        }), _jsxs(Stack, {\n          flex: 1,\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"auto\",\n          children: [_jsx(Heading, {\n            margin: 5,\n            children: \" ACH\\xC8TE D\\xC8S MAINTENANT\"\n          }), _jsx(Stack, {\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            direction: \"row\",\n            flexWrap: \"wrap\",\n            width: \"100%\",\n            children: nowToSeeProducts.map(function (item) {\n              return _jsx(ProductCard, {\n                isSmallScreen: isSmallScreen,\n                product: item\n              }, item.id);\n            })\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/screens/home/Home.tsx"],"names":["React","useRef","useState","Text","VStack","Image","ScrollView","Pressable","Stack","Heading","useMediaQuery","useToast","Layout","useSWR","formatUrl","getImageUrl","getLogoUrl","useStore","maxSmallScreenWidth","SearchBar","ProductCard","Home","navigation","route","toast","services","slides","categories","screenData","setScreenData","nowToSeeProducts","setNowToSeeProducts","renderGalleryUrl","itemId","currentGallery","length","image","subscribe","state","configs","fetch","res","json","resJson","errors","undefined","show","title","message","gottenServices","data","filter","galleryItem","group","gottenSlides","console","log","maxWidth","isSmallScreen","menus","text","icon","screenWidth","Dimensions","get","width","mainCarouselRef","prev","next","map","menu","navigate","uri","item","id","thumb","name"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport {\n  Text,\n  VStack,\n  Image,\n  ScrollView,\n  Pressable,\n  Stack,\n  Heading,\n  useMediaQuery,\n  useToast,\n  Skeleton,\n} from \"native-base\";\n\n\n\nimport Layout from \"../../components/layouts/Layout\";\nimport Carousel from \"react-native-reanimated-carousel\";\nimport { ComponentWithNavigationProps } from \"../../@types/component\";\nimport { Dimensions } from \"react-native\";\nimport MainCarouselItem from \"../../components/custom/MainCarouselItem\";\nimport useSWR from \"swr\";\nimport { formatUrl, getImageUrl, getLogoUrl } from \"../../helpers/utils\";\nimport { Gallery } from \"../../@types/gallery\";\nimport { Category } from \"../../@types/category\";\nimport useStore from \"../../context/store\";\nimport { Store } from \"../../@types/store\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\nimport SearchBar from \"../../components/custom/SearchBar\";\nimport { Product } from \"../../@types/product\";\nimport ProductCard from \"../../components/custom/ProductCard\";\n\n\nexport default function Home({\n  navigation,\n  route,\n}: ComponentWithNavigationProps) {\n  const toast = useToast();\n  type ScreenData = {\n    services: Gallery[],\n    slides: Gallery[],\n    categories: Category[]\n  }\n  const [screenData, setScreenData] = useState<ScreenData>(\n    {\n      services: [],\n      slides: [],\n      categories: []\n    }\n  );\n\n  const [nowToSeeProducts, setNowToSeeProducts] = useState<Product[]>([])\n\n  const renderGalleryUrl = (itemId, currentGallery) =>\n    currentGallery.length - 1 > itemId\n      ? formatUrl(`assets/${currentGallery[itemId].image}`)\n      : getLogoUrl();\n    \n  useStore.subscribe((state: Store) => {\n    if(screenData.categories.length == 0){\n      setScreenData({...screenData, categories: state.configs.categories})\n    }\n  });\n\n  useSWR(\n    formatUrl(\"items/gallery?limit=-1\"),\n    async (...args: Parameters<typeof fetch>) => {\n      try {\n        const res = await fetch(...args);\n        const resJson = await res.json();\n        if (resJson.errors != undefined)\n          return toast.show({ title: resJson.errors[0].message });\n\n        const gottenServices = (resJson.data as Gallery[]).filter(\n          (galleryItem: Gallery) => galleryItem.group == \"service\"\n        );\n\n        const gottenSlides = (resJson.data as Gallery[]).filter(\n          (galleryItem: Gallery) => galleryItem.group == \"slider\"\n        );\n        setScreenData(\n          {\n            ...screenData, \n            services: gottenServices,\n            slides: gottenSlides\n          }\n        )\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  );\n\n  useSWR(\n    formatUrl(\"items/products\"),\n    async (...args: Parameters<typeof fetch>) => {\n      try {\n        const res = await fetch(...args);\n        const resJson = await res.json();\n        if (resJson.errors != undefined)\n          return toast.show({ title: resJson.errors[0].message });\n        \n        setNowToSeeProducts(resJson.data)\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  );\n\n  const [isSmallScreen] = useMediaQuery({ maxWidth: maxSmallScreenWidth });\n\n  const menus = [\n    {\n      text: \"Soldes\",\n      route: \"Home\",\n      icon: \"52a7196b-eea7-4e0f-9aa6-99eee1145ce5\",\n    },\n    {\n      text: \"Boutiques\",\n      route: \"Home\",\n      icon: \"fa4014a2-9e42-49d2-b6d6-8aa102ea7beb\",\n    },\n    {\n      text: \"Made in CI\",\n      route: \"Home\",\n      icon: \"ec3ce20b-1145-4e6d-b98c-ae0a897c5785\",\n    },\n    {\n      text: \"RecommandÃ©s\",\n      route: \"Home\",\n      icon: \"f2c80949-cae7-4295-a10e-486273147030?\",\n    },\n  ];\n\n  const screenWidth =\n    Dimensions.get(\"window\").width > 1184\n      ? 1184\n      : Dimensions.get(\"window\").width;\n\n  const mainCarouselRef = useRef<any>({\n    prev: () => {},\n    next: () => {},\n  });\n\n  return (\n    <Layout navigation={navigation} route={route}>\n      <ScrollView flex={1} height={\"100%\"} width={\"100%\"}>\n        <>\n          {isSmallScreen ? (\n            <SearchBar navigation={navigation} route={route} />\n          ) : null}\n\n         \n          <VStack\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent={\"space-around\"}\n            flexDirection={\"row\"}\n            paddingTop={2}\n            width={\"100%\"}\n          >\n            {menus.map((menu) => {\n              return (\n                <Pressable\n                  key={menu.text}\n                  onPress={() => navigation.navigate(menu.route)}\n                >\n                  <VStack flex={1} alignItems={\"center\"}>\n                    <Image\n                      width={35}\n                      height={35}\n                      source={{ uri: getImageUrl(menu.icon) }}\n                      alt={menu.text}\n                    />\n                    <Text\n                      textAlign={\"center\"}\n                      fontWeight={\"bold\"}\n                      fontSize={isSmallScreen ? \"xs\" : \"md\"}\n                    >\n                      {menu.text}\n                    </Text>\n                  </VStack>\n                </Pressable>\n              );\n            })}\n          </VStack>\n\n          <Stack\n            paddingTop={5}\n            flex={1}\n            alignItems={\"center\"}\n            width={\"100%\"}\n            height={\"auto\"}\n          >\n            <Heading margin={5}> SÃLECTION RAPIDE</Heading>\n            <Stack\n              alignItems={\"center\"}\n              justifyContent={\"flex-start\"}\n              direction={\"row\"}\n              flexWrap={\"wrap\"}\n            >\n              {screenData.categories.map((item) => (\n                <Pressable\n                  onPress={() =>\n                    navigation.navigate(\"Category\", { id: item.id })\n                  }\n                  flexBasis={isSmallScreen ? \"33%\" : \"25%\"}\n                  height={isSmallScreen ? 100 : 125}\n                  key={item.id}\n                >\n                  <Stack flex={1} alignItems={\"center\"}>\n                    <Image\n                      rounded={50}\n                      width={isSmallScreen ? 50 : 70}\n                      height={isSmallScreen ? 50 : 70}\n                      source={{ uri: getImageUrl(item.thumb) }}\n                      alt={item.name}\n                    />\n                    <Text\n                      textAlign={\"center\"}\n                      fontWeight={\"bold\"}\n                      fontSize={isSmallScreen ? \"xs\" : \"md\"}\n                      paddingLeft={1}\n                    >\n                      {item.name}\n                    </Text>\n                  </Stack>\n                </Pressable>\n              ))}\n            </Stack>\n          </Stack>\n\n\n          <Stack\n            flex={1}\n            alignItems={\"center\"}\n            width={\"100%\"}\n            height={\"auto\"}\n          >\n            <Heading margin={5}> ACHÃTE DÃS MAINTENANT</Heading>\n            <Stack\n              alignItems={\"center\"}\n              justifyContent={\"flex-start\"}\n              direction={\"row\"}\n              flexWrap={\"wrap\"}\n              width={\"100%\"}\n            >\n              {nowToSeeProducts.map((item: Product) => (\n                <ProductCard key={item.id} isSmallScreen={isSmallScreen} product={item}/>\n              ))}\n            </Stack>\n          </Stack>\n\n        </>\n      </ScrollView>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}