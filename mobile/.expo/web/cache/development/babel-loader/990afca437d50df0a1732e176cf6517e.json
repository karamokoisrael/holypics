{"ast":null,"code":"import { Image, Stack, Text, Pressable, Skeleton, Button } from \"native-base\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from \"react\";\nimport { getImageUrl } from \"../../helpers/utils\";\nimport { Hoverable } from \"react-native-web-hover\";\nimport { sharedStyles } from \"../../styles/shared\";\nimport { ConditionalSuspense } from \"../layouts/ConditionalSuspense\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProductCard = function ProductCard(_ref) {\n  var isSmallScreen = _ref.isSmallScreen,\n      product = _ref.product,\n      addToCard = _ref.addToCard;\n  var textWith = isSmallScreen == true ? 138.8 : 190;\n  var productHeight = isSmallScreen == true ? 229.8 : 285.5;\n  if (addToCard != true) productHeight += 12;\n  return _jsx(Pressable, {\n    flex: 1,\n    alignItems: \"center\",\n    flexBasis: isSmallScreen == true ? \"48%\" : \"24%\",\n    width: isSmallScreen == true ? \"48%\" : \"24%\",\n    paddingBottom: 5,\n    height: productHeight,\n    onPress: function onPress() {\n      return alert(product.name);\n    },\n    children: _jsx(Hoverable, {\n      children: function children(_ref2) {\n        var hovered = _ref2.hovered;\n        return _jsxs(Pressable, {\n          onPress: function onPress() {\n            return alert(product.name);\n          },\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          alignItems: \"center\",\n          style: hovered ? sharedStyles.boxBordered : {},\n          children: [_jsx(ConditionalSuspense, {\n            condition: reduction > 0,\n            children: _jsx(Stack, {\n              top: 4,\n              left: 1,\n              backgroundColor: \"primary.900\",\n              height: 5,\n              position: \"absolute\",\n              fontSize: 20,\n              zIndex: 99,\n              flex: 1,\n              alignItems: \"flex-start\",\n              justifyContent: \"flex-start\",\n              children: _jsx(Text, {\n                color: \"text.50\",\n                children: \"-100%\"\n              })\n            })\n          }), _jsx(Image, {\n            src: getImageUrl(product.thumb),\n            alt: product.name,\n            height: isSmallScreen == true ? 138.8 : 190,\n            width: isSmallScreen == true ? 138.8 : 190\n          }), _jsx(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            fontSize: isSmallScreen == true ? \"md\" : \"md\",\n            width: textWith,\n            textAlign: \"center\",\n            children: product.name\n          }), _jsx(Text, {\n            fontWeight: \"bold\",\n            width: textWith,\n            textAlign: \"center\",\n            children: new Intl.NumberFormat(\"fr-FR\", {\n              style: \"currency\",\n              currency: \"XOF\"\n            }).format(product.price)\n          }), product.price_before_promotion != null ? _jsx(Text, {\n            style: {\n              textDecorationLine: \"line-through\",\n              textDecorationStyle: \"solid\"\n            },\n            width: textWith,\n            textAlign: \"center\",\n            children: new Intl.NumberFormat(\"fr-FR\", {\n              style: \"currency\",\n              currency: \"XOF\"\n            }).format(product.price_before_promotion)\n          }) : null, _jsx(Button, {\n            py: \"2\",\n            px: \"2\",\n            borderRadius: \"4\",\n            variant: \"subtle\",\n            _text: {\n              _dark: {\n                color: \"text.50\"\n              },\n              _light: {\n                color: \"text.50\"\n              },\n              fontWeight: \"normal\"\n            },\n            width: \"80%\",\n            backgroundColor: \"primary.900\",\n            _hover: {\n              backgroundColor: \"primary.700\"\n            },\n            flex: 1,\n            flexDirection: \"column\",\n            children: \"J'ACH\\xC8TE\"\n          })]\n        });\n      }\n    })\n  });\n};\n\nexport var ProductCardSkeleton = function ProductCardSkeleton(_ref3) {\n  var isSmallScreen = _ref3.isSmallScreen;\n  return _jsxs(Stack, {\n    flexBasis: isSmallScreen == true ? \"48%\" : \"24%\",\n    width: isSmallScreen == true ? \"48%\" : \"24%\",\n    paddingBottom: 5,\n    height: isSmallScreen == true ? 190 : 210,\n    flex: 1,\n    alignItems: \"center\",\n    children: [_jsx(Skeleton, {\n      px: \"4\",\n      my: \"4\",\n      rounded: \"md\",\n      height: \"60%\",\n      maxHeight: \"60%\",\n      width: \"80%\"\n    }), _jsx(Skeleton.Text, {\n      px: \"4\",\n      width: \"80%\",\n      height: \"15%\",\n      maxHeight: \"15%\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({});\nexport default ProductCard;","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/components/custom/ProductCard.tsx"],"names":["Image","Stack","Text","Pressable","Skeleton","Button","React","getImageUrl","Hoverable","sharedStyles","ConditionalSuspense","ProductCard","isSmallScreen","product","addToCard","textWith","productHeight","alert","name","hovered","boxBordered","reduction","thumb","Intl","NumberFormat","style","currency","format","price","price_before_promotion","textDecorationLine","textDecorationStyle","_dark","color","_light","fontWeight","backgroundColor","ProductCardSkeleton","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import { Image, Stack, Text, Pressable, Skeleton, Button } from \"native-base\";\nimport { StyleSheet } from \"react-native\";\nimport React from \"react\";\nimport { Product } from \"../../@types/product\";\nimport { getImageUrl } from \"../../helpers/utils\";\nimport { Hoverable } from \"react-native-web-hover\";\nimport { sharedStyles } from \"../../styles/shared\";\nimport { ConditionalSuspense } from \"../layouts/ConditionalSuspense\";\n\ntype Props = {\n  isSmallScreen?: boolean;\n  product: Product;\n  addToCard: boolean;\n};\n\ntype SkeletonProps = {\n  isSmallScreen: boolean;\n};\n\nconst ProductCard = ({ isSmallScreen, product, addToCard }: Props) => {\n  const textWith = isSmallScreen == true ? 138.8 : 190;\n  let productHeight = isSmallScreen == true ? 229.8 : 285.5;\n\n  // const reduction = product.price_before_promotion != null ?\n  \n  // product.price * 100 / product.price_before_promotion :\n\n  // 0\n\n  // ;\n  if (addToCard != true) productHeight += 12;\n  return (\n    <Pressable\n      flex={1}\n      alignItems=\"center\"\n      flexBasis={isSmallScreen == true ? \"48%\" : \"24%\"}\n      width={isSmallScreen == true ? \"48%\" : \"24%\"}\n      paddingBottom={5}\n      height={productHeight}\n      onPress={() => alert(product.name)}\n    >\n      <Hoverable>\n        {({ hovered }) => (\n          <Pressable\n            onPress={() => alert(product.name)}\n            width={\"100%\"}\n            height={\"100%\"}\n            flex={1}\n            alignItems={\"center\"}\n            style={hovered ? sharedStyles.boxBordered : {}}\n          >\n            <ConditionalSuspense condition={reduction > 0}>\n              <Stack\n                top={4}\n                left={1}\n                backgroundColor={\"primary.900\"}\n                height={5}\n                position=\"absolute\"\n                fontSize={20}\n                zIndex={99}\n                flex={1}\n                alignItems=\"flex-start\"\n                justifyContent=\"flex-start\"\n              >\n                <Text color={\"text.50\"}>-100%</Text>\n              </Stack>\n            </ConditionalSuspense>\n\n            <Image\n              src={getImageUrl(product.thumb)}\n              alt={product.name}\n              height={isSmallScreen == true ? 138.8 : 190}\n              width={isSmallScreen == true ? 138.8 : 190}\n            />\n            <Text\n              numberOfLines={1}\n              ellipsizeMode=\"tail\"\n              fontSize={isSmallScreen == true ? \"md\" : \"md\"}\n              width={textWith}\n              textAlign={\"center\"}\n            >\n              {product.name}\n            </Text>\n            <Text fontWeight={\"bold\"} width={textWith} textAlign={\"center\"}>\n              {new Intl.NumberFormat(\"fr-FR\", {\n                style: \"currency\",\n                currency: \"XOF\",\n              }).format(product.price)}\n            </Text>\n            {product.price_before_promotion != null ? (\n              <Text\n                style={{\n                  textDecorationLine: \"line-through\",\n                  textDecorationStyle: \"solid\",\n                }}\n                width={textWith}\n                textAlign={\"center\"}\n              >\n                {new Intl.NumberFormat(\"fr-FR\", {\n                  style: \"currency\",\n                  currency: \"XOF\",\n                }).format(product.price_before_promotion)}\n              </Text>\n            ) : null}\n\n            <Button\n              py=\"2\"\n              px=\"2\"\n              borderRadius=\"4\"\n              variant=\"subtle\"\n              _text={{\n                _dark: { color: \"text.50\" },\n                _light: { color: \"text.50\" },\n                fontWeight: \"normal\",\n              }}\n              width={\"80%\"}\n              backgroundColor=\"primary.900\"\n              _hover={{ backgroundColor: \"primary.700\" }}\n              flex={1}\n              flexDirection={\"column\"}\n            >\n              J'ACHÈTE\n            </Button>\n          </Pressable>\n        )}\n      </Hoverable>\n    </Pressable>\n  );\n};\n\nexport const ProductCardSkeleton = ({ isSmallScreen }: SkeletonProps) => (\n  <Stack\n    flexBasis={isSmallScreen == true ? \"48%\" : \"24%\"}\n    width={isSmallScreen == true ? \"48%\" : \"24%\"}\n    paddingBottom={5}\n    height={isSmallScreen == true ? 190 : 210}\n    flex={1}\n    alignItems={\"center\"}\n  >\n    <Skeleton\n      px=\"4\"\n      my=\"4\"\n      rounded=\"md\"\n      height={\"60%\"}\n      maxHeight={\"60%\"}\n      width={\"80%\"}\n    />\n    <Skeleton.Text px=\"4\" width={\"80%\"} height={\"15%\"} maxHeight={\"15%\"} />\n  </Stack>\n);\n\nconst styles = StyleSheet.create({});\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}