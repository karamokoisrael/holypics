{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text, Stack, Image, Pressable, useMediaQuery, Skeleton } from \"native-base\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Hoverable } from \"react-native-web-hover\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\nimport { sharedStyles } from \"../../styles/shared\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ImageCard = function ImageCard(_ref) {\n  var text = _ref.text,\n      _onPress = _ref.onPress,\n      image = _ref.image;\n\n  var _useMediaQuery = useMediaQuery({\n    maxWidth: maxSmallScreenWidth\n  }),\n      _useMediaQuery2 = _slicedToArray(_useMediaQuery, 1),\n      isSmallScreen = _useMediaQuery2[0];\n\n  var square = isSmallScreen == true ? 100 : 120;\n  return _jsx(Pressable, {\n    flex: 1,\n    alignItems: \"center\",\n    flexBasis: isSmallScreen == true ? \"48%\" : \"24%\",\n    width: isSmallScreen == true ? \"48%\" : \"24%\",\n    height: square + 10,\n    onPress: function onPress() {\n      return _onPress();\n    },\n    marginBottom: 3,\n    children: _jsx(Hoverable, {\n      children: function children(_ref2) {\n        var hovered = _ref2.hovered;\n        return _jsxs(Stack, {\n          flex: 1,\n          alignItems: \"center\",\n          style: hovered ? sharedStyles.boxBordered : {},\n          children: [_jsx(Image, {\n            height: square,\n            width: square,\n            source: image,\n            alt: text,\n            resizeMode: \"contain\"\n          }), _jsx(Text, {\n            textAlign: \"center\",\n            fontWeight: \"bold\",\n            fontSize: isSmallScreen ? \"xs\" : \"md\",\n            children: text\n          })]\n        });\n      }\n    })\n  });\n};\n\nexport var ImageCardSkeleton = function ImageCardSkeleton() {\n  var _useMediaQuery3 = useMediaQuery({\n    maxWidth: maxSmallScreenWidth\n  }),\n      _useMediaQuery4 = _slicedToArray(_useMediaQuery3, 1),\n      isSmallScreen = _useMediaQuery4[0];\n\n  var square = isSmallScreen == true ? 100 : 120;\n  return _jsx(Skeleton, {\n    flexBasis: isSmallScreen == true ? \"48%\" : \"24%\",\n    width: isSmallScreen == true ? \"48%\" : \"24%\",\n    height: square + 10,\n    marginBottom: 3,\n    px: \"4\",\n    my: \"4\",\n    rounded: \"md\"\n  });\n};\nvar styles = StyleSheet.create({});\nexport default ImageCard;","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/components/custom/ImageCard.tsx"],"names":["Text","Stack","Image","Pressable","useMediaQuery","Skeleton","React","Hoverable","maxSmallScreenWidth","sharedStyles","ImageCard","text","onPress","image","maxWidth","isSmallScreen","square","hovered","boxBordered","ImageCardSkeleton","styles","StyleSheet","create"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,aAAxC,EAA4DC,QAA5D,QAA4E,aAA5E;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,mBAAT;AACA,SAASC,YAAT;;;;AAQA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAqC;AAAA,MAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,MAA5BC,QAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;;AACrD,uBAAwBT,aAAa,CAAC;AAAEU,IAAAA,QAAQ,EAAEN;AAAZ,GAAD,CAArC;AAAA;AAAA,MAAOO,aAAP;;AACA,MAAMC,MAAM,GAAGD,aAAa,IAAI,IAAjB,GAAwB,GAAxB,GAA8B,GAA7C;AACA,SACE,KAAC,SAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,SAAS,EAAEA,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAH7C;AAIE,IAAA,KAAK,EAAEA,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAJzC;AAKE,IAAA,MAAM,EAAEC,MAAM,GAAC,EALjB;AAME,IAAA,OAAO,EAAE;AAAA,aAAMJ,QAAO,EAAb;AAAA,KANX;AAOE,IAAA,YAAY,EAAE,CAPhB;AAAA,cASE,KAAC,SAAD;AAAA,gBACG;AAAA,YAAGK,OAAH,SAAGA,OAAH;AAAA,eACC,MAAC,KAAD;AAAO,UAAA,IAAI,EAAE,CAAb;AAAgB,UAAA,UAAU,EAAE,QAA5B;AAAsC,UAAA,KAAK,EAAEA,OAAO,GAAGR,YAAY,CAACS,WAAhB,GAA8B,EAAlF;AAAA,qBACE,KAAC,KAAD;AACE,YAAA,MAAM,EAAEF,MADV;AAEE,YAAA,KAAK,EAAEA,MAFT;AAGE,YAAA,MAAM,EAAEH,KAHV;AAIE,YAAA,GAAG,EAAEF,IAJP;AAKE,YAAA,UAAU,EAAC;AALb,YADF,EAQE,KAAC,IAAD;AACE,YAAA,SAAS,EAAE,QADb;AAEE,YAAA,UAAU,EAAE,MAFd;AAGE,YAAA,QAAQ,EAAEI,aAAa,GAAG,IAAH,GAAU,IAHnC;AAAA,sBAKGJ;AALH,YARF;AAAA,UADD;AAAA;AADH;AATF,IADF;AAgCD,CAnCD;;AAsCA,OAAO,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,wBAAwBf,aAAa,CAAC;AAAEU,IAAAA,QAAQ,EAAEN;AAAZ,GAAD,CAArC;AAAA;AAAA,MAAOO,aAAP;;AACA,MAAMC,MAAM,GAAGD,aAAa,IAAI,IAAjB,GAAwB,GAAxB,GAA8B,GAA7C;AAEA,SACE,KAAC,QAAD;AACE,IAAA,SAAS,EAAEA,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAD7C;AAEE,IAAA,KAAK,EAAEA,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAFzC;AAGE,IAAA,MAAM,EAAEC,MAAM,GAAC,EAHjB;AAIE,IAAA,YAAY,EAAE,CAJhB;AAKE,IAAA,EAAE,EAAC,GALL;AAME,IAAA,EAAE,EAAC,GANL;AAOE,IAAA,OAAO,EAAC;AAPV,IADF;AAWD,CAfM;AAgBP,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAeZ,SAAf","sourcesContent":["import { Text, Stack, Image, Pressable, useMediaQuery, Box, Skeleton } from \"native-base\";\nimport React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\nimport { sharedStyles } from \"../../styles/shared\";\n\ntype Props = {\n  text: string;\n  onPress: Function;\n  image: any;\n};\n\nconst ImageCard = ({ text, onPress, image }: Props) => {\n  const [isSmallScreen] = useMediaQuery({ maxWidth: maxSmallScreenWidth });\n  const square = isSmallScreen == true ? 100 : 120\n  return (\n    <Pressable\n      flex={1}\n      alignItems=\"center\"\n      flexBasis={isSmallScreen == true ? \"48%\" : \"24%\"}\n      width={isSmallScreen == true ? \"48%\" : \"24%\"}\n      height={square+10}\n      onPress={() => onPress()}\n      marginBottom={3}\n    >\n      <Hoverable>\n        {({ hovered }) => (\n          <Stack flex={1} alignItems={\"center\"} style={hovered ? sharedStyles.boxBordered : {}}>\n            <Image\n              height={square}\n              width={square}\n              source={image}\n              alt={text}\n              resizeMode='contain'\n            />\n            <Text\n              textAlign={\"center\"}\n              fontWeight={\"bold\"}\n              fontSize={isSmallScreen ? \"xs\" : \"md\"}\n            >\n              {text}\n            </Text>\n          </Stack>\n        )}\n      </Hoverable>\n    </Pressable>\n  );\n};\n\n\nexport const ImageCardSkeleton = () => {\n  const [isSmallScreen] = useMediaQuery({ maxWidth: maxSmallScreenWidth });\n  const square = isSmallScreen == true ? 100 : 120\n\n  return (\n    <Skeleton\n      flexBasis={isSmallScreen == true ? \"48%\" : \"24%\"}\n      width={isSmallScreen == true ? \"48%\" : \"24%\"}\n      height={square+10}\n      marginBottom={3}\n      px=\"4\"\n      my=\"4\"\n      rounded=\"md\"\n    />\n  );\n};\nconst styles = StyleSheet.create({});\n\nexport default ImageCard;\n"]},"metadata":{},"sourceType":"module"}