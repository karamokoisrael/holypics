{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text, Stack, Image, Pressable, useMediaQuery } from \"native-base\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Hoverable } from \"react-native-web-hover\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\nimport { sharedStyles } from \"../../styles/shared\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ImageCard = function ImageCard(_ref) {\n  var text = _ref.text,\n      _onPress = _ref.onPress,\n      image = _ref.image;\n\n  var _useMediaQuery = useMediaQuery({\n    maxWidth: maxSmallScreenWidth\n  }),\n      _useMediaQuery2 = _slicedToArray(_useMediaQuery, 1),\n      isSmallScreen = _useMediaQuery2[0];\n\n  return _jsx(Pressable, {\n    flex: 1,\n    alignItems: \"center\",\n    flexBasis: isSmallScreen == true ? \"48%\" : \"24%\",\n    width: isSmallScreen == true ? \"48%\" : \"24%\",\n    paddingBottom: 5,\n    height: isSmallScreen == true ? 120 : 160,\n    width: isSmallScreen == true ? 120 : 160,\n    onPress: function onPress() {\n      return _onPress();\n    },\n    children: _jsx(Hoverable, {\n      children: function children(_ref2) {\n        var hovered = _ref2.hovered;\n        return _jsxs(Stack, {\n          flex: 1,\n          alignItems: \"center\",\n          style: hovered ? sharedStyles.boxBordered : {},\n          children: [_jsx(Image, {\n            height: isSmallScreen == true ? 120 : 160,\n            width: isSmallScreen == true ? 120 : 160,\n            source: image,\n            alt: text\n          }), _jsx(Text, {\n            textAlign: \"center\",\n            fontWeight: \"bold\",\n            fontSize: isSmallScreen ? \"xs\" : \"md\",\n            children: text\n          })]\n        });\n      }\n    })\n  });\n};\n\nvar styles = StyleSheet.create({});\nexport default ImageCard;","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/components/custom/ImageCard.tsx"],"names":["Text","Stack","Image","Pressable","useMediaQuery","React","Hoverable","maxSmallScreenWidth","sharedStyles","ImageCard","text","onPress","image","maxWidth","isSmallScreen","hovered","boxBordered","styles","StyleSheet","create"],"mappings":";AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,aAAxC,QAAkE,aAAlE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,mBAAT;AACA,SAASC,YAAT;;;;AAQA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAqC;AAAA,MAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,MAA5BC,QAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;;AACrD,uBAAwBR,aAAa,CAAC;AAAES,IAAAA,QAAQ,EAAEN;AAAZ,GAAD,CAArC;AAAA;AAAA,MAAOO,aAAP;;AACA,SACE,KAAC,SAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,SAAS,EAAEA,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAH7C;AAIE,IAAA,KAAK,EAAEA,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAJzC;AAKE,IAAA,aAAa,EAAE,CALjB;AAOE,IAAA,MAAM,EAAEA,aAAa,IAAI,IAAjB,GAAwB,GAAxB,GAA8B,GAPxC;AAQU,IAAA,KAAK,EAAEA,aAAa,IAAI,IAAjB,GAAwB,GAAxB,GAA8B,GAR/C;AASE,IAAA,OAAO,EAAE;AAAA,aAAMH,QAAO,EAAb;AAAA,KATX;AAAA,cAWE,KAAC,SAAD;AAAA,gBACG;AAAA,YAAGI,OAAH,SAAGA,OAAH;AAAA,eACC,MAAC,KAAD;AAAO,UAAA,IAAI,EAAE,CAAb;AAAgB,UAAA,UAAU,EAAE,QAA5B;AAAsC,UAAA,KAAK,EAAEA,OAAO,GAAGP,YAAY,CAACQ,WAAhB,GAA8B,EAAlF;AAAA,qBACE,KAAC,KAAD;AACE,YAAA,MAAM,EAAEF,aAAa,IAAI,IAAjB,GAAwB,GAAxB,GAA8B,GADxC;AAEE,YAAA,KAAK,EAAEA,aAAa,IAAI,IAAjB,GAAwB,GAAxB,GAA8B,GAFvC;AAGE,YAAA,MAAM,EAAEF,KAHV;AAIE,YAAA,GAAG,EAAEF;AAJP,YADF,EAOE,KAAC,IAAD;AACE,YAAA,SAAS,EAAE,QADb;AAEE,YAAA,UAAU,EAAE,MAFd;AAGE,YAAA,QAAQ,EAAEI,aAAa,GAAG,IAAH,GAAU,IAHnC;AAAA,sBAKGJ;AALH,YAPF;AAAA,UADD;AAAA;AADH;AAXF,IADF;AAiCD,CAnCD;;AAqCA,IAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAeV,SAAf","sourcesContent":["import { Text, Stack, Image, Pressable, useMediaQuery, Box } from \"native-base\";\nimport React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\nimport { sharedStyles } from \"../../styles/shared\";\n\ntype Props = {\n  text: string;\n  onPress: Function;\n  image: any;\n};\n\nconst ImageCard = ({ text, onPress, image }: Props) => {\n  const [isSmallScreen] = useMediaQuery({ maxWidth: maxSmallScreenWidth });\n  return (\n    <Pressable\n      flex={1}\n      alignItems=\"center\"\n      flexBasis={isSmallScreen == true ? \"48%\" : \"24%\"}\n      width={isSmallScreen == true ? \"48%\" : \"24%\"}\n      paddingBottom={5}\n      // height={isSmallScreen == true ? 229.8 : 285.5}\n      height={isSmallScreen == true ? 120 : 160}\n              width={isSmallScreen == true ? 120 : 160}\n      onPress={() => onPress()}\n    >\n      <Hoverable>\n        {({ hovered }) => (\n          <Stack flex={1} alignItems={\"center\"} style={hovered ? sharedStyles.boxBordered : {}}>\n            <Image\n              height={isSmallScreen == true ? 120 : 160}\n              width={isSmallScreen == true ? 120 : 160}\n              source={image}\n              alt={text}\n            />\n            <Text\n              textAlign={\"center\"}\n              fontWeight={\"bold\"}\n              fontSize={isSmallScreen ? \"xs\" : \"md\"}\n            >\n              {text}\n            </Text>\n          </Stack>\n        )}\n      </Hoverable>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default ImageCard;\n"]},"metadata":{},"sourceType":"module"}