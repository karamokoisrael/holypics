{"ast":null,"code":"import { Image, Text, Pressable } from \"native-base\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from \"react\";\nimport { getImageUrl } from \"../../helpers/utils\";\nimport { Hoverable } from \"react-native-web-hover\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProductCard = function ProductCard(_ref) {\n  var isSmallScreen = _ref.isSmallScreen,\n      product = _ref.product;\n  return _jsx(Pressable, {\n    flex: 1,\n    alignItems: \"center\",\n    flexBasis: isSmallScreen == true ? \"48%\" : \"24%\",\n    width: isSmallScreen == true ? \"48%\" : \"24%\",\n    paddingBottom: 5,\n    height: isSmallScreen == true ? 229.8 : 285.5,\n    onPress: function onPress() {\n      return alert(product.name);\n    },\n    children: _jsx(Hoverable, {\n      children: function children(_ref2) {\n        var hovered = _ref2.hovered;\n        return _jsxs(Pressable, {\n          onPress: function onPress() {\n            return alert(product.name);\n          },\n          width: '100%',\n          height: '100%',\n          flex: 1,\n          alignItems: 'center',\n          style: hovered ? styles.boxBordered : {},\n          children: [_jsx(Image, {\n            src: getImageUrl(product.thumb),\n            alt: product.name,\n            height: isSmallScreen == true ? 138.8 : 200.5,\n            width: isSmallScreen == true ? 138.8 : 200.5\n          }), _jsx(Text, {\n            numberOfLines: 1,\n            ellipsizeMode: \"tail\",\n            fontSize: isSmallScreen == true ? \"md\" : \"md\",\n            width: isSmallScreen == true ? 138.8 : 200.5,\n            textAlign: 'center',\n            children: product.name\n          }), _jsx(Text, {\n            fontWeight: \"bold\",\n            width: isSmallScreen == true ? 138.8 : 200.5,\n            textAlign: 'center',\n            children: new Intl.NumberFormat(\"fr-FR\", {\n              style: \"currency\",\n              currency: \"XOF\"\n            }).format(product.price)\n          }), product.price_before_promotion != null ? _jsx(Text, {\n            style: {\n              textDecorationLine: \"line-through\",\n              textDecorationStyle: \"solid\"\n            },\n            width: isSmallScreen == true ? 138.8 : 200.5,\n            textAlign: 'center',\n            children: new Intl.NumberFormat(\"fr-FR\", {\n              style: \"currency\",\n              currency: \"XOF\"\n            }).format(product.price_before_promotion)\n          }) : null]\n        });\n      }\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  boxBordered: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 1,\n      height: 4\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10,\n    elevation: 5\n  }\n});\nexport default ProductCard;","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/components/custom/ProductCard.tsx"],"names":["Image","Text","Pressable","React","getImageUrl","Hoverable","ProductCard","isSmallScreen","product","alert","name","hovered","styles","boxBordered","thumb","Intl","NumberFormat","style","currency","format","price","price_before_promotion","textDecorationLine","textDecorationStyle","StyleSheet","create","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import { Image, Stack, Text, Pressable } from \"native-base\";\nimport { StyleSheet } from \"react-native\";\nimport React from \"react\";\nimport { Product } from \"../../@types/product\";\nimport { getImageUrl } from \"../../helpers/utils\";\nimport { Hoverable } from \"react-native-web-hover\";\n\ntype Props = {\n  isSmallScreen?: boolean;\n  product: Product;\n};\n\nconst ProductCard = ({ isSmallScreen, product }: Props) => (\n  <Pressable\n    flex={1}\n    alignItems=\"center\"\n    flexBasis={isSmallScreen == true ? \"48%\" : \"24%\"}\n    width={isSmallScreen == true ? \"48%\" : \"24%\"}\n    paddingBottom={5}\n    height={isSmallScreen == true ? 229.8 : 285.5}\n    onPress={() => alert(product.name)}\n  >\n    <Hoverable>\n      {({ hovered }) => (\n        <Pressable onPress={()=> alert(product.name)}  width={'100%'} height={'100%'} flex={1} alignItems={'center'} style={hovered ? styles.boxBordered : {}}>\n          <Image\n            src={getImageUrl(product.thumb)}\n            alt={product.name}\n            height={isSmallScreen == true ? 138.8 : 200.5}\n            width={isSmallScreen == true ? 138.8 : 200.5}\n          />\n          <Text\n            numberOfLines={1}\n            ellipsizeMode=\"tail\"\n            fontSize={isSmallScreen == true ? \"md\" : \"md\"}\n            width={isSmallScreen == true ? 138.8 : 200.5}\n            textAlign={'center'}\n          >\n            {product.name}\n          </Text>\n          <Text fontWeight={\"bold\"} width={isSmallScreen == true ? 138.8 : 200.5} textAlign={'center'}>\n            {new Intl.NumberFormat(\"fr-FR\", {\n              style: \"currency\",\n              currency: \"XOF\",\n            }).format(product.price)}\n          </Text>\n          {product.price_before_promotion != null ? (\n            <Text\n              style={{\n                textDecorationLine: \"line-through\",\n                textDecorationStyle: \"solid\",\n              }}\n              width={isSmallScreen == true ? 138.8 : 200.5}\n              textAlign={'center'}\n            >\n              {new Intl.NumberFormat(\"fr-FR\", {\n                style: \"currency\",\n                currency: \"XOF\",\n              }).format(product.price_before_promotion)}\n            </Text>\n          ) : null}\n        </Pressable>\n      )}\n    </Hoverable>\n  </Pressable>\n);\n\nconst styles = StyleSheet.create({\n  boxBordered: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 1,\n      height: 4,\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 10,\n    elevation: 5,\n  },\n});\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}