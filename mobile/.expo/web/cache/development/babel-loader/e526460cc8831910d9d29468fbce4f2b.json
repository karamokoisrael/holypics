{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\";\nimport { Box, Center, Icon, Pressable, Text } from \"native-base\";\nimport React from \"react\";\nimport useStore from \"../../context/store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar BottomBar = function BottomBar(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selected = _React$useState2[0],\n      setSelected = _React$useState2[1];\n\n  var store = useStore();\n  var routes = [{\n    id: 0,\n    title: \"Accueil\",\n    path: \"Home\",\n    icon: _jsx(Icon, {\n      mb: \"1\",\n      as: _jsx(MaterialCommunityIcons, {\n        name: selected === 0 ? \"home\" : \"home-outline\"\n      }),\n      _light: {\n        color: \"white\"\n      },\n      _dark: {\n        color: selected === 0 ? \"primary.500\" : \"white\"\n      },\n      size: \"sm\"\n    })\n  }, {\n    id: 1,\n    title: \"Mon compte\",\n    path: \"Account\",\n    icon: _jsx(Icon, {\n      mb: \"1\",\n      as: _jsx(MaterialCommunityIcons, {\n        name: selected === 1 ? \"account\" : \"account-outline\"\n      }),\n      _light: {\n        color: \"white\"\n      },\n      _dark: {\n        color: selected === 1 ? \"primary.500\" : \"white\"\n      },\n      size: \"sm\"\n    })\n  }, {\n    id: 2,\n    title: \"Recherche\",\n    path: \"Search\",\n    icon: _jsx(Icon, {\n      mb: \"1\",\n      as: _jsx(MaterialIcons, {\n        name: \"search\"\n      }),\n      _light: {\n        color: \"white\"\n      },\n      _dark: {\n        color: selected === 2 ? \"primary.500\" : \"white\"\n      },\n      size: \"sm\"\n    })\n  }, {\n    id: 3,\n    title: \"Panier\",\n    path: \"ShoppingCard\",\n    icon: _jsx(Icon, {\n      mb: \"1\",\n      as: _jsx(MaterialCommunityIcons, {\n        name: selected === 3 ? \"cart\" : \"cart-outline\"\n      }),\n      _light: {\n        color: \"white\"\n      },\n      _dark: {\n        color: selected === 3 ? \"primary.500\" : \"white\"\n      },\n      color: \"white\",\n      size: \"sm\"\n    })\n  }];\n\n  (function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            useStore.subscribe(function (state) {\n              setSelected(state.bottomBarSelectedIndex);\n              return;\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  })();\n\n  return _jsx(Box, {\n    _light: {\n      bg: \"primary.600\"\n    },\n    _dark: {\n      bg: \"bg.dark\"\n    },\n    flexDirection: \"row\",\n    width: \"100%\",\n    maxHeight: \"60px\",\n    padding: 0,\n    margin: 0,\n    children: routes.map(function (route) {\n      return _jsx(Pressable, {\n        opacity: selected === route.id ? 1 : 0.5,\n        py: \"3\",\n        flex: 1,\n        onPress: function onPress() {\n          store.setBottomBarSelectedIndex(route.id);\n          navigation.navigate(route.path);\n        },\n        children: _jsxs(Center, {\n          children: [route.icon, _jsx(Text, {\n            _light: {\n              color: \"white\"\n            },\n            _dark: {\n              color: selected === route.id ? \"primary.500\" : \"white\"\n            },\n            fontSize: \"12\",\n            children: route.title\n          })]\n        })\n      }, route.id);\n    })\n  });\n};\n\nexport default BottomBar;","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/components/layouts/BottomBar.tsx"],"names":["MaterialCommunityIcons","MaterialIcons","Box","Center","Icon","Pressable","Text","React","useStore","BottomBar","navigation","route","useState","selected","setSelected","store","routes","id","title","path","icon","color","subscribe","state","bottomBarSelectedIndex","bg","map","setBottomBarSelectedIndex","navigate"],"mappings":"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","sourcesContent":["import { MaterialCommunityIcons, MaterialIcons } from \"@expo/vector-icons\";\nimport { ComponentWithNavigationProps } from \"../../@types/component\";\nimport { Box, Center, Icon, Pressable, Text } from \"native-base\";\nimport React from \"react\";\nimport useStore from \"../../context/store\";\n\nconst BottomBar: React.FC<ComponentWithNavigationProps> = ({\n  navigation,\n  route,\n}) => {\n  const [selected, setSelected] = React.useState(0);\n  const store = useStore();\n  const routes = [\n    {\n      id: 0,\n      title: \"Accueil\",\n      path: \"Home\",\n      icon: (\n        <Icon\n          mb=\"1\"\n          as={\n            <MaterialCommunityIcons\n              name={selected === 0 ? \"home\" : \"home-outline\"}\n            />\n          }\n          _light={{ color: \"white\" }}\n          _dark={{ color: selected === 0 ? \"primary.500\" : \"white\" }}\n          size=\"sm\"\n        />\n      ),\n    },\n    {\n      id: 1,\n      title: \"Mon compte\",\n      path: \"Account\",\n      icon: (\n        <Icon\n          mb=\"1\"\n          as={\n            <MaterialCommunityIcons\n              name={selected === 1 ? \"account\" : \"account-outline\"}\n            />\n          }\n          _light={{ color: \"white\" }}\n          _dark={{ color: selected === 1 ? \"primary.500\" : \"white\" }}\n          size=\"sm\"\n        />\n      ),\n    },\n    {\n      id: 2,\n      title: \"Recherche\",\n      path: \"Search\",\n      icon: (\n        <Icon\n          mb=\"1\"\n          as={<MaterialIcons name=\"search\" />}\n          _light={{ color: \"white\" }}\n          _dark={{ color: selected === 2 ? \"primary.500\" : \"white\" }}\n          size=\"sm\"\n        />\n      ),\n    },\n    {\n      id: 3,\n      title: \"Panier\",\n      path: \"ShoppingCard\",\n      icon: (\n        <Icon\n          mb=\"1\"\n          as={\n            <MaterialCommunityIcons\n              name={selected === 3 ? \"cart\" : \"cart-outline\"}\n            />\n          }\n          _light={{ color: \"white\" }}\n          _dark={{ color: selected === 3 ? \"primary.500\" : \"white\" }}\n          color=\"white\"\n          size=\"sm\"\n        />\n      ),\n    },\n  ];\n\n  (async () => {\n    useStore.subscribe((state) => {\n      setSelected(state.bottomBarSelectedIndex);\n      return;\n    });\n  })();\n\n  return (\n    <Box\n      _light={{ bg: \"primary.600\" }}\n      _dark={{ bg: \"bg.dark\" }}\n      flexDirection=\"row\"\n      width=\"100%\"\n      maxHeight={\"60px\"}\n      padding={0}\n      margin={0}\n    >\n      {routes.map((route) => (\n        <Pressable\n          key={route.id}\n          opacity={selected === route.id ? 1 : 0.5}\n          py=\"3\"\n          flex={1}\n          onPress={() => {\n            store.setBottomBarSelectedIndex(route.id);\n            navigation.navigate(route.path);\n          }}\n        >\n          <Center>\n            {route.icon}\n            <Text\n              _light={{ color: \"white\" }}\n              _dark={{ color: selected === route.id ? \"primary.500\" : \"white\" }}\n              fontSize=\"12\"\n            >\n              {route.title}\n            </Text>\n          </Center>\n        </Pressable>\n      ))}\n    </Box>\n  );\n};\n\nexport default BottomBar;\n"]},"metadata":{},"sourceType":"module"}