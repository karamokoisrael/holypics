{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef, useState } from \"react\";\nimport { Text, VStack, Image, ScrollView, Pressable, Stack, Heading, useMediaQuery, useToast, Skeleton } from \"native-base\";\nimport Layout from \"../../components/layouts/Layout\";\nimport Carousel from \"react-native-reanimated-carousel\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MainCarouselItem from \"../../components/custom/MainCarouselItem\";\nimport useSWR from \"swr\";\nimport { formatUrl, getImageUrl, getLogoUrl } from \"../../helpers/utils\";\nimport useStore from \"../../context/store\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\nimport SearchBar from \"../../components/custom/SearchBar\";\nimport ProductCard from \"../../components/custom/ProductCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var toast = useToast();\n\n  var _useState = useState({\n    services: [],\n    slides: [],\n    categories: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      screenData = _useState2[0],\n      setScreenData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nowToSeeProducts = _useState4[0],\n      setNowToSeeProducts = _useState4[1];\n\n  var renderGalleryUrl = function renderGalleryUrl(itemId, currentGallery) {\n    return currentGallery.length - 1 > itemId ? formatUrl(\"assets/\" + currentGallery[itemId].image) : getLogoUrl();\n  };\n\n  useStore.subscribe(function (state) {\n    if (screenData.categories.length == 0) {\n      setScreenData(_objectSpread(_objectSpread({}, screenData), {}, {\n        categories: state.configs.categories\n      }));\n    }\n  });\n  useSWR(formatUrl(\"items/gallery?limit=-1\"), function _callee() {\n    var res,\n        resJson,\n        gottenServices,\n        gottenSlides,\n        _args = arguments;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch.apply(void 0, _args));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            resJson = _context.sent;\n\n            if (!(resJson.errors != undefined)) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", toast.show({\n              title: resJson.errors[0].message\n            }));\n\n          case 9:\n            gottenServices = resJson.data.filter(function (galleryItem) {\n              return galleryItem.group == \"service\";\n            });\n            gottenSlides = resJson.data.filter(function (galleryItem) {\n              return galleryItem.group == \"slider\";\n            });\n            setScreenData(_objectSpread(_objectSpread({}, screenData), {}, {\n              services: gottenServices,\n              slides: gottenSlides\n            }));\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  });\n  useSWR(formatUrl(\"items/products\"), function _callee2() {\n    var res,\n        resJson,\n        _args2 = arguments;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch.apply(void 0, _args2));\n\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            resJson = _context2.sent;\n\n            if (!(resJson.errors != undefined)) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", toast.show({\n              title: resJson.errors[0].message\n            }));\n\n          case 9:\n            setNowToSeeProducts(resJson.data);\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  });\n\n  var _useMediaQuery = useMediaQuery({\n    maxWidth: maxSmallScreenWidth\n  }),\n      _useMediaQuery2 = _slicedToArray(_useMediaQuery, 1),\n      isSmallScreen = _useMediaQuery2[0];\n\n  var menus = [{\n    text: \"Soldes\",\n    route: \"Home\",\n    icon: \"52a7196b-eea7-4e0f-9aa6-99eee1145ce5\"\n  }, {\n    text: \"Boutiques\",\n    route: \"Home\",\n    icon: \"fa4014a2-9e42-49d2-b6d6-8aa102ea7beb\"\n  }, {\n    text: \"Made in CI\",\n    route: \"Home\",\n    icon: \"ec3ce20b-1145-4e6d-b98c-ae0a897c5785\"\n  }, {\n    text: \"RecommandÃ©s\",\n    route: \"Home\",\n    icon: \"f2c80949-cae7-4295-a10e-486273147030?\"\n  }];\n  var screenWidth = Dimensions.get(\"window\").width > 1184 ? 1184 : Dimensions.get(\"window\").width;\n  var mainCarouselRef = useRef({\n    prev: function prev() {},\n    next: function next() {}\n  });\n  return _jsx(Layout, {\n    navigation: navigation,\n    route: route,\n    children: _jsx(ScrollView, {\n      flex: 1,\n      height: \"100%\",\n      width: \"100%\",\n      children: _jsxs(_Fragment, {\n        children: [isSmallScreen ? _jsx(SearchBar, {\n          navigation: navigation,\n          route: route\n        }) : null, screenData.slides.length > 0 ? _jsx(Carousel, {\n          width: screenWidth,\n          height: isSmallScreen ? 300 : 500,\n          data: screenData.slides,\n          autoPlay: true,\n          autoPlayInterval: 3000,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            var slideId = screenData.slides.findIndex(function (currentItem) {\n              return item.id == currentItem.id;\n            });\n            return _jsx(MainCarouselItem, {\n              onPressPrev: typeof mainCarouselRef.current.prev == \"function\" ? mainCarouselRef.current.prev : function () {},\n              onPressNext: typeof mainCarouselRef.current.next == \"function\" ? mainCarouselRef.current.next : function () {},\n              id: slideId,\n              totalItem: screenData.slides.length,\n              heading: item.name,\n              imageUri: renderGalleryUrl(slideId, screenData.slides),\n              content: item.description,\n              btnText: \"VOIR PLUS\",\n              paddingBottom: 2,\n              width: \"100%\",\n              height: isSmallScreen ? 300 : 500,\n              imageBackgroundStyle: !isSmallScreen ? {} : {\n                height: 300\n              },\n              containerStyle: !isSmallScreen ? {} : {\n                height: 300\n              },\n              btnAction: function btnAction() {}\n            });\n          }\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(Skeleton, {\n            h: \"40\"\n          }), _jsx(Skeleton.Text, {\n            px: \"4\"\n          }), _jsx(Skeleton, {\n            px: \"4\",\n            my: \"4\",\n            rounded: \"md\",\n            startColor: \"primary.100\"\n          })]\n        }), _jsx(VStack, {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          flexDirection: \"row\",\n          paddingTop: 2,\n          width: \"100%\",\n          children: menus.map(function (menu) {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate(menu.route);\n              },\n              children: _jsxs(VStack, {\n                flex: 1,\n                alignItems: \"center\",\n                children: [_jsx(Image, {\n                  width: 35,\n                  height: 35,\n                  source: {\n                    uri: getImageUrl(menu.icon)\n                  },\n                  alt: menu.text\n                }), _jsx(Text, {\n                  textAlign: \"center\",\n                  fontWeight: \"bold\",\n                  fontSize: isSmallScreen ? \"xs\" : \"md\",\n                  children: menu.text\n                })]\n              })\n            }, menu.text);\n          })\n        }), _jsxs(Stack, {\n          paddingTop: 5,\n          flex: 1,\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"auto\",\n          children: [_jsx(Heading, {\n            margin: 5,\n            children: \" S\\xC9LECTION RAPIDE\"\n          }), _jsx(Stack, {\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            direction: \"row\",\n            flexWrap: \"wrap\"\n          })]\n        }), _jsxs(Stack, {\n          flex: 1,\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"auto\",\n          children: [_jsx(Heading, {\n            margin: 5,\n            children: \" ACH\\xC8TE D\\xC8S MAINTENANT\"\n          }), _jsx(Stack, {\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            direction: \"row\",\n            flexWrap: \"wrap\",\n            width: \"100%\",\n            children: nowToSeeProducts.map(function (item) {\n              return _jsx(ProductCard, {\n                isSmallScreen: isSmallScreen,\n                product: item\n              }, item.id);\n            })\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/screens/home/Home.tsx"],"names":["React","useRef","useState","Text","VStack","Image","ScrollView","Pressable","Stack","Heading","useMediaQuery","useToast","Skeleton","Layout","Carousel","MainCarouselItem","useSWR","formatUrl","getImageUrl","getLogoUrl","useStore","maxSmallScreenWidth","SearchBar","ProductCard","Home","navigation","route","toast","services","slides","categories","screenData","setScreenData","nowToSeeProducts","setNowToSeeProducts","renderGalleryUrl","itemId","currentGallery","length","image","subscribe","state","configs","fetch","res","json","resJson","errors","undefined","show","title","message","gottenServices","data","filter","galleryItem","group","gottenSlides","console","log","maxWidth","isSmallScreen","menus","text","icon","screenWidth","Dimensions","get","width","mainCarouselRef","prev","next","item","slideId","findIndex","currentItem","id","current","name","description","height","map","menu","navigate","uri"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport {\n  Text,\n  VStack,\n  Image,\n  ScrollView,\n  Pressable,\n  Stack,\n  Heading,\n  useMediaQuery,\n  useToast,\n  Skeleton,\n} from \"native-base\";\n\n\n\nimport Layout from \"../../components/layouts/Layout\";\nimport Carousel from \"react-native-reanimated-carousel\";\nimport { ComponentWithNavigationProps } from \"../../@types/component\";\nimport { Dimensions } from \"react-native\";\nimport MainCarouselItem from \"../../components/custom/MainCarouselItem\";\nimport useSWR from \"swr\";\nimport { formatUrl, getImageUrl, getLogoUrl } from \"../../helpers/utils\";\nimport { Gallery } from \"../../@types/gallery\";\nimport { Category } from \"../../@types/category\";\nimport useStore from \"../../context/store\";\nimport { Store } from \"../../@types/store\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\nimport SearchBar from \"../../components/custom/SearchBar\";\nimport { Product } from \"../../@types/product\";\nimport ProductCard from \"../../components/custom/ProductCard\";\n\n\nexport default function Home({\n  navigation,\n  route,\n}: ComponentWithNavigationProps) {\n  const toast = useToast();\n  type ScreenData = {\n    services: Gallery[],\n    slides: Gallery[],\n    categories: Category[]\n  }\n  const [screenData, setScreenData] = useState<ScreenData>(\n    {\n      services: [],\n      slides: [],\n      categories: []\n    }\n  );\n\n  const [nowToSeeProducts, setNowToSeeProducts] = useState<Product[]>([])\n\n  const renderGalleryUrl = (itemId, currentGallery) =>\n    currentGallery.length - 1 > itemId\n      ? formatUrl(`assets/${currentGallery[itemId].image}`)\n      : getLogoUrl();\n    \n  useStore.subscribe((state: Store) => {\n    if(screenData.categories.length == 0){\n      setScreenData({...screenData, categories: state.configs.categories})\n    }\n  });\n\n  useSWR(\n    formatUrl(\"items/gallery?limit=-1\"),\n    async (...args: Parameters<typeof fetch>) => {\n      try {\n        const res = await fetch(...args);\n        const resJson = await res.json();\n        if (resJson.errors != undefined)\n          return toast.show({ title: resJson.errors[0].message });\n\n        const gottenServices = (resJson.data as Gallery[]).filter(\n          (galleryItem: Gallery) => galleryItem.group == \"service\"\n        );\n\n        const gottenSlides = (resJson.data as Gallery[]).filter(\n          (galleryItem: Gallery) => galleryItem.group == \"slider\"\n        );\n        setScreenData(\n          {\n            ...screenData, \n            services: gottenServices,\n            slides: gottenSlides\n          }\n        )\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  );\n\n  useSWR(\n    formatUrl(\"items/products\"),\n    async (...args: Parameters<typeof fetch>) => {\n      try {\n        const res = await fetch(...args);\n        const resJson = await res.json();\n        if (resJson.errors != undefined)\n          return toast.show({ title: resJson.errors[0].message });\n        \n        setNowToSeeProducts(resJson.data)\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  );\n\n  const [isSmallScreen] = useMediaQuery({ maxWidth: maxSmallScreenWidth });\n\n  const menus = [\n    {\n      text: \"Soldes\",\n      route: \"Home\",\n      icon: \"52a7196b-eea7-4e0f-9aa6-99eee1145ce5\",\n    },\n    {\n      text: \"Boutiques\",\n      route: \"Home\",\n      icon: \"fa4014a2-9e42-49d2-b6d6-8aa102ea7beb\",\n    },\n    {\n      text: \"Made in CI\",\n      route: \"Home\",\n      icon: \"ec3ce20b-1145-4e6d-b98c-ae0a897c5785\",\n    },\n    {\n      text: \"RecommandÃ©s\",\n      route: \"Home\",\n      icon: \"f2c80949-cae7-4295-a10e-486273147030?\",\n    },\n  ];\n\n  const screenWidth =\n    Dimensions.get(\"window\").width > 1184\n      ? 1184\n      : Dimensions.get(\"window\").width;\n\n  const mainCarouselRef = useRef<any>({\n    prev: () => {},\n    next: () => {},\n  });\n\n  return (\n    <Layout navigation={navigation} route={route}>\n      <ScrollView flex={1} height={\"100%\"} width={\"100%\"}>\n        <>\n          {isSmallScreen ? (\n            <SearchBar navigation={navigation} route={route} />\n          ) : null}\n\n          {screenData.slides.length > 0 ? (\n            <Carousel\n              width={screenWidth}\n              height={isSmallScreen ? 300 : 500}\n              data={screenData.slides}\n              autoPlay={true}\n              autoPlayInterval={3000}\n              // ref={mainCarouselRef}\n              renderItem={({ item }) => {\n                const slideId = screenData.slides.findIndex(\n                  (currentItem: Gallery) => item.id == currentItem.id\n                );\n                return (\n                  <MainCarouselItem\n                    onPressPrev={\n                      typeof(mainCarouselRef.current.prev) == \"function\"\n                        ? mainCarouselRef.current.prev\n                        : () => {}\n                    }\n                    onPressNext={\n                      typeof(mainCarouselRef.current.next) == \"function\"\n                        ? mainCarouselRef.current.next\n                        : () => {}\n                    }\n                    id={slideId}\n                    totalItem={screenData.slides.length}\n                    heading={item.name}\n                    imageUri={renderGalleryUrl(slideId, screenData.slides)}\n                    content={item.description}\n                    btnText=\"VOIR PLUS\"\n                    paddingBottom={2}\n                    width=\"100%\"\n                    height={isSmallScreen ? 300 : 500}\n                    imageBackgroundStyle={!isSmallScreen ? {} : { height: 300 }}\n                    containerStyle={!isSmallScreen ? {} : { height: 300 }}\n                    btnAction={() => {}}\n                  />\n                );\n              }}\n            />\n          ) : (\n            <>\n              <Skeleton h=\"40\" />\n              <Skeleton.Text px=\"4\" />\n              <Skeleton px=\"4\" my=\"4\" rounded=\"md\" startColor=\"primary.100\" />\n            </>\n          )}\n          \n          <VStack\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent={\"space-around\"}\n            flexDirection={\"row\"}\n            paddingTop={2}\n            width={\"100%\"}\n          >\n            {menus.map((menu) => {\n              return (\n                <Pressable\n                  key={menu.text}\n                  onPress={() => navigation.navigate(menu.route)}\n                >\n                  <VStack flex={1} alignItems={\"center\"}>\n                    <Image\n                      width={35}\n                      height={35}\n                      source={{ uri: getImageUrl(menu.icon) }}\n                      alt={menu.text}\n                    />\n                    <Text\n                      textAlign={\"center\"}\n                      fontWeight={\"bold\"}\n                      fontSize={isSmallScreen ? \"xs\" : \"md\"}\n                    >\n                      {menu.text}\n                    </Text>\n                  </VStack>\n                </Pressable>\n              );\n            })}\n          </VStack>\n\n          <Stack\n            paddingTop={5}\n            flex={1}\n            alignItems={\"center\"}\n            width={\"100%\"}\n            height={\"auto\"}\n          >\n            <Heading margin={5}> SÃLECTION RAPIDE</Heading>\n            <Stack\n              alignItems={\"center\"}\n              justifyContent={\"flex-start\"}\n              direction={\"row\"}\n              flexWrap={\"wrap\"}\n            >\n           \n            </Stack>\n          </Stack>\n\n\n          <Stack\n            flex={1}\n            alignItems={\"center\"}\n            width={\"100%\"}\n            height={\"auto\"}\n          >\n            <Heading margin={5}> ACHÃTE DÃS MAINTENANT</Heading>\n            <Stack\n              alignItems={\"center\"}\n              justifyContent={\"flex-start\"}\n              direction={\"row\"}\n              flexWrap={\"wrap\"}\n              width={\"100%\"}\n            >\n              {nowToSeeProducts.map((item: Product) => (\n                <ProductCard key={item.id} isSmallScreen={isSmallScreen} product={item}/>\n              ))}\n            </Stack>\n          </Stack>\n\n        </>\n      </ScrollView>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}