{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOnProgressChange = useOnProgressChange;\n\nvar _reactNativeReanimated = require(\"react-native-reanimated\");\n\nvar _constants = require(\"../constants\");\n\nfunction useOnProgressChange(opts) {\n  var offsetX = opts.offsetX,\n      rawData = opts.rawData,\n      size = opts.size,\n      onProgressChange = opts.onProgressChange;\n  var rawDataLength = rawData.length;\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      return offsetX.value;\n    };\n\n    _f._closure = {\n      offsetX: offsetX\n    };\n    _f.asString = \"function _f(){const{offsetX}=jsThis._closure;{return offsetX.value;}}\";\n    _f.__workletHash = 11091407603539;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/hooks/useOnProgressChange.ts (18:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), function () {\n    var _f = function _f(_value) {\n      var value = _value;\n\n      if (rawDataLength === _constants.DATA_LENGTH.SINGLE_ITEM) {\n        value = value % size;\n      }\n\n      if (rawDataLength === _constants.DATA_LENGTH.DOUBLE_ITEM) {\n        value = value % (size * 2);\n      }\n\n      var absoluteProgress = Math.abs(value / size);\n\n      if (value > 0) {\n        absoluteProgress = rawDataLength - absoluteProgress;\n      }\n\n      !!onProgressChange && (0, _reactNativeReanimated.runOnJS)(onProgressChange)(value, absoluteProgress);\n    };\n\n    _f._closure = {\n      rawDataLength: rawDataLength,\n      DATA_LENGTH: {\n        SINGLE_ITEM: _constants.DATA_LENGTH.SINGLE_ITEM,\n        DOUBLE_ITEM: _constants.DATA_LENGTH.DOUBLE_ITEM\n      },\n      size: size,\n      onProgressChange: onProgressChange,\n      runOnJS: _reactNativeReanimated.runOnJS\n    };\n    _f.asString = \"function _f(_value){const{rawDataLength,DATA_LENGTH,size,onProgressChange,runOnJS}=jsThis._closure;{let value=_value;if(rawDataLength===DATA_LENGTH.SINGLE_ITEM){value=value%size;}if(rawDataLength===DATA_LENGTH.DOUBLE_ITEM){value=value%(size*2);}let absoluteProgress=Math.abs(value/size);if(value>0){absoluteProgress=rawDataLength-absoluteProgress;}!!onProgressChange&&runOnJS(onProgressChange)(value,absoluteProgress);}}\";\n    _f.__workletHash = 13919234910402;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/hooks/useOnProgressChange.ts (19:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [onProgressChange, rawDataLength]);\n}","map":{"version":3,"sources":["useOnProgressChange.ts"],"names":["offsetX","DATA_LENGTH","SINGLE_ITEM","DOUBLE_ITEM","size","rawData","onProgressChange","opts","rawDataLength","runOnJS","value","absoluteProgress","Math"],"mappings":";;;;;AAAA,IAAA,sBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAIA,IAAA,UAAA,GAAA,OAAA,gBAAA;;AAGO,SAAA,mBAAA,CAAA,IAAA,EAML;AACE,MAAQA,OAAR,GAAqDO,IAArD,CAAA,OAAA;AAAA,MAAiBF,OAAjB,GAAqDE,IAArD,CAAA,OAAA;AAAA,MAA0BH,IAA1B,GAAqDG,IAArD,CAAA,IAAA;AAAA,MAAgCD,gBAAhC,GAAqDC,IAArD,CAAA,gBAAA;AACA,MAAMC,aAAa,GAAGH,OAAO,CAA7B,MAAA;AACA,GAAA,GAAA,sBAAA,CAAA,mBAAA,EAAA,YAAA;AAAA,QAAA,EAAA,GACI,SAAA,EAAA,GAAA;AAAA,aAAML,OAAO,CAAb,KAAA;AADJ,KAAA;;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA;AAAA,MAAA,OAAA,EAfGA;AAeH,KAAA;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA,uEAAA;AAAA,IAAA,EAAA,CAAA,aAAA,GAAA,cAAA;AAAA,IAAA,EAAA,CAAA,UAAA,GAAA,kGAAA;;AAAA,IAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,WAAA,EAAA;AAAA,GAAA,EAAA,EAAA,YAAA;AAAA,QAAA,EAAA,GAAA,SAAA,EAAA,CAAA,MAAA,EAEgB;AACR,UAAIU,KAAK,GAAT,MAAA;;AAEA,UAAIF,aAAa,KAAKP,UAAAA,CAAAA,WAAAA,CAAtB,WAAA,EAA+C;AAC3CS,QAAAA,KAAK,GAAGA,KAAK,GAAbA,IAAAA;AAGJ;;AAAA,UAAIF,aAAa,KAAKP,UAAAA,CAAAA,WAAAA,CAAtB,WAAA,EAA+C;AAC3CS,QAAAA,KAAK,GAAGA,KAAK,IAAIN,IAAI,GAArBM,CAAa,CAAbA;AAGJ;;AAAA,UAAIC,gBAAgB,GAAGC,IAAI,CAAJA,GAAAA,CAASF,KAAK,GAArC,IAAuBE,CAAvB;;AAEA,UAAIF,KAAK,GAAT,CAAA,EAAe;AACXC,QAAAA,gBAAgB,GAAGH,aAAa,GAAhCG,gBAAAA;AAGJ;;AAAA,OAAC,CAAD,gBAAA,IACI,CAAA,GAAA,sBAAA,CAAA,OAAA,EAAA,gBAAA,EAAA,KAAA,EADJ,gBACI,CADJ;AAnBR,KAAA;;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA;AAAA,MAAA,aAAA,EADmB,aACnB;AAAA,MAAA,WAAA,EAAA;AAAA,QAAA,WAAA,EAZoBV,UAAAA,CAAAA,WAAAA,CAAYC,WAYhC;AAAA,QAAA,WAAA,EARoBD,UAAAA,CAAAA,WAAAA,CAAYE;AAQhC,OAAA;AAAA,MAAA,IAAA,EAJsCC,IAItC;AAAA,MAAA,gBAAA,EAAA,gBAAA;AAAA,MAAA,OAAA,EAEoBK,sBAAAA,CAFpB;AAAA,KAAA;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA,saAAA;AAAA,IAAA,EAAA,CAAA,aAAA,GAAA,cAAA;AAAA,IAAA,EAAA,CAAA,UAAA,GAAA,kGAAA;;AAAA,IAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,WAAA,EAAA;AAAA,GAAA,EAAA,EAsBI,CAAA,gBAAA,EAtBJ,aAsBI,CAtBJ;AAwBH","sourcesContent":["import Animated, {\n    runOnJS,\n    useAnimatedReaction,\n} from 'react-native-reanimated';\nimport { DATA_LENGTH } from '../constants';\nimport type { TCarouselProps } from '../types';\n\nexport function useOnProgressChange(\n    opts: {\n        size: number;\n        offsetX: Animated.SharedValue<number>;\n        rawData: TCarouselProps['data'];\n    } & Pick<TCarouselProps, 'onProgressChange'>\n) {\n    const { offsetX, rawData, size, onProgressChange } = opts;\n    const rawDataLength = rawData.length;\n    useAnimatedReaction(\n        () => offsetX.value,\n        (_value) => {\n            let value = _value;\n\n            if (rawDataLength === DATA_LENGTH.SINGLE_ITEM) {\n                value = value % size;\n            }\n\n            if (rawDataLength === DATA_LENGTH.DOUBLE_ITEM) {\n                value = value % (size * 2);\n            }\n\n            let absoluteProgress = Math.abs(value / size);\n\n            if (value > 0) {\n                absoluteProgress = rawDataLength - absoluteProgress;\n            }\n\n            !!onProgressChange &&\n                runOnJS(onProgressChange)(value, absoluteProgress);\n        },\n        [onProgressChange, rawDataLength]\n    );\n}\n"]},"metadata":{},"sourceType":"script"}