{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport * as React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Account from \"../screens/account/Account\";\nimport Security from \"../screens/account/Security\";\nimport ForgotPassword from \"../screens/authentication/ForgotPassword\";\nimport ReinitPassword from \"../screens/authentication/ReinitPassword\";\nimport Error from \"../screens/error/Error\";\nimport Home from \"../screens/home/Home\";\nimport Notifications from \"../screens/notification/Notifications\";\nimport Checkout from \"../screens/order/Checkout\";\nimport SignIn from \"../screens/authentication/SignIn\";\nimport SignUp from \"../screens/authentication/SignUp\";\nimport * as Linking from \"expo-linking\";\nimport OtpVerification from \"../screens/authentication/OtpVerification\";\nimport AccountLocked from \"../screens/error/AccountLocked\";\nimport OnBoardingStep1 from \"../screens/onBoarding/OnBoardingStep1\";\nimport OnBoardingStep3 from \"../screens/onBoarding/OnBoardingStep2\";\nimport OnBoardingStep2 from \"../screens/onBoarding/OnBoardingStep3\";\nimport TermsAndUse from \"../screens/other/TermsAndUse\";\nimport { darkTheme, lightTheme, theme } from \"../constants/theme\";\nimport ShoppingCard from \"../screens/order/ShoppingCard\";\nimport Search from \"../screens/product/Search\";\nimport useStore from \"../context/store\";\nimport Category from \"../screens/category/notification/Category\";\nimport Categories from \"../screens/category/notification/Categories\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var routes = {\n  Home: [{\n    path: \"*\",\n    component: Home,\n    title: \"Accueil\",\n    inDrawer: true\n  }],\n  Account: [{\n    path: \"/\",\n    component: Account,\n    title: \"Mon compte\",\n    inDrawer: true\n  }, {\n    path: \"security\",\n    component: Security,\n    title: \"Sécurité\"\n  }],\n  Order: [{\n    path: \"shopping-card\",\n    component: ShoppingCard,\n    title: \"Panier\",\n    inDrawer: true\n  }, {\n    path: \"checkout\",\n    component: Checkout,\n    title: \"Caisse\"\n  }],\n  Search: [{\n    path: \"/\",\n    component: Search,\n    title: \"Recherche\",\n    inDrawer: true\n  }],\n  Notification: [{\n    path: \"/\",\n    component: Notifications,\n    title: \"Notifications\",\n    inDrawer: true\n  }],\n  Category: [{\n    path: \"/:id\",\n    component: Category,\n    title: \"Catégorie\",\n    inDrawer: false\n  }, {\n    path: \"/all\",\n    component: Categories,\n    title: \"Catégories\",\n    inDrawer: true\n  }],\n  Other: [{\n    path: \"terms-and-use\",\n    component: TermsAndUse,\n    title: \"Termes et conditions\",\n    inDrawer: true\n  }],\n  Authentication: [{\n    path: \"sign-in\",\n    component: SignIn,\n    access: \"only-disconnected\",\n    allowGoBack: true,\n    title: \"Se connecter\"\n  }, {\n    path: \"otp\",\n    component: OtpVerification,\n    access: \"only-disconnected\",\n    title: \"Code de vérification\"\n  }, {\n    path: \"forgot-password\",\n    component: ForgotPassword,\n    access: \"only-disconnected\",\n    title: \"Mot de passe oublié\"\n  }, {\n    path: \"sign-up\",\n    component: SignUp,\n    access: \"only-disconnected\",\n    title: \"Inscription\"\n  }, {\n    path: \"reinit-password\",\n    component: ReinitPassword,\n    access: \"only-disconnected\",\n    title: \"Réinitialisation de mot de passe\"\n  }],\n  Error: [{\n    path: \"account-locked\",\n    component: AccountLocked,\n    access: \"only-disconnected\",\n    title: \"Compte bloqué\"\n  }, {\n    path: \"error\",\n    component: Error,\n    title: \"Erreur\"\n  }],\n  OnBoarding: [{\n    path: \"step-1\",\n    component: OnBoardingStep1,\n    title: \"Créer un wallet\"\n  }, {\n    path: \"step-2\",\n    component: OnBoardingStep2,\n    title: \"Mes wallets\"\n  }, {\n    path: \"step-3\",\n    component: OnBoardingStep3,\n    title: \"Hey\"\n  }]\n};\nvar Drawer = createDrawerNavigator();\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  var linking = {\n    prefixes: [Linking.makeUrl(\"/\")],\n    config: {\n      screens: {}\n    }\n  };\n\n  var renderDrawer = function renderDrawer(routeGroup, routeName) {\n    var store = useStore();\n    var bottomRoutes = [{\n      id: 0,\n      path: \"Home\"\n    }, {\n      id: 1,\n      path: \"Account\"\n    }, {\n      id: 2,\n      path: \"Search\"\n    }, {\n      id: 3,\n      path: \"ShoppingCard\"\n    }];\n    return _jsx(Drawer.Screen, {\n      name: routeGroup.component.name,\n      component: routeGroup.component,\n      options: {\n        drawerItemStyle: routeGroup.inDrawer == true ? {} : {\n          height: 0\n        },\n        headerShown: Platform.OS !== \"web\",\n        title: routeGroup.title,\n        drawerIcon: routeGroup.icon != undefined ? routeGroup.icon : undefined,\n        drawerActiveTintColor: theme.colors.text[600],\n        drawerActiveBackgroundColor: theme.colors.primary[100],\n        headerTintColor: theme.colors.primary[500]\n      },\n      listeners: function listeners(_ref2) {\n        var navigation = _ref2.navigation,\n            route = _ref2.route;\n        return {\n          drawerItemPress: function drawerItemPress(e) {\n            bottomRoutes.forEach(function (currentRoute) {\n              if (route.name == currentRoute.path) {\n                store.setBottomBarSelectedIndex(currentRoute.id);\n              }\n\n              return;\n            });\n          }\n        };\n      }\n    }, routeGroup.component.name);\n  };\n\n  Object.keys(routes).forEach(function (routeName) {\n    linking.config.screens[routeName] = {};\n    routes[routeName].forEach(function (route) {\n      try {\n        linking.config.screens[route.component.name] = route.path != \"*\" && route.path != \"\" && route.directLink != true ? routeName.toLocaleLowerCase() + \"/\" + route.path : route.path;\n      } catch (error) {\n        console.log(\"route error => \", error);\n      }\n    });\n  });\n  return _jsx(NavigationContainer, {\n    linking: linking,\n    theme: theme.config.initialColorMode === \"dark\" ? darkTheme : lightTheme,\n    children: _jsx(Drawer.Navigator, {\n      children: Object.keys(routes).map(function (routeName) {\n        return routes[routeName].map(function (routeGroup) {\n          return routeGroup.onlyChildren ? _jsx(Drawer.Group, {\n            children: renderDrawer(routeGroup, routeName)\n          }) : routeGroup.modal == true ? _jsx(Drawer.Group, {\n            screenOptions: {\n              presentation: \"modal\"\n            },\n            children: renderDrawer(routeGroup, routeName)\n          }) : renderDrawer(routeGroup, routeName);\n        });\n      })\n    })\n  });\n}","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/navigation/index.tsx"],"names":["NavigationContainer","createDrawerNavigator","React","Account","Security","ForgotPassword","ReinitPassword","Error","Home","Notifications","Checkout","SignIn","SignUp","Linking","OtpVerification","AccountLocked","OnBoardingStep1","OnBoardingStep3","OnBoardingStep2","TermsAndUse","darkTheme","lightTheme","theme","ShoppingCard","Search","useStore","Category","Categories","routes","path","component","title","inDrawer","Order","Notification","Other","Authentication","access","allowGoBack","OnBoarding","Drawer","Navigation","colorScheme","linking","prefixes","makeUrl","config","screens","renderDrawer","routeGroup","routeName","store","bottomRoutes","id","name","drawerItemStyle","height","headerShown","Platform","OS","drawerIcon","icon","undefined","drawerActiveTintColor","colors","text","drawerActiveBackgroundColor","primary","headerTintColor","navigation","route","drawerItemPress","e","forEach","currentRoute","setBottomBarSelectedIndex","Object","keys","directLink","toLocaleLowerCase","error","console","log","initialColorMode","map","onlyChildren","modal","presentation"],"mappings":"AAAA,SACEA,mBADF,QAKO,0BALP;AAMA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,aAAP;AACA,OAAOC,QAAP;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;AAGA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;AACA,OAAOC,eAAP;AACA,OAAOC,aAAP;AACA,OAAOC,eAAP;AACA,OAAOC,eAAP;AACA,OAAOC,eAAP;AACA,OAAOC,WAAP;AAEA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,KAAhC;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AAEA,OAAOC,QAAP;AAEA,OAAOC,QAAP;AACA,OAAOC,UAAP;;AAkBA,OAAO,IAAMC,MAAc,GAAG;AAC5BpB,EAAAA,IAAI,EAAE,CACJ;AACEqB,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,SAAS,EAAEtB,IAFb;AAGEuB,IAAAA,KAAK,EAAE,SAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADI,CADsB;AAmB5B7B,EAAAA,OAAO,EAAE,CACP;AACE0B,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,SAAS,EAAE3B,OAFb;AAGE4B,IAAAA,KAAK,EAAE,YAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADO,EAOP;AAAEH,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,SAAS,EAAE1B,QAA/B;AAAyC2B,IAAAA,KAAK,EAAE;AAAhD,GAPO,CAnBmB;AA6B5BE,EAAAA,KAAK,EAAE,CACL;AACEJ,IAAAA,IAAI,EAAE,eADR;AAEEC,IAAAA,SAAS,EAAEP,YAFb;AAGEQ,IAAAA,KAAK,EAAE,QAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADK,EAOL;AAAEH,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,SAAS,EAAEpB,QAA/B;AAAyCqB,IAAAA,KAAK,EAAE;AAAhD,GAPK,CA7BqB;AAuC5BP,EAAAA,MAAM,EAAE,CACN;AAAEK,IAAAA,IAAI,EAAE,GAAR;AAAaC,IAAAA,SAAS,EAAEN,MAAxB;AAAgCO,IAAAA,KAAK,EAAE,WAAvC;AAAoDC,IAAAA,QAAQ,EAAE;AAA9D,GADM,CAvCoB;AA2C5BE,EAAAA,YAAY,EAAE,CACZ;AACEL,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,SAAS,EAAErB,aAFb;AAGEsB,IAAAA,KAAK,EAAE,eAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADY,CA3Cc;AAqD5BN,EAAAA,QAAQ,EAAE,CACR;AACEG,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,SAAS,EAAEJ,QAFb;AAGEK,IAAAA,KAAK,EAAE,WAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADQ,EAOR;AACEH,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,SAAS,EAAEH,UAFb;AAGEI,IAAAA,KAAK,EAAE,YAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPQ,CArDkB;AAoE5BG,EAAAA,KAAK,EAAE,CACL;AACEN,IAAAA,IAAI,EAAE,eADR;AAEEC,IAAAA,SAAS,EAAEX,WAFb;AAGEY,IAAAA,KAAK,EAAE,sBAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADK,CApEqB;AA6E5BI,EAAAA,cAAc,EAAE,CACd;AACEP,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,SAAS,EAAEnB,MAFb;AAGE0B,IAAAA,MAAM,EAAE,mBAHV;AAIEC,IAAAA,WAAW,EAAE,IAJf;AAKEP,IAAAA,KAAK,EAAE;AALT,GADc,EAQd;AACEF,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,SAAS,EAAEhB,eAFb;AAGEuB,IAAAA,MAAM,EAAE,mBAHV;AAIEN,IAAAA,KAAK,EAAE;AAJT,GARc,EAcd;AACEF,IAAAA,IAAI,EAAE,iBADR;AAEEC,IAAAA,SAAS,EAAEzB,cAFb;AAGEgC,IAAAA,MAAM,EAAE,mBAHV;AAIEN,IAAAA,KAAK,EAAE;AAJT,GAdc,EAoBd;AACEF,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,SAAS,EAAElB,MAFb;AAGEyB,IAAAA,MAAM,EAAE,mBAHV;AAIEN,IAAAA,KAAK,EAAE;AAJT,GApBc,EA0Bd;AACEF,IAAAA,IAAI,EAAE,iBADR;AAEEC,IAAAA,SAAS,EAAExB,cAFb;AAGE+B,IAAAA,MAAM,EAAE,mBAHV;AAIEN,IAAAA,KAAK,EAAE;AAJT,GA1Bc,CA7EY;AA+G5BxB,EAAAA,KAAK,EAAE,CACL;AACEsB,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,SAAS,EAAEf,aAFb;AAGEsB,IAAAA,MAAM,EAAE,mBAHV;AAIEN,IAAAA,KAAK,EAAE;AAJT,GADK,EAOL;AAAEF,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,SAAS,EAAEvB,KAA5B;AAAmCwB,IAAAA,KAAK,EAAE;AAA1C,GAPK,CA/GqB;AA0H5BQ,EAAAA,UAAU,EAAE,CACV;AAAEV,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,SAAS,EAAEd,eAA7B;AAA8Ce,IAAAA,KAAK,EAAE;AAArD,GADU,EAEV;AAAEF,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,SAAS,EAAEZ,eAA7B;AAA8Ca,IAAAA,KAAK,EAAE;AAArD,GAFU,EAGV;AAAEF,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,SAAS,EAAEb,eAA7B;AAA8Cc,IAAAA,KAAK,EAAE;AAArD,GAHU;AA1HgB,CAAvB;AAiIP,IAAMS,MAAM,GAAGvC,qBAAqB,EAApC;AAEA,eAAe,SAASwC,UAAT,OAIZ;AAAA,MAHDC,WAGC,QAHDA,WAGC;AAED,MAAMC,OAA2C,GAAG;AAClDC,IAAAA,QAAQ,EAAE,CAAC/B,OAAO,CAACgC,OAAR,CAAgB,GAAhB,CAAD,CADwC;AAElDC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH;AAF0C,GAApD;;AAOA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAoBC,SAApB,EAA0C;AAE7D,QAAMC,KAAK,GAAG1B,QAAQ,EAAtB;AACA,QAAM2B,YAAY,GAAG,CACnB;AACEC,MAAAA,EAAE,EAAE,CADN;AAEExB,MAAAA,IAAI,EAAE;AAFR,KADmB,EAKnB;AACEwB,MAAAA,EAAE,EAAE,CADN;AAEExB,MAAAA,IAAI,EAAE;AAFR,KALmB,EASnB;AACEwB,MAAAA,EAAE,EAAE,CADN;AAEExB,MAAAA,IAAI,EAAE;AAFR,KATmB,EAanB;AACEwB,MAAAA,EAAE,EAAE,CADN;AAEExB,MAAAA,IAAI,EAAE;AAFR,KAbmB,CAArB;AAmBF,WACI,KAAC,MAAD,CAAQ,MAAR;AAEE,MAAA,IAAI,EAAEoB,UAAU,CAACnB,SAAX,CAAqBwB,IAF7B;AAGE,MAAA,SAAS,EAAEL,UAAU,CAACnB,SAHxB;AAIE,MAAA,OAAO,EAAE;AACPyB,QAAAA,eAAe,EAAEN,UAAU,CAACjB,QAAX,IAAuB,IAAvB,GAA8B,EAA9B,GAAmC;AAAEwB,UAAAA,MAAM,EAAE;AAAV,SAD7C;AAEPC,QAAAA,WAAW,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAFtB;AAGP5B,QAAAA,KAAK,EAAEkB,UAAU,CAAClB,KAHX;AAIP6B,QAAAA,UAAU,EAAEX,UAAU,CAACY,IAAX,IAAmBC,SAAnB,GAA+Bb,UAAU,CAACY,IAA1C,GAAiDC,SAJtD;AAKPC,QAAAA,qBAAqB,EAAEzC,KAAK,CAAC0C,MAAN,CAAaC,IAAb,CAAkB,GAAlB,CALhB;AAMPC,QAAAA,2BAA2B,EAAE5C,KAAK,CAAC0C,MAAN,CAAaG,OAAb,CAAqB,GAArB,CANtB;AAOPC,QAAAA,eAAe,EAAE9C,KAAK,CAAC0C,MAAN,CAAaG,OAAb,CAAqB,GAArB;AAPV,OAJX;AAaE,MAAA,SAAS,EAAI;AAAA,YAAEE,UAAF,SAAEA,UAAF;AAAA,YAAcC,KAAd,SAAcA,KAAd;AAAA,eAAyB;AACpCC,UAAAA,eAAe,EAAE,yBAACC,CAAD,EAAK;AACpBpB,YAAAA,YAAY,CAACqB,OAAb,CAAqB,UAACC,YAAD,EAAgB;AACnC,kBAAGJ,KAAK,CAAChB,IAAN,IAAcoB,YAAY,CAAC7C,IAA9B,EAAmC;AAC/BsB,gBAAAA,KAAK,CAACwB,yBAAN,CAAgCD,YAAY,CAACrB,EAA7C;AACH;;AACD;AACH,aALC;AAOD;AATmC,SAAzB;AAAA;AAbf,OACOJ,UAAU,CAACnB,SAAX,CAAqBwB,IAD5B,CADJ;AA2BC,GAjDD;;AAmDAsB,EAAAA,MAAM,CAACC,IAAP,CAAYjD,MAAZ,EAAoB6C,OAApB,CAA4B,UAACvB,SAAD,EAAuB;AAEjDP,IAAAA,OAAO,CAACG,MAAR,CAAeC,OAAf,CAAuBG,SAAvB,IAAoC,EAApC;AAEAtB,IAAAA,MAAM,CAACsB,SAAD,CAAN,CAAkBuB,OAAlB,CAA0B,UAACH,KAAD,EAAgB;AACxC,UAAI;AAEF3B,QAAAA,OAAO,CAACG,MAAR,CAAeC,OAAf,CAAuBuB,KAAK,CAACxC,SAAN,CAAgBwB,IAAvC,IACEgB,KAAK,CAACzC,IAAN,IAAc,GAAd,IAAqByC,KAAK,CAACzC,IAAN,IAAc,EAAnC,IAAyCyC,KAAK,CAACQ,UAAN,IAAoB,IAA7D,GACO5B,SAAS,CAAC6B,iBAAV,EADP,SACwCT,KAAK,CAACzC,IAD9C,GAEIyC,KAAK,CAACzC,IAHZ;AAID,OAND,CAME,OAAOmD,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACD;AACF,KAVD;AAWD,GAfD;AAiBA,SACE,KAAC,mBAAD;AACE,IAAA,OAAO,EAAErC,OADX;AAEE,IAAA,KAAK,EAAErB,KAAK,CAACwB,MAAN,CAAaqC,gBAAb,KAAkC,MAAlC,GAA2C/D,SAA3C,GAAuDC,UAFhE;AAAA,cAKE,KAAC,MAAD,CAAQ,SAAR;AAAA,gBACGuD,MAAM,CAACC,IAAP,CAAYjD,MAAZ,EAAoBwD,GAApB,CAAwB,UAAClC,SAAD;AAAA,eACvBtB,MAAM,CAACsB,SAAD,CAAN,CAAkBkC,GAAlB,CAAsB,UAACnC,UAAD;AAAA,iBACpBA,UAAU,CAACoC,YAAX,GAEE,KAAC,MAAD,CAAQ,KAAR;AAAA,sBAAerC,YAAY,CAACC,UAAD,EAAaC,SAAb;AAA3B,YAFF,GAGID,UAAU,CAACqC,KAAX,IAAoB,IAApB,GAEF,KAAC,MAAD,CAAQ,KAAR;AAAc,YAAA,aAAa,EAAE;AAAEC,cAAAA,YAAY,EAAE;AAAhB,aAA7B;AAAA,sBACGvC,YAAY,CAACC,UAAD,EAAaC,SAAb;AADf,YAFE,GAMFF,YAAY,CAACC,UAAD,EAAaC,SAAb,CAVM;AAAA,SAAtB,CADuB;AAAA,OAAxB;AADH;AALF,IADF;AAyBD","sourcesContent":["import {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n  Router,\n} from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport * as React from \"react\";\nimport { ColorSchemeName, Platform } from \"react-native\";\nimport Account from \"../screens/account/Account\";\nimport Security from \"../screens/account/Security\";\nimport ForgotPassword from \"../screens/authentication/ForgotPassword\";\nimport ReinitPassword from \"../screens/authentication/ReinitPassword\";\nimport Error from \"../screens/error/Error\";\nimport Home from \"../screens/home/Home\";\nimport Notifications from \"../screens/notification/Notifications\";\nimport Checkout from \"../screens/order/Checkout\";\nimport NotFound from \"../screens/error/NotFound\";\nimport SignIn from \"../screens/authentication/SignIn\";\nimport SignUp from \"../screens/authentication/SignUp\";\nimport { RootStackParamList, RootTabParamList } from \"../@types/types\";\nimport { LinkingOptions } from \"@react-navigation/native\";\nimport * as Linking from \"expo-linking\";\nimport OtpVerification from \"../screens/authentication/OtpVerification\";\nimport AccountLocked from \"../screens/error/AccountLocked\";\nimport OnBoardingStep1 from \"../screens/onBoarding/OnBoardingStep1\";\nimport OnBoardingStep3 from \"../screens/onBoarding/OnBoardingStep2\";\nimport OnBoardingStep2 from \"../screens/onBoarding/OnBoardingStep3\";\nimport TermsAndUse from \"../screens/other/TermsAndUse\";\nimport { Hidden, Icon } from \"native-base\";\nimport { darkTheme, lightTheme, theme } from \"../constants/theme\";\nimport ShoppingCard from \"../screens/order/ShoppingCard\";\nimport Search from \"../screens/product/Search\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport useStore from \"../context/store\";\nimport categories from \"../screens/category/notification/Category\";\nimport Category from \"../screens/category/notification/Category\";\nimport Categories from \"../screens/category/notification/Categories\";\n\ntype Route = {\n  path: string;\n  component: React.FC<any>;\n  icon?: React.FC<any>;\n  access?: string;\n  title?: string;\n  inDrawer?: boolean;\n  modal?: boolean;\n  directLink?: boolean;\n  allowGoBack?: boolean;\n  onlyChildren?: boolean;\n  children?: Route[];\n};\ntype RouteGroup = Array<Route>;\ntype Routes = Record<string, RouteGroup>;\n\nexport const routes: Routes = {\n  Home: [\n    {\n      path: \"*\",\n      component: Home,\n      title: \"Accueil\",\n      inDrawer: true,\n      // icon: () => (\n      //   <Icon\n      //     mb=\"1\"\n      //     // @ts-ignore\n      //     as={<MaterialCommunityIcons name={\"home\"} />}\n      //     color=\"primary.500\"\n      //     size=\"sm\"\n      //   />\n      // ),\n    },\n  ],\n\n  Account: [\n    {\n      path: \"/\",\n      component: Account,\n      title: \"Mon compte\",\n      inDrawer: true,\n    },\n    { path: \"security\", component: Security, title: \"Sécurité\" },\n  ],\n\n  Order: [\n    {\n      path: \"shopping-card\",\n      component: ShoppingCard,\n      title: \"Panier\",\n      inDrawer: true,\n    },\n    { path: \"checkout\", component: Checkout, title: \"Caisse\" },\n  ],\n\n  Search: [\n    { path: \"/\", component: Search, title: \"Recherche\", inDrawer: true },\n  ],\n\n  Notification: [\n    {\n      path: \"/\",\n      component: Notifications,\n      title: \"Notifications\",\n      inDrawer: true,\n    },\n  ],\n\n\n  Category: [\n    {\n      path: \"/:id\",\n      component: Category,\n      title: \"Catégorie\",\n      inDrawer: false,\n    },\n    {\n      path: \"/all\",\n      component: Categories,\n      title: \"Catégories\",\n      inDrawer: true,\n    },\n  ],\n\n  Other: [\n    {\n      path: \"terms-and-use\",\n      component: TermsAndUse,\n      title: \"Termes et conditions\",\n      inDrawer: true,\n    }\n  ],\n\n  Authentication: [\n    {\n      path: \"sign-in\",\n      component: SignIn,\n      access: \"only-disconnected\",\n      allowGoBack: true,\n      title: \"Se connecter\",\n    },\n    {\n      path: \"otp\",\n      component: OtpVerification,\n      access: \"only-disconnected\",\n      title: \"Code de vérification\",\n    },\n    {\n      path: \"forgot-password\",\n      component: ForgotPassword,\n      access: \"only-disconnected\",\n      title: \"Mot de passe oublié\",\n    },\n    {\n      path: \"sign-up\",\n      component: SignUp,\n      access: \"only-disconnected\",\n      title: \"Inscription\",\n    },\n    {\n      path: \"reinit-password\",\n      component: ReinitPassword,\n      access: \"only-disconnected\",\n      title: \"Réinitialisation de mot de passe\",\n    },\n  ],\n\n  Error: [\n    {\n      path: \"account-locked\",\n      component: AccountLocked,\n      access: \"only-disconnected\",\n      title: \"Compte bloqué\",\n    },\n    { path: \"error\", component: Error, title: \"Erreur\" },\n    // { path: \"*\", component: NotFound }\n  ],\n\n  OnBoarding: [\n    { path: \"step-1\", component: OnBoardingStep1, title: \"Créer un wallet\" },\n    { path: \"step-2\", component: OnBoardingStep2, title: \"Mes wallets\" },\n    { path: \"step-3\", component: OnBoardingStep3, title: \"Hey\" },\n  ],\n};\n\nconst Drawer = createDrawerNavigator<RootStackParamList>();\n\nexport default function Navigation({\n  colorScheme,\n}: {\n  colorScheme: ColorSchemeName;\n}) {\n\n  const linking: LinkingOptions<RootStackParamList> = {\n    prefixes: [Linking.makeUrl(\"/\")],\n    config: {\n      screens: {},\n    },\n  };\n\n  const renderDrawer = (routeGroup: Route, routeName: string) => {\n  \n    const store = useStore();\n    const bottomRoutes = [\n      {\n        id: 0,\n        path: \"Home\",\n      },\n      {\n        id: 1,\n        path: \"Account\",\n      },\n      {\n        id: 2,\n        path: \"Search\",\n      },\n      {\n        id: 3,\n        path: \"ShoppingCard\",\n      },\n    ];\n  \n  return (\n      <Drawer.Screen\n        key={routeGroup.component.name}\n        name={routeGroup.component.name as keyof RootStackParamList}\n        component={routeGroup.component}\n        options={{\n          drawerItemStyle: routeGroup.inDrawer == true ? {} : { height: 0 },\n          headerShown: Platform.OS !== \"web\",\n          title: routeGroup.title,\n          drawerIcon: routeGroup.icon != undefined ? routeGroup.icon : undefined,\n          drawerActiveTintColor: theme.colors.text[600],\n          drawerActiveBackgroundColor: theme.colors.primary[100],\n          headerTintColor: theme.colors.primary[500],\n        }}\n        listeners = {({navigation, route})=> ({\n          drawerItemPress: (e)=>{\n            bottomRoutes.forEach((currentRoute)=>{\n              if(route.name == currentRoute.path){\n                  store.setBottomBarSelectedIndex(currentRoute.id)\n              }\n              return;\n          })\n            \n          }\n        })}\n      />\n    );\n  }\n\n  Object.keys(routes).forEach((routeName: string) => {\n    // @ts-ignore\n    linking.config.screens[routeName] = {};\n\n    routes[routeName].forEach((route: any) => {\n      try {\n        // @ts-ignore\n        linking.config.screens[route.component.name] =\n          route.path != \"*\" && route.path != \"\" && route.directLink != true\n            ? `${routeName.toLocaleLowerCase()}/${route.path}`\n            : route.path;\n      } catch (error) {\n        console.log(\"route error => \", error);\n      }\n    });\n  });\n\n  return (\n    <NavigationContainer\n      linking={linking}\n      theme={theme.config.initialColorMode === \"dark\" ? darkTheme : lightTheme}\n    >\n      {/* @ts-ignore */}\n      <Drawer.Navigator>\n        {Object.keys(routes).map((routeName: string) =>\n          routes[routeName].map((routeGroup: Route) =>\n            routeGroup.onlyChildren ? (\n              // @ts-ignore\n              <Drawer.Group>{renderDrawer(routeGroup, routeName)}</Drawer.Group>\n            ) : routeGroup.modal == true ? (\n              // @ts-ignore\n              <Drawer.Group screenOptions={{ presentation: \"modal\" }}>\n                {renderDrawer(routeGroup, routeName)}\n              </Drawer.Group> \n            ) : (\n              renderDrawer(routeGroup, routeName)\n            )\n          )\n        )}\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}