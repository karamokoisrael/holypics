{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollViewGesture = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactNativeReanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\n\nvar _constants = require(\"./constants\");\n\nvar _store = require(\"./store\");\n\nvar _dealWithAnimation = require(\"./utils/dealWithAnimation\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar IScrollViewGesture = function IScrollViewGesture(props) {\n  var _React$useContext = _react.default.useContext(_store.CTX),\n      _React$useContext$pro = _React$useContext.props,\n      vertical = _React$useContext$pro.vertical,\n      style = _React$useContext$pro.style,\n      data = _React$useContext$pro.data,\n      pagingEnabled = _React$useContext$pro.pagingEnabled,\n      snapEnabled = _React$useContext$pro.snapEnabled,\n      panGestureHandlerProps = _React$useContext$pro.panGestureHandlerProps,\n      infinite = _React$useContext$pro.loop,\n      scrollAnimationDuration = _React$useContext$pro.scrollAnimationDuration,\n      withAnimation = _React$useContext$pro.withAnimation,\n      enabled = _React$useContext$pro.enabled;\n\n  var translation = props.translation,\n      size = props.size,\n      onScrollBegin = props.onScrollBegin,\n      onScrollEnd = props.onScrollEnd,\n      onTouchBegin = props.onTouchBegin,\n      onTouchEnd = props.onTouchEnd;\n  var maxPage = data.length;\n  var isHorizontal = (0, _reactNativeReanimated.useDerivedValue)(function () {\n    var _f = function _f() {\n      return !vertical;\n    };\n\n    _f._closure = {\n      vertical: vertical\n    };\n    _f.asString = \"function _f(){const{vertical}=jsThis._closure;{return!vertical;}}\";\n    _f.__workletHash = 14495821007639;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (64:41)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [vertical]);\n  var touching = (0, _reactNativeReanimated.useSharedValue)(false);\n  var scrollEndTranslation = (0, _reactNativeReanimated.useSharedValue)(0);\n  var scrollEndVelocity = (0, _reactNativeReanimated.useSharedValue)(0);\n\n  var _withSpring = _react.default.useCallback(function () {\n    var _f = function _f(toValue, onFinished) {\n      var callback = function () {\n        var _f = function _f(isFinished) {\n          if (isFinished) {\n            onFinished && (0, _reactNativeReanimated.runOnJS)(onFinished)();\n          }\n        };\n\n        _f._closure = {\n          onFinished: onFinished,\n          runOnJS: _reactNativeReanimated.runOnJS\n        };\n        _f.asString = \"function _f(isFinished){const{onFinished,runOnJS}=jsThis._closure;{if(isFinished){onFinished&&runOnJS(onFinished)();}}}\";\n        _f.__workletHash = 9122154549195;\n        _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (72:29)\";\n\n        global.__reanimatedWorkletInit(_f);\n\n        return _f;\n      }();\n\n      var defaultWithAnimation = {\n        type: 'timing',\n        config: {\n          duration: scrollAnimationDuration,\n          easing: _constants.Easing.easeOutQuart\n        }\n      };\n      return (0, _dealWithAnimation.dealWithAnimation)(withAnimation != null ? withAnimation : defaultWithAnimation)(toValue, callback);\n    };\n\n    _f._closure = {\n      runOnJS: _reactNativeReanimated.runOnJS,\n      scrollAnimationDuration: scrollAnimationDuration,\n      Easing: {\n        easeOutQuart: _constants.Easing.easeOutQuart\n      },\n      dealWithAnimation: _dealWithAnimation.dealWithAnimation,\n      withAnimation: withAnimation\n    };\n    _f.asString = \"function _f(toValue,onFinished){const{runOnJS,scrollAnimationDuration,Easing,dealWithAnimation,withAnimation}=jsThis._closure;{var _withAnimation;const callback=function(isFinished){'worklet';if(isFinished){onFinished&&runOnJS(onFinished)();}};const defaultWithAnimation={type:'timing',config:{duration:scrollAnimationDuration,easing:Easing.easeOutQuart}};return dealWithAnimation((_withAnimation=withAnimation)!==null&&_withAnimation!==void 0?_withAnimation:defaultWithAnimation)(toValue,callback);}}\";\n    _f.__workletHash = 399949545942;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (70:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [scrollAnimationDuration, withAnimation]);\n\n  var endWithSpring = _react.default.useCallback(function () {\n    var _f = function _f(onFinished) {\n      var origin = translation.value;\n      var velocity = scrollEndVelocity.value;\n\n      if (!pagingEnabled) {\n        if (snapEnabled) {\n          var nextPage = Math.round((origin + velocity * 0.4) / size) * size;\n          translation.value = _withSpring(nextPage, onFinished);\n          return;\n        }\n\n        translation.value = (0, _reactNativeReanimated.withDecay)({\n          velocity: velocity,\n          deceleration: 0.999\n        });\n        return;\n      }\n\n      var page = Math.round(-translation.value / size);\n      var velocityPage = Math.round(-(translation.value + scrollEndVelocity.value) / size);\n      var finalPage = Math.min(page + 1, Math.max(page - 1, velocityPage));\n\n      if (!infinite) {\n        finalPage = Math.min(maxPage - 1, Math.max(0, finalPage));\n      }\n\n      translation.value = _withSpring(-finalPage * size, onFinished);\n    };\n\n    _f._closure = {\n      translation: translation,\n      scrollEndVelocity: scrollEndVelocity,\n      pagingEnabled: pagingEnabled,\n      snapEnabled: snapEnabled,\n      size: size,\n      _withSpring: _withSpring,\n      withDecay: _reactNativeReanimated.withDecay,\n      infinite: infinite,\n      maxPage: maxPage\n    };\n    _f.asString = \"function _f(onFinished){const{translation,scrollEndVelocity,pagingEnabled,snapEnabled,size,_withSpring,withDecay,infinite,maxPage}=jsThis._closure;{const origin=translation.value;const velocity=scrollEndVelocity.value;if(!pagingEnabled){if(snapEnabled){const nextPage=Math.round((origin+velocity*0.4)/size)*size;translation.value=_withSpring(nextPage,onFinished);return;}translation.value=withDecay({velocity:velocity,deceleration:0.999});return;}const page=Math.round(-translation.value/size);const velocityPage=Math.round(-(translation.value+scrollEndVelocity.value)/size);let finalPage=Math.min(page+1,Math.max(page-1,velocityPage));if(!infinite){finalPage=Math.min(maxPage-1,Math.max(0,finalPage));}translation.value=_withSpring(-finalPage*size,onFinished);}}\";\n    _f.__workletHash = 6617882707805;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (96:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [infinite, _withSpring, translation, scrollEndVelocity, size, maxPage, pagingEnabled, snapEnabled]);\n\n  var onFinish = _react.default.useCallback(function () {\n    var _f = function _f(isFinished) {\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && (0, _reactNativeReanimated.runOnJS)(onScrollEnd)();\n      }\n    };\n\n    _f._closure = {\n      touching: touching,\n      onScrollEnd: onScrollEnd,\n      runOnJS: _reactNativeReanimated.runOnJS\n    };\n    _f.asString = \"function _f(isFinished){const{touching,onScrollEnd,runOnJS}=jsThis._closure;{if(isFinished){touching.value=false;onScrollEnd&&runOnJS(onScrollEnd)();}}}\";\n    _f.__workletHash = 12308424749737;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (140:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [onScrollEnd, touching]);\n\n  var activeDecay = _react.default.useCallback(function () {\n    var _f = function _f() {\n      touching.value = true;\n      translation.value = (0, _reactNativeReanimated.withDecay)({\n        velocity: scrollEndVelocity.value\n      }, function () {\n        var _f = function _f(isFinished) {\n          return onFinish(isFinished);\n        };\n\n        _f._closure = {\n          onFinish: onFinish\n        };\n        _f.asString = \"function _f(isFinished){const{onFinish}=jsThis._closure;{return onFinish(isFinished);}}\";\n        _f.__workletHash = 12004837605207;\n        _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (155:12)\";\n\n        global.__reanimatedWorkletInit(_f);\n\n        return _f;\n      }());\n    };\n\n    _f._closure = {\n      touching: touching,\n      translation: translation,\n      withDecay: _reactNativeReanimated.withDecay,\n      scrollEndVelocity: scrollEndVelocity,\n      onFinish: onFinish\n    };\n    _f.asString = \"function _f(){const{touching,translation,withDecay,scrollEndVelocity,onFinish}=jsThis._closure;{touching.value=true;translation.value=withDecay({velocity:scrollEndVelocity.value},function(isFinished){return onFinish(isFinished);});}}\";\n    _f.__workletHash = 1701548878343;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (150:42)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [onFinish, scrollEndVelocity.value, touching, translation]);\n\n  var resetBoundary = _react.default.useCallback(function () {\n    var _f = function _f() {\n      if (touching.value) {\n        return;\n      }\n\n      if (translation.value > 0) {\n        if (scrollEndTranslation.value < 0) {\n          activeDecay();\n          return;\n        }\n\n        if (!infinite) {\n          translation.value = _withSpring(0);\n          return;\n        }\n      }\n\n      if (translation.value < -((maxPage - 1) * size)) {\n        if (scrollEndTranslation.value > 0) {\n          activeDecay();\n          return;\n        }\n\n        if (!infinite) {\n          translation.value = _withSpring(-((maxPage - 1) * size));\n          return;\n        }\n      }\n    };\n\n    _f._closure = {\n      touching: touching,\n      translation: translation,\n      scrollEndTranslation: scrollEndTranslation,\n      activeDecay: activeDecay,\n      infinite: infinite,\n      _withSpring: _withSpring,\n      maxPage: maxPage,\n      size: size\n    };\n    _f.asString = \"function _f(){const{touching,translation,scrollEndTranslation,activeDecay,infinite,_withSpring,maxPage,size}=jsThis._closure;{if(touching.value){return;}if(translation.value>0){if(scrollEndTranslation.value<0){activeDecay();return;}if(!infinite){translation.value=_withSpring(0);return;}}if(translation.value<-((maxPage-1)*size)){if(scrollEndTranslation.value>0){activeDecay();return;}if(!infinite){translation.value=_withSpring(-((maxPage-1)*size));return;}}}}\";\n    _f.__workletHash = 3458376770899;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (159:44)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [touching.value, translation, maxPage, size, scrollEndTranslation.value, infinite, activeDecay, _withSpring]);\n\n  (0, _reactNativeReanimated.useAnimatedReaction)(function () {\n    var _f = function _f() {\n      return translation.value;\n    };\n\n    _f._closure = {\n      translation: translation\n    };\n    _f.asString = \"function _f(){const{translation}=jsThis._closure;{return translation.value;}}\";\n    _f.__workletHash = 9829368032147;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (198:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), function () {\n    var _f = function _f() {\n      if (!pagingEnabled) {\n        resetBoundary();\n      }\n    };\n\n    _f._closure = {\n      pagingEnabled: pagingEnabled,\n      resetBoundary: resetBoundary\n    };\n    _f.asString = \"function _f(){const{pagingEnabled,resetBoundary}=jsThis._closure;{if(!pagingEnabled){resetBoundary();}}}\";\n    _f.__workletHash = 10686939088248;\n    _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (199:8)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }(), [pagingEnabled, resetBoundary]);\n  var panGestureEventHandler = (0, _reactNativeReanimated.useAnimatedGestureHandler)({\n    onStart: function () {\n      var _f = function _f(_, ctx) {\n        touching.value = true;\n        ctx.validStart = true;\n        onScrollBegin && (0, _reactNativeReanimated.runOnJS)(onScrollBegin)();\n        ctx.max = (maxPage - 1) * size;\n        ctx.panOffset = translation.value;\n      };\n\n      _f._closure = {\n        touching: touching,\n        onScrollBegin: onScrollBegin,\n        runOnJS: _reactNativeReanimated.runOnJS,\n        maxPage: maxPage,\n        size: size,\n        translation: translation\n      };\n      _f.asString = \"function _f(_,ctx){const{touching,onScrollBegin,runOnJS,maxPage,size,translation}=jsThis._closure;{touching.value=true;ctx.validStart=true;onScrollBegin&&runOnJS(onScrollBegin)();ctx.max=(maxPage-1)*size;ctx.panOffset=translation.value;}}\";\n      _f.__workletHash = 1789833551681;\n      _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (212:21)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    onActive: function () {\n      var _f = function _f(e, ctx) {\n        if (ctx.validStart) {\n          ctx.validStart = false;\n          (0, _reactNativeReanimated.cancelAnimation)(translation);\n        }\n\n        touching.value = true;\n        var translationX = e.translationX,\n            translationY = e.translationY;\n        var panTranslation = isHorizontal.value ? translationX : translationY;\n\n        if (!infinite && (translation.value > 0 || translation.value < -ctx.max)) {\n          var boundary = translation.value > 0 ? 0 : -ctx.max;\n          var fixed = boundary - ctx.panOffset;\n          var dynamic = panTranslation - fixed;\n          translation.value = boundary + dynamic * 0.5;\n          return;\n        }\n\n        translation.value = ctx.panOffset + panTranslation;\n      };\n\n      _f._closure = {\n        cancelAnimation: _reactNativeReanimated.cancelAnimation,\n        translation: translation,\n        touching: touching,\n        isHorizontal: isHorizontal,\n        infinite: infinite\n      };\n      _f.asString = \"function _f(e,ctx){const{cancelAnimation,translation,touching,isHorizontal,infinite}=jsThis._closure;{if(ctx.validStart){ctx.validStart=false;cancelAnimation(translation);}touching.value=true;const{translationX:translationX,translationY:translationY}=e;let panTranslation=isHorizontal.value?translationX:translationY;if(!infinite&&(translation.value>0||translation.value<-ctx.max)){const boundary=translation.value>0?0:-ctx.max;const fixed=boundary-ctx.panOffset;const dynamic=panTranslation-fixed;translation.value=boundary+dynamic*0.5;return;}translation.value=ctx.panOffset+panTranslation;}}\";\n      _f.__workletHash = 10275621069851;\n      _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (219:22)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }(),\n    onEnd: function () {\n      var _f = function _f(e) {\n        var velocityX = e.velocityX,\n            velocityY = e.velocityY,\n            translationX = e.translationX,\n            translationY = e.translationY;\n        scrollEndVelocity.value = isHorizontal.value ? velocityX : velocityY;\n        scrollEndTranslation.value = isHorizontal.value ? translationX : translationY;\n        endWithSpring(onScrollEnd);\n\n        if (!infinite) {\n          touching.value = false;\n        }\n      };\n\n      _f._closure = {\n        scrollEndVelocity: scrollEndVelocity,\n        isHorizontal: isHorizontal,\n        scrollEndTranslation: scrollEndTranslation,\n        endWithSpring: endWithSpring,\n        onScrollEnd: onScrollEnd,\n        infinite: infinite,\n        touching: touching\n      };\n      _f.asString = \"function _f(e){const{scrollEndVelocity,isHorizontal,scrollEndTranslation,endWithSpring,onScrollEnd,infinite,touching}=jsThis._closure;{const{velocityX:velocityX,velocityY:velocityY,translationX:translationX,translationY:translationY}=e;scrollEndVelocity.value=isHorizontal.value?velocityX:velocityY;scrollEndTranslation.value=isHorizontal.value?translationX:translationY;endWithSpring(onScrollEnd);if(!infinite){touching.value=false;}}}\";\n      _f.__workletHash = 8095479445863;\n      _f.__location = \"/Users/zhaodonghao/code/react-native-reanimated-carousel/src/ScrollViewGesture.tsx (243:19)\";\n\n      global.__reanimatedWorkletInit(_f);\n\n      return _f;\n    }()\n  }, [pagingEnabled, isHorizontal.value, infinite, maxPage, size, snapEnabled, onScrollBegin, onScrollEnd]);\n\n  var directionStyle = _react.default.useMemo(function () {\n    return vertical ? styles.contentHorizontal : styles.contentVertical;\n  }, [vertical]);\n\n  return _react.default.createElement(_reactNativeReanimated.default.View, {\n    style: [styles.container, directionStyle, style],\n    onTouchStart: onTouchBegin,\n    onTouchEnd: onTouchEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, (0, _extends2.default)({}, panGestureHandlerProps, {\n    enabled: enabled,\n    onGestureEvent: panGestureEventHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }), props.children));\n};\n\nvar ScrollViewGesture = IScrollViewGesture;\nexports.ScrollViewGesture = ScrollViewGesture;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  contentVertical: {\n    flexDirection: 'column'\n  },\n  contentHorizontal: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["ScrollViewGesture.tsx"],"names":["translation","vertical","onFinish","touching","pagingEnabled","runOnJS","withDecay","onFinished","cancelAnimation","scrollEndVelocity","onScrollEnd","maxPage","size","snapEnabled","scrollEndTranslation","isHorizontal","endWithSpring","infinite","scrollAnimationDuration","Easing","easeOutQuart","dealWithAnimation","withAnimation","activeDecay","_withSpring","IScrollViewGesture","style","data","panGestureHandlerProps","enabled","React","CTX","onScrollBegin","onTouchBegin","onTouchEnd","props","callback","defaultWithAnimation","type","config","duration","easing","origin","velocity","nextPage","Math","deceleration","page","velocityPage","finalPage","resetBoundary","panGestureEventHandler","onStart","ctx","onActive","translationX","translationY","e","panTranslation","boundary","fixed","dynamic","onEnd","velocityX","velocityY","directionStyle","styles","ScrollViewGesture","StyleSheet","container","flex","overflow","contentVertical","flexDirection","contentHorizontal"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,0BAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;;AAIA,IAAA,sBAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AASA,IAAA,UAAA,GAAA,OAAA,eAAA;;AACA,IAAA,MAAA,GAAA,OAAA,WAAA;;AAEA,IAAA,kBAAA,GAAA,OAAA,6BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;;AAAA,IAAMyB,kBAAmC,GAAnCA,SAAAA,kBAAAA,CAAsC,KAAtCA,EAAiD;AACnD,MAAA,iBAAA,GAaIK,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBC,MAAAA,CAbrB,GAaID,CAbJ;AAAA,MAAA,qBAAA,GAAA,iBAAA,CAAA,KAAA;AAAA,MAEQ7B,QAFR,GAAA,qBAAA,CAAA,QAAA;AAAA,MAGQyB,KAHR,GAAA,qBAAA,CAAA,KAAA;AAAA,MAIQC,IAJR,GAAA,qBAAA,CAAA,IAAA;AAAA,MAKQvB,aALR,GAAA,qBAAA,CAAA,aAAA;AAAA,MAMQS,WANR,GAAA,qBAAA,CAAA,WAAA;AAAA,MAOQe,sBAPR,GAAA,qBAAA,CAAA,sBAAA;AAAA,MAQcX,QARd,GAAA,qBAAA,CAAA,IAAA;AAAA,MASQC,uBATR,GAAA,qBAAA,CAAA,uBAAA;AAAA,MAUQI,aAVR,GAAA,qBAAA,CAAA,aAAA;AAAA,MAWQO,OAXR,GAAA,qBAAA,CAAA,OAAA;;AAeA,MACI7B,WADJ,GAOImC,KAPJ,CAAA,WAAA;AAAA,MAEIvB,IAFJ,GAOIuB,KAPJ,CAAA,IAAA;AAAA,MAGIH,aAHJ,GAOIG,KAPJ,CAAA,aAAA;AAAA,MAIIzB,WAJJ,GAOIyB,KAPJ,CAAA,WAAA;AAAA,MAKIF,YALJ,GAOIE,KAPJ,CAAA,YAAA;AAAA,MAMID,UANJ,GAOIC,KAPJ,CAAA,UAAA;AASA,MAAMxB,OAAO,GAAGgB,IAAI,CAApB,MAAA;AACA,MAAMZ,YAAY,GAAG,CAAA,GAAA,sBAAA,CAAA,eAAA,EAAA,YAAA;AAAA,QAAA,EAAA,GAAgB,SAAA,EAAA,GAAA;AAAA,aAAM,CAAN,QAAA;AAAhB,KAAA;;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA;AAAA,MAAA,QAAA,EA9DjBd;AA8DiB,KAAA;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA,mEAAA;AAAA,IAAA,EAAA,CAAA,aAAA,GAAA,cAAA;AAAA,IAAA,EAAA,CAAA,UAAA,GAAA,4FAAA;;AAAA,IAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,WAAA,EAAA;AAAA,GAAA,EAAA,EAAiC,CAAtD,QAAsD,CAAjC,CAArB;AACA,MAAME,QAAQ,GAAG,CAAA,GAAA,sBAAA,CAAA,cAAA,EAAjB,KAAiB,CAAjB;AACA,MAAMW,oBAAoB,GAAG,CAAA,GAAA,sBAAA,CAAA,cAAA,EAA7B,CAA6B,CAA7B;AACA,MAAML,iBAAiB,GAAG,CAAA,GAAA,sBAAA,CAAA,cAAA,EAA1B,CAA0B,CAA1B;;AAEA,MAAMe,WAAW,GAAGM,MAAAA,CAAAA,OAAAA,CAAAA,WAAAA,CAAAA,YAAAA;AAAAA,QAAAA,EAAAA,GAAAA,SAAAA,EAAAA,CAAAA,OAAAA,EAAAA,UAAAA,EAC8B;AAE1C,UAAMM,QAAQ,GAAA,YAAA;AAAA,YAAA,EAAA,GAAA,SAAA,EAAA,CAAA,UAAA,EAA4B;AAEtC,cAAA,UAAA,EAAgB;AACZ7B,YAAAA,UAAU,IAAI,CAAA,GAAA,sBAAA,CAAA,OAAA,EAAdA,UAAc,GAAdA;AAEP;AALa,SAAA;;AAAA,QAAA,EAAA,CAAA,QAAA,GAAA;AAAA,UAAA,UAAA,EApEAA,UAoEA;AAAA,UAAA,OAAA,EApERF,sBAAAA,CAAAA;AAoEQ,SAAA;AAAA,QAAA,EAAA,CAAA,QAAA,GAAA,yHAAA;AAAA,QAAA,EAAA,CAAA,aAAA,GAAA,aAAA;AAAA,QAAA,EAAA,CAAA,UAAA,GAAA,4FAAA;;AAAA,QAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,eAAA,EAAA;AAAd,OAAc,EAAd;;AAOA,UAAMgC,oBAAyC,GAAG;AAC9CC,QAAAA,IAAI,EAD0C,QAAA;AAE9CC,QAAAA,MAAM,EAAE;AACJC,UAAAA,QAAQ,EADJ,uBAAA;AAEJC,UAAAA,MAAM,EAAEtB,UAAAA,CAAAA,MAAAA,CAJhB;AAEY;AAFsC,OAAlD;AAQA,aAAO,CAAA,GAAA,kBAAA,CAAA,iBAAA,EAAkBG,aAAlB,IAAA,IAAkBA,GAAlB,aAAkBA,GAAlB,oBAAA,EAAA,OAAA,EAAP,QAAO,CAAP;AAlBYQ,KAAAA;;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA;AAAAA,MAAAA,OAAAA,EA9DJzB,sBAAAA,CAAAA,OA8DIyB;AAAAA,MAAAA,uBAAAA,EAvDRZ,uBAuDQY;AAAAA,MAAAA,MAAAA,EAAAA;AAAAA,QAAAA,YAAAA,EAtDVX,UAAAA,CAAAA,MAAAA,CAAOC;AAsDGU,OAAAA;AAAAA,MAAAA,iBAAAA,EAnDfT,kBAAAA,CAAAA,iBAmDeS;AAAAA,MAAAA,aAAAA,EAnDGR;AAmDHQ,KAAAA;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA,ufAAAA;AAAAA,IAAAA,EAAAA,CAAAA,aAAAA,GAAAA,YAAAA;AAAAA,IAAAA,EAAAA,CAAAA,UAAAA,GAAAA,2FAAAA;;AAAAA,IAAAA,MAAAA,CAAAA,uBAAAA,CAAAA,EAAAA;;AAAAA,WAAAA,EAAAA;AAAAA,GAAAA,EAAAA,EAuBhB,CAAA,uBAAA,EAvBJ,aAuBI,CAvBgBA,CAApB;;AA0BA,MAAMd,aAAa,GAAGc,MAAAA,CAAAA,OAAAA,CAAAA,WAAAA,CAAAA,YAAAA;AAAAA,QAAAA,EAAAA,GAAAA,SAAAA,EAAAA,CAAAA,UAAAA,EACW;AAEzB,UAAMY,MAAM,GAAG1C,WAAW,CAA1B,KAAA;AACA,UAAM2C,QAAQ,GAAGlC,iBAAiB,CAAlC,KAAA;;AACA,UAAI,CAAJ,aAAA,EAAoB;AAChB,YAAA,WAAA,EAAiB;AACb,cAAMmC,QAAQ,GACVC,IAAI,CAAJA,KAAAA,CAAW,CAACH,MAAM,GAAGC,QAAQ,GAAlB,GAAA,IAAXE,IAAAA,IADJ,IAAA;AAEA7C,UAAAA,WAAW,CAAXA,KAAAA,GAAoBwB,WAAW,CAAA,QAAA,EAA/BxB,UAA+B,CAA/BA;AACA;AAEJA;;AAAAA,QAAAA,WAAW,CAAXA,KAAAA,GAAoB,CAAA,GAAA,sBAAA,CAAA,SAAA,EAAU;AAC1B2C,UAAAA,QAAQ,EADkB,QAAA;AAE1BG,UAAAA,YAAY,EAFhB9C;AAA8B,SAAV,CAApBA;AAIA;AAEJ;;AAAA,UAAM+C,IAAI,GAAGF,IAAI,CAAJA,KAAAA,CAAW,CAAC7C,WAAW,CAAZ,KAAA,GAAxB,IAAa6C,CAAb;AACA,UAAMG,YAAY,GAAGH,IAAI,CAAJA,KAAAA,CACjB,EAAE7C,WAAW,CAAXA,KAAAA,GAAoBS,iBAAiB,CAAvC,KAAA,IADJ,IAAqBoC,CAArB;AAGA,UAAII,SAAS,GAAGJ,IAAI,CAAJA,GAAAA,CACZE,IAAI,GADQF,CAAAA,EAEZA,IAAI,CAAJA,GAAAA,CAASE,IAAI,GAAbF,CAAAA,EAFJ,YAEIA,CAFYA,CAAhB;;AAIA,UAAI,CAAJ,QAAA,EAAe;AACXI,QAAAA,SAAS,GAAGJ,IAAI,CAAJA,GAAAA,CAASlC,OAAO,GAAhBkC,CAAAA,EAAsBA,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAlCI,SAAkCJ,CAAtBA,CAAZI;AAGJjD;;AAAAA,MAAAA,WAAW,CAAXA,KAAAA,GAAoBwB,WAAW,CAAC,CAAA,SAAA,GAAD,IAAA,EAA/BxB,UAA+B,CAA/BA;AA9Bc8B,KAAAA;;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA;AAAAA,MAAAA,WAAAA,EAnExB9B,WAmEwB8B;AAAAA,MAAAA,iBAAAA,EA1E8BrB,iBA0E9BqB;AAAAA,MAAAA,aAAAA,EAzFnB1B,aAyFmB0B;AAAAA,MAAAA,WAAAA,EAxFlBjB,WAwFkBiB;AAAAA,MAAAA,IAAAA,EAnEqBlB,IAmErBkB;AAAAA,MAAAA,WAAAA,EAnEJN,WAmEIM;AAAAA,MAAAA,SAAAA,EAlFFxB,sBAAAA,CAAAA,SAkFEwB;AAAAA,MAAAA,QAAAA,EAvEnBb,QAuEmBa;AAAAA,MAAAA,OAAAA,EAtEDnB;AAsECmB,KAAAA;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA,6vBAAAA;AAAAA,IAAAA,EAAAA,CAAAA,aAAAA,GAAAA,aAAAA;AAAAA,IAAAA,EAAAA,CAAAA,UAAAA,GAAAA,2FAAAA;;AAAAA,IAAAA,MAAAA,CAAAA,uBAAAA,CAAAA,EAAAA;;AAAAA,WAAAA,EAAAA;AAAAA,GAAAA,EAAAA,EAgClB,CAAA,QAAA,EAAA,WAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,OAAA,EAAA,aAAA,EAhCJ,WAgCI,CAhCkBA,CAAtB;;AA4CA,MAAM5B,QAAQ,GAAG4B,MAAAA,CAAAA,OAAAA,CAAAA,WAAAA,CAAAA,YAAAA;AAAAA,QAAAA,EAAAA,GAAAA,SAAAA,EAAAA,CAAAA,UAAAA,EACY;AAErB,UAAA,UAAA,EAAgB;AACZ3B,QAAAA,QAAQ,CAARA,KAAAA,GAAAA,KAAAA;AACAO,QAAAA,WAAW,IAAI,CAAA,GAAA,sBAAA,CAAA,OAAA,EAAfA,WAAe,GAAfA;AAEP;AAPYoB,KAAAA;;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA;AAAAA,MAAAA,QAAAA,EAvIjB3B,QAuIiB2B;AAAAA,MAAAA,WAAAA,EAtIMpB,WAsINoB;AAAAA,MAAAA,OAAAA,EAtIFzB,sBAAAA,CAAAA;AAsIEyB,KAAAA;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA,0JAAAA;AAAAA,IAAAA,EAAAA,CAAAA,aAAAA,GAAAA,cAAAA;AAAAA,IAAAA,EAAAA,CAAAA,UAAAA,GAAAA,4FAAAA;;AAAAA,IAAAA,MAAAA,CAAAA,uBAAAA,CAAAA,EAAAA;;AAAAA,WAAAA,EAAAA;AAAAA,GAAAA,EAAAA,EAQb,CAAA,WAAA,EARJ,QAQI,CARaA,CAAjB;;AAWA,MAAMP,WAAW,GAAGO,MAAAA,CAAAA,OAAAA,CAAAA,WAAAA,CAAAA,YAAAA;AAAAA,QAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAwB;AAExC3B,MAAAA,QAAQ,CAARA,KAAAA,GAAAA,IAAAA;AACAH,MAAAA,WAAW,CAAXA,KAAAA,GAAoB,CAAA,GAAA,sBAAA,CAAA,SAAA,EAChB;AAAE2C,QAAAA,QAAQ,EAAElC,iBAAiB,CADb;AAChB,OADgB,EAAA,YAAA;AAAA,YAAA,EAAA,GAEhB,SAAA,EAAA,CAAA,UAAA,EAAA;AAAA,iBAAgBP,QAAQ,CAAxB,UAAwB,CAAxB;AAFgB,SAAA;;AAAA,QAAA,EAAA,CAAA,QAAA,GAAA;AAAA,UAAA,QAAA,EAvJbA;AAuJa,SAAA;AAAA,QAAA,EAAA,CAAA,QAAA,GAAA,yFAAA;AAAA,QAAA,EAAA,CAAA,aAAA,GAAA,cAAA;AAAA,QAAA,EAAA,CAAA,UAAA,GAAA,6FAAA;;AAAA,QAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,eAAA,EAAA;AAApBF,OAAoB,EAAA,CAApBA;AAHgB8B,KAAAA;;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA;AAAAA,MAAAA,QAAAA,EAnJtB3B,QAmJsB2B;AAAAA,MAAAA,WAAAA,EAlJtB9B,WAkJsB8B;AAAAA,MAAAA,SAAAA,EAlJFxB,sBAAAA,CAAAA,SAkJEwB;AAAAA,MAAAA,iBAAAA,EAjJVrB,iBAiJUqB;AAAAA,MAAAA,QAAAA,EAhJL5B;AAgJK4B,KAAAA;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA,2OAAAA;AAAAA,IAAAA,EAAAA,CAAAA,aAAAA,GAAAA,aAAAA;AAAAA,IAAAA,EAAAA,CAAAA,UAAAA,GAAAA,6FAAAA;;AAAAA,IAAAA,MAAAA,CAAAA,uBAAAA,CAAAA,EAAAA;;AAAAA,WAAAA,EAAAA;AAAAA,GAAAA,EAAAA,EAOjB,CAAA,QAAA,EAAWrB,iBAAiB,CAA5B,KAAA,EAAA,QAAA,EAPH,WAOG,CAPiBqB,CAApB;;AASA,MAAMoB,aAAa,GAAGpB,MAAAA,CAAAA,OAAAA,CAAAA,WAAAA,CAAAA,YAAAA;AAAAA,QAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAwB;AAE1C,UAAI3B,QAAQ,CAAZ,KAAA,EAAoB;AAChB;AAGJ;;AAAA,UAAIH,WAAW,CAAXA,KAAAA,GAAJ,CAAA,EAA2B;AACvB,YAAIc,oBAAoB,CAApBA,KAAAA,GAAJ,CAAA,EAAoC;AAChCS,UAAAA,WAAW;AACX;AAEJ;;AAAA,YAAI,CAAJ,QAAA,EAAe;AACXvB,UAAAA,WAAW,CAAXA,KAAAA,GAAoBwB,WAAW,CAA/BxB,CAA+B,CAA/BA;AACA;AAEP;AAED;;AAAA,UAAIA,WAAW,CAAXA,KAAAA,GAAoB,EAAE,CAACW,OAAO,GAAR,CAAA,IAA1B,IAAwB,CAAxB,EAAiD;AAC7C,YAAIG,oBAAoB,CAApBA,KAAAA,GAAJ,CAAA,EAAoC;AAChCS,UAAAA,WAAW;AACX;AAEJ;;AAAA,YAAI,CAAJ,QAAA,EAAe;AACXvB,UAAAA,WAAW,CAAXA,KAAAA,GAAoBwB,WAAW,CAAC,EAAE,CAACb,OAAO,GAAR,CAAA,IAAlCX,IAAgC,CAAD,CAA/BA;AACA;AAEP;AACJ;AA3BqB8B,KAAAA;;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA;AAAAA,MAAAA,QAAAA,EA5JpB3B,QA4JoB2B;AAAAA,MAAAA,WAAAA,EArIpB9B,WAqIoB8B;AAAAA,MAAAA,oBAAAA,EA3IlBhB,oBA2IkBgB;AAAAA,MAAAA,WAAAA,EA1IpBP,WA0IoBO;AAAAA,MAAAA,QAAAA,EAtIjBb,QAsIiBa;AAAAA,MAAAA,WAAAA,EArIAN,WAqIAM;AAAAA,MAAAA,OAAAA,EArIenB,OAqIfmB;AAAAA,MAAAA,IAAAA,EArI8BlB;AAqI9BkB,KAAAA;AAAAA,IAAAA,EAAAA,CAAAA,QAAAA,GAAAA,+cAAAA;AAAAA,IAAAA,EAAAA,CAAAA,aAAAA,GAAAA,aAAAA;AAAAA,IAAAA,EAAAA,CAAAA,UAAAA,GAAAA,6FAAAA;;AAAAA,IAAAA,MAAAA,CAAAA,uBAAAA,CAAAA,EAAAA;;AAAAA,WAAAA,EAAAA;AAAAA,GAAAA,EAAAA,EA2BnB,CACC3B,QAAQ,CADT,KAAA,EAAA,WAAA,EAAA,OAAA,EAAA,IAAA,EAKCW,oBAAoB,CALrB,KAAA,EAAA,QAAA,EAAA,WAAA,EA3BH,WA2BG,CA3BmBgB,CAAtB;;AAsCA,GAAA,GAAA,sBAAA,CAAA,mBAAA,EAAA,YAAA;AAAA,QAAA,EAAA,GACI,SAAA,EAAA,GAAA;AAAA,aAAM9B,WAAW,CAAjB,KAAA;AADJ,KAAA;;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA;AAAA,MAAA,WAAA,EAnMGA;AAmMH,KAAA;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA,+EAAA;AAAA,IAAA,EAAA,CAAA,aAAA,GAAA,aAAA;AAAA,IAAA,EAAA,CAAA,UAAA,GAAA,4FAAA;;AAAA,IAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,WAAA,EAAA;AAAA,GAAA,EAAA,EAAA,YAAA;AAAA,QAAA,EAAA,GAAA,SAAA,EAAA,GAEU;AACF,UAAI,CAAJ,aAAA,EAAoB;AAChBkD,QAAAA,aAAa;AAEpB;AANL,KAAA;;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA;AAAA,MAAA,aAAA,EAlMG9C,aAkMH;AAAA,MAAA,aAAA,EAjMAD;AAiMA,KAAA;AAAA,IAAA,EAAA,CAAA,QAAA,GAAA,0GAAA;AAAA,IAAA,EAAA,CAAA,aAAA,GAAA,cAAA;AAAA,IAAA,EAAA,CAAA,UAAA,GAAA,4FAAA;;AAAA,IAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,WAAA,EAAA;AAAA,GAAA,EAAA,EAOI,CAAA,aAAA,EAPJ,aAOI,CAPJ;AAUA,MAAMgD,sBAAsB,GAAG,CAAA,GAAA,sBAAA,CAAA,yBAAA,EAI3B;AACIC,IAAAA,OAAO,EAAA,YAAA;AAAA,UAAA,EAAA,GAAA,SAAA,EAAA,CAAA,CAAA,EAAA,GAAA,EAAc;AACjBjD,QAAAA,QAAQ,CAARA,KAAAA,GAAAA,IAAAA;AACAkD,QAAAA,GAAG,CAAHA,UAAAA,GAAAA,IAAAA;AACArB,QAAAA,aAAa,IAAI,CAAA,GAAA,sBAAA,CAAA,OAAA,EAAjBA,aAAiB,GAAjBA;AACAqB,QAAAA,GAAG,CAAHA,GAAAA,GAAU,CAAC1C,OAAO,GAAR,CAAA,IAAV0C,IAAAA;AACAA,QAAAA,GAAG,CAAHA,SAAAA,GAAgBrD,WAAW,CAA3BqD,KAAAA;AALG,OAAA;;AAAA,MAAA,EAAA,CAAA,QAAA,GAAA;AAAA,QAAA,QAAA,EAjNjBlD,QAiNiB;AAAA,QAAA,aAAA,EA/MQO,aA+MR;AAAA,QAAA,OAAA,EA/MAL,sBAAAA,CAAAA,OA+MA;AAAA,QAAA,OAAA,EA9MNM,OA8MM;AAAA,QAAA,IAAA,EA9MSC,IA8MT;AAAA,QAAA,WAAA,EA7MDZ;AA6MC,OAAA;AAAA,MAAA,EAAA,CAAA,QAAA,GAAA,gPAAA;AAAA,MAAA,EAAA,CAAA,aAAA,GAAA,aAAA;AAAA,MAAA,EAAA,CAAA,UAAA,GAAA,6FAAA;;AAAA,MAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,aAAA,EAAA;AADX,KACW,EADX;AAQIsD,IAAAA,QAAQ,EAAA,YAAA;AAAA,UAAA,EAAA,GAAA,SAAA,EAAA,CAAA,CAAA,EAAA,GAAA,EAAc;AAClB,YAAID,GAAG,CAAP,UAAA,EAAoB;AAChBA,UAAAA,GAAG,CAAHA,UAAAA,GAAAA,KAAAA;AACA,WAAA,GAAA,sBAAA,CAAA,eAAA,EAAA,WAAA;AAEJlD;;AAAAA,QAAAA,QAAQ,CAARA,KAAAA,GAAAA,IAAAA;AACA,YAAQoD,YAAR,GAAuCE,CAAvC,CAAA,YAAA;AAAA,YAAsBD,YAAtB,GAAuCC,CAAvC,CAAA,YAAA;AACA,YAAIC,cAAc,GAAG3C,YAAY,CAAZA,KAAAA,GAAAA,YAAAA,GAArB,YAAA;;AAIA,YACI,CAAA,QAAA,KACCf,WAAW,CAAXA,KAAAA,GAAAA,CAAAA,IAAyBA,WAAW,CAAXA,KAAAA,GAAoB,CAACqD,GAAG,CAFtD,GACI,CADJ,EAGE;AACE,cAAMM,QAAQ,GAAG3D,WAAW,CAAXA,KAAAA,GAAAA,CAAAA,GAAAA,CAAAA,GAA4B,CAACqD,GAAG,CAAjD,GAAA;AACA,cAAMO,KAAK,GAAGD,QAAQ,GAAGN,GAAG,CAA5B,SAAA;AACA,cAAMQ,OAAO,GAAGH,cAAc,GAA9B,KAAA;AACA1D,UAAAA,WAAW,CAAXA,KAAAA,GAAoB2D,QAAQ,GAAGE,OAAO,GAAtC7D,GAAAA;AACA;AAGJA;;AAAAA,QAAAA,WAAW,CAAXA,KAAAA,GAAoBqD,GAAG,CAAHA,SAAAA,GAApBrD,cAAAA;AAtBI,OAAA;;AAAA,MAAA,EAAA,CAAA,QAAA,GAAA;AAAA,QAAA,eAAA,EAtNhBQ,sBAAAA,CAAAA,eAsNgB;AAAA,QAAA,WAAA,EApMlBR,WAoMkB;AAAA,QAAA,QAAA,EAnNlBG,QAmNkB;AAAA,QAAA,YAAA,EA9MGY,YA8MH;AAAA,QAAA,QAAA,EA5MbE;AA4Ma,OAAA;AAAA,MAAA,EAAA,CAAA,QAAA,GAAA,olBAAA;AAAA,MAAA,EAAA,CAAA,aAAA,GAAA,cAAA;AAAA,MAAA,EAAA,CAAA,UAAA,GAAA,6FAAA;;AAAA,MAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,aAAA,EAAA;AARZ,KAQY,EARZ;AAgCI6C,IAAAA,KAAK,EAAA,YAAA;AAAA,UAAA,EAAA,GAAA,SAAA,EAAA,CAAA,CAAA,EAAS;AACV,YAAQC,SAAR,GAA6DN,CAA7D,CAAA,SAAA;AAAA,YAAmBO,SAAnB,GAA6DP,CAA7D,CAAA,SAAA;AAAA,YAA8BF,YAA9B,GAA6DE,CAA7D,CAAA,YAAA;AAAA,YAA4CD,YAA5C,GAA6DC,CAA7D,CAAA,YAAA;AACAhD,QAAAA,iBAAiB,CAAjBA,KAAAA,GAA0BM,YAAY,CAAZA,KAAAA,GAAAA,SAAAA,GAA1BN,SAAAA;AAGAK,QAAAA,oBAAoB,CAApBA,KAAAA,GAA6BC,YAAY,CAAZA,KAAAA,GAAAA,YAAAA,GAA7BD,YAAAA;AAIAE,QAAAA,aAAa,CAAbA,WAAa,CAAbA;;AAEA,YAAI,CAAJ,QAAA,EAAe;AACXb,UAAAA,QAAQ,CAARA,KAAAA,GAAAA,KAAAA;AAEP;AAdI,OAAA;;AAAA,MAAA,EAAA,CAAA,QAAA,GAAA;AAAA,QAAA,iBAAA,EA1OfM,iBA0Oe;AAAA,QAAA,YAAA,EAzOcM,YAyOd;AAAA,QAAA,oBAAA,EAzOfD,oBAyOe;AAAA,QAAA,aAAA,EAxOfE,aAwOe;AAAA,QAAA,WAAA,EAxODN,WAwOC;AAAA,QAAA,QAAA,EAtOVO,QAsOU;AAAA,QAAA,QAAA,EArObd;AAqOa,OAAA;AAAA,MAAA,EAAA,CAAA,QAAA,GAAA,sbAAA;AAAA,MAAA,EAAA,CAAA,aAAA,GAAA,aAAA;AAAA,MAAA,EAAA,CAAA,UAAA,GAAA,6FAAA;;AAAA,MAAA,MAAA,CAAA,uBAAA,CAAA,EAAA;;AAAA,aAAA,EAAA;AApCkB,KAoClB;AAhCT,GAJ2B,EAoD3B,CAAA,aAAA,EAEIY,YAAY,CAFhB,KAAA,EAAA,QAAA,EAAA,OAAA,EAAA,IAAA,EAAA,WAAA,EAAA,aAAA,EApDJ,WAoDI,CApD2B,CAA/B;;AAgEA,MAAMkD,cAAc,GAAGnC,MAAAA,CAAAA,OAAAA,CAAAA,OAAAA,CAAc,YAAM;AACvC,WAAO7B,QAAQ,GAAGiE,MAAM,CAAT,iBAAA,GAA8BA,MAAM,CAAnD,eAAA;AADmBpC,GAAAA,EAEpB,CAFH,QAEG,CAFoBA,CAAvB;;AAIA,SACI,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,sBAAA,CAAD,OAAC,CAAD,IAAA,EAAA;AACI,IAAA,KAAK,EAAE,CAACoC,MAAM,CAAP,SAAA,EAAA,cAAA,EADX,KACW,CADX;AAEI,IAAA,YAAY,EAFhB,YAAA;AAGI,IAAA,UAAU,EAHd,UAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAKI,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,0BAAA,CAAD,iBAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,sBAAA,EAAA;AAEI,IAAA,OAAO,EAFX,OAAA;AAGI,IAAA,cAAc,EAHlB,sBAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAKK/B,KAAK,CAXlB,QAMQ,CALJ,CADJ;AA7OJ,CAAA;;AA8PO,IAAMgC,iBAAiB,GAAvB,kBAAA;;;AAEP,IAAMD,MAAM,GAAGE,YAAAA,CAAAA,UAAAA,CAAAA,MAAAA,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EADG,CAAA;AAEPC,IAAAA,QAAQ,EAHiB;AAClB,GADkB;AAK7BC,EAAAA,eAAe,EAAE;AACbC,IAAAA,aAAa,EANY;AAKZ,GALY;AAQ7BC,EAAAA,iBAAiB,EAAE;AACfD,IAAAA,aAAa,EATrB;AAQuB;AARU,CAAlBL,CAAf","sourcesContent":["import React from 'react';\nimport { StyleProp, StyleSheet, ViewStyle } from 'react-native';\nimport {\n    PanGestureHandler,\n    PanGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n    cancelAnimation,\n    runOnJS,\n    useAnimatedGestureHandler,\n    useAnimatedReaction,\n    useDerivedValue,\n    useSharedValue,\n    withDecay,\n} from 'react-native-reanimated';\nimport { Easing } from './constants';\nimport { CTX } from './store';\nimport type { WithTimingAnimation } from './types';\nimport { dealWithAnimation } from './utils/dealWithAnimation';\n\ntype GestureContext = {\n    validStart: boolean;\n    panOffset: number;\n    max: number;\n};\n\ninterface Props {\n    size: number;\n    infinite?: boolean;\n    onScrollBegin?: () => void;\n    onScrollEnd?: () => void;\n    onTouchBegin?: () => void;\n    onTouchEnd?: () => void;\n    style?: StyleProp<ViewStyle>;\n    translation: Animated.SharedValue<number>;\n}\n\nconst IScrollViewGesture: React.FC<Props> = (props) => {\n    const {\n        props: {\n            vertical,\n            style,\n            data,\n            pagingEnabled,\n            snapEnabled,\n            panGestureHandlerProps,\n            loop: infinite,\n            scrollAnimationDuration,\n            withAnimation,\n            enabled,\n        },\n    } = React.useContext(CTX);\n\n    const {\n        translation,\n        size,\n        onScrollBegin,\n        onScrollEnd,\n        onTouchBegin,\n        onTouchEnd,\n    } = props;\n\n    const maxPage = data.length;\n    const isHorizontal = useDerivedValue(() => !vertical, [vertical]);\n    const touching = useSharedValue(false);\n    const scrollEndTranslation = useSharedValue(0);\n    const scrollEndVelocity = useSharedValue(0);\n\n    const _withSpring = React.useCallback(\n        (toValue: number, onFinished?: () => void) => {\n            'worklet';\n            const callback = (isFinished: boolean) => {\n                'worklet';\n                if (isFinished) {\n                    onFinished && runOnJS(onFinished)();\n                }\n            };\n\n            const defaultWithAnimation: WithTimingAnimation = {\n                type: 'timing',\n                config: {\n                    duration: scrollAnimationDuration,\n                    easing: Easing.easeOutQuart,\n                },\n            };\n\n            return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n                toValue,\n                callback\n            );\n        },\n        [scrollAnimationDuration, withAnimation]\n    );\n\n    const endWithSpring = React.useCallback(\n        (onFinished?: () => void) => {\n            'worklet';\n            const origin = translation.value;\n            const velocity = scrollEndVelocity.value;\n            if (!pagingEnabled) {\n                if (snapEnabled) {\n                    const nextPage =\n                        Math.round((origin + velocity * 0.4) / size) * size;\n                    translation.value = _withSpring(nextPage, onFinished);\n                    return;\n                }\n                translation.value = withDecay({\n                    velocity,\n                    deceleration: 0.999,\n                });\n                return;\n            }\n            const page = Math.round(-translation.value / size);\n            const velocityPage = Math.round(\n                -(translation.value + scrollEndVelocity.value) / size\n            );\n            let finalPage = Math.min(\n                page + 1,\n                Math.max(page - 1, velocityPage)\n            );\n            if (!infinite) {\n                finalPage = Math.min(maxPage - 1, Math.max(0, finalPage));\n            }\n\n            translation.value = _withSpring(-finalPage * size, onFinished);\n        },\n        [\n            infinite,\n            _withSpring,\n            translation,\n            scrollEndVelocity,\n            size,\n            maxPage,\n            pagingEnabled,\n            snapEnabled,\n        ]\n    );\n\n    const onFinish = React.useCallback(\n        (isFinished: boolean) => {\n            'worklet';\n            if (isFinished) {\n                touching.value = false;\n                onScrollEnd && runOnJS(onScrollEnd)();\n            }\n        },\n        [onScrollEnd, touching]\n    );\n\n    const activeDecay = React.useCallback(() => {\n        'worklet';\n        touching.value = true;\n        translation.value = withDecay(\n            { velocity: scrollEndVelocity.value },\n            (isFinished) => onFinish(isFinished as boolean)\n        );\n    }, [onFinish, scrollEndVelocity.value, touching, translation]);\n\n    const resetBoundary = React.useCallback(() => {\n        'worklet';\n        if (touching.value) {\n            return;\n        }\n\n        if (translation.value > 0) {\n            if (scrollEndTranslation.value < 0) {\n                activeDecay();\n                return;\n            }\n            if (!infinite) {\n                translation.value = _withSpring(0);\n                return;\n            }\n        }\n\n        if (translation.value < -((maxPage - 1) * size)) {\n            if (scrollEndTranslation.value > 0) {\n                activeDecay();\n                return;\n            }\n            if (!infinite) {\n                translation.value = _withSpring(-((maxPage - 1) * size));\n                return;\n            }\n        }\n    }, [\n        touching.value,\n        translation,\n        maxPage,\n        size,\n        scrollEndTranslation.value,\n        infinite,\n        activeDecay,\n        _withSpring,\n    ]);\n\n    useAnimatedReaction(\n        () => translation.value,\n        () => {\n            if (!pagingEnabled) {\n                resetBoundary();\n            }\n        },\n        [pagingEnabled, resetBoundary]\n    );\n\n    const panGestureEventHandler = useAnimatedGestureHandler<\n        PanGestureHandlerGestureEvent,\n        GestureContext\n    >(\n        {\n            onStart: (_, ctx) => {\n                touching.value = true;\n                ctx.validStart = true;\n                onScrollBegin && runOnJS(onScrollBegin)();\n                ctx.max = (maxPage - 1) * size;\n                ctx.panOffset = translation.value;\n            },\n            onActive: (e, ctx) => {\n                if (ctx.validStart) {\n                    ctx.validStart = false;\n                    cancelAnimation(translation);\n                }\n                touching.value = true;\n                const { translationX, translationY } = e;\n                let panTranslation = isHorizontal.value\n                    ? translationX\n                    : translationY;\n\n                if (\n                    !infinite &&\n                    (translation.value > 0 || translation.value < -ctx.max)\n                ) {\n                    const boundary = translation.value > 0 ? 0 : -ctx.max;\n                    const fixed = boundary - ctx.panOffset;\n                    const dynamic = panTranslation - fixed;\n                    translation.value = boundary + dynamic * 0.5;\n                    return;\n                }\n\n                translation.value = ctx.panOffset + panTranslation;\n            },\n            onEnd: (e) => {\n                const { velocityX, velocityY, translationX, translationY } = e;\n                scrollEndVelocity.value = isHorizontal.value\n                    ? velocityX\n                    : velocityY;\n                scrollEndTranslation.value = isHorizontal.value\n                    ? translationX\n                    : translationY;\n\n                endWithSpring(onScrollEnd);\n\n                if (!infinite) {\n                    touching.value = false;\n                }\n            },\n        },\n        [\n            pagingEnabled,\n            isHorizontal.value,\n            infinite,\n            maxPage,\n            size,\n            snapEnabled,\n            onScrollBegin,\n            onScrollEnd,\n        ]\n    );\n\n    const directionStyle = React.useMemo(() => {\n        return vertical ? styles.contentHorizontal : styles.contentVertical;\n    }, [vertical]);\n\n    return (\n        <Animated.View\n            style={[styles.container, directionStyle, style]}\n            onTouchStart={onTouchBegin}\n            onTouchEnd={onTouchEnd}\n        >\n            <PanGestureHandler\n                {...panGestureHandlerProps}\n                enabled={enabled}\n                onGestureEvent={panGestureEventHandler}\n            >\n                {props.children}\n            </PanGestureHandler>\n        </Animated.View>\n    );\n};\n\nexport const ScrollViewGesture = IScrollViewGesture;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        overflow: 'hidden',\n    },\n    contentVertical: {\n        flexDirection: 'column',\n    },\n    contentHorizontal: {\n        flexDirection: 'row',\n    },\n});\n"]},"metadata":{},"sourceType":"script"}