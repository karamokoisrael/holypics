{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { Box, VStack, Text, Button, Icon, useMediaQuery } from \"native-base\";\nimport React from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MainCarouselItem = function MainCarouselItem(_ref) {\n  var heading = _ref.heading,\n      imageUri = _ref.imageUri,\n      content = _ref.content,\n      btnText = _ref.btnText,\n      btnAction = _ref.btnAction,\n      width = _ref.width,\n      height = _ref.height,\n      paddingBottom = _ref.paddingBottom,\n      overlayOpacity = _ref.overlayOpacity,\n      _android = _ref._android,\n      _ios = _ref._ios,\n      imageBackgroundStyle = _ref.imageBackgroundStyle,\n      containerStyle = _ref.containerStyle,\n      onPressNext = _ref.onPressNext,\n      onPressPrev = _ref.onPressPrev,\n      id = _ref.id,\n      totalItem = _ref.totalItem;\n  var defaultProps = {\n    height: 426,\n    width: \"100%\"\n  };\n\n  var _useMediaQuery = useMediaQuery({\n    maxWidth: maxSmallScreenWidth\n  }),\n      _useMediaQuery2 = _slicedToArray(_useMediaQuery, 1),\n      isSmallScreen = _useMediaQuery2[0];\n\n  return _jsx(Pressable, {\n    w: width != undefined ? width : defaultProps.width,\n    h: height != undefined ? height : defaultProps.height,\n    shadow: 3,\n    mb: paddingBottom != undefined ? paddingBottom : 0,\n    children: _jsx(ImageBackground, {\n      style: _objectSpread(_objectSpread({}, styles.imageBackground), {}, {\n        width: width != undefined ? width : defaultProps.width,\n        height: height != undefined ? height : defaultProps.height\n      }, imageBackgroundStyle != undefined ? imageBackgroundStyle : {}),\n      source: {\n        uri: imageUri\n      },\n      children: _jsxs(VStack, {\n        space: \"4\",\n        w: width != undefined ? width : defaultProps.width,\n        h: height != undefined ? height : defaultProps.height,\n        backgroundColor: \"rgba(0, 0, 0, \" + (overlayOpacity != undefined ? overlayOpacity : 0.6) + \")\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        _android: _android != undefined ? _android : {},\n        _ios: _ios != undefined ? _ios : {},\n        style: containerStyle != undefined ? containerStyle : {},\n        children: [_jsx(Box, {\n          px: \"4\",\n          pt: \"4\",\n          children: _jsx(Text, {\n            fontSize: \"md\",\n            color: \"text.50\",\n            style: styles.text,\n            children: heading\n          })\n        }), _jsxs(Box, {\n          px: \"4\",\n          display: \"flex\",\n          alignItems: 'center',\n          justifyContent: 'space-around',\n          flexDirection: 'row',\n          children: [!isSmallScreen ? _jsx(Pressable, {\n            onPress: function onPress() {\n              return onPressPrev();\n            },\n            children: _jsx(Icon, {\n              mb: \"1\",\n              as: _jsx(FontAwesome, {\n                name: \"angle-left\"\n              }),\n              color: \"white\",\n              size: \"lg\",\n              width: '5%'\n            })\n          }) : null, _jsx(Text, {\n            width: '85%',\n            fontSize: \"2xl\",\n            color: \"text.50\",\n            style: styles.text,\n            children: content\n          }), !isSmallScreen ? _jsx(Pressable, {\n            onPress: function onPress() {\n              return onPressNext();\n            },\n            children: _jsx(Icon, {\n              mb: \"1\",\n              as: _jsx(FontAwesome, {\n                name: \"angle-right\"\n              }),\n              color: \"white\",\n              size: \"lg\",\n              width: '5%'\n            })\n          }) : null]\n        }), _jsx(Box, {\n          px: \"4\",\n          pb: \"4\",\n          children: _jsx(Button, {\n            py: \"2\",\n            px: \"1\",\n            borderRadius: \"4\",\n            variant: \"subtle\",\n            _text: {\n              _dark: {\n                color: \"text.50\"\n              },\n              _light: {\n                color: \"coolGray.800\"\n              },\n              fontWeight: \"normal\"\n            },\n            _light: {\n              colorScheme: \"primary\"\n            },\n            _dark: {\n              bg: \"bg.dark\",\n              colorScheme: \"dark\"\n            },\n            onPress: function onPress() {\n              return btnAction();\n            },\n            children: btnText\n          })\n        }), _jsx(Box, {\n          px: \"4\",\n          pb: \"4\",\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-around',\n          flexDirection: 'row',\n          children: _toConsumableArray(Array(totalItem).keys()).map(function (key) {\n            return _jsx(Icon, {\n              mb: \"1\",\n              as: _jsx(FontAwesome, {\n                name: \"circle\"\n              }),\n              color: key == id ? '#fff' : '#000',\n              size: 3\n            }, key);\n          })\n        })]\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  imageBackground: {},\n  text: {\n    textAlign: \"center\"\n  }\n});\nexport default MainCarouselItem;","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/components/custom/MainCarouselItem.tsx"],"names":["FontAwesome","Box","VStack","Text","Button","Icon","useMediaQuery","React","maxSmallScreenWidth","MainCarouselItem","heading","imageUri","content","btnText","btnAction","width","height","paddingBottom","overlayOpacity","_android","_ios","imageBackgroundStyle","containerStyle","onPressNext","onPressPrev","id","totalItem","defaultProps","maxWidth","isSmallScreen","undefined","styles","imageBackground","uri","text","_dark","color","_light","fontWeight","colorScheme","bg","Array","keys","map","key","StyleSheet","create","textAlign"],"mappings":"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","sourcesContent":["import { FontAwesome } from \"@expo/vector-icons\";\nimport { Box, VStack, Text, Button, Stack, Icon, Hidden, useMediaQuery } from \"native-base\";\nimport React from \"react\";\nimport { ImageBackground, Pressable, StyleSheet } from \"react-native\";\nimport { maxSmallScreenWidth } from \"../../constants/layout\";\ntype Props = {\n    heading: string,\n    imageUri: string,\n    content: string\n    btnText: string,\n    btnAction: Function,\n    onPressNext: Function,\n    onPressPrev: Function,\n    id: number | string,\n    totalItem: number\n    _android?: Record<string, any>,\n    _ios?: Record<string, any>,\n    imageBackgroundStyle?: Record<string, any>,\n    containerStyle?: Record<string, any>,\n    width?: number | string,\n    height?: number | string,\n    paddingBottom?: number\n    overlayOpacity?: number,\n    \n}\n\nconst MainCarouselItem = ({heading, imageUri, content, btnText, btnAction, width, height, paddingBottom, overlayOpacity, _android, _ios, imageBackgroundStyle, containerStyle, onPressNext, onPressPrev, id, totalItem}: Props) => {\n    const defaultProps = {\n        height: 426,\n        width: \"100%\"\n    }\n\n    const [isSmallScreen] = useMediaQuery({ maxWidth: maxSmallScreenWidth});\n\n    return (\n        <Pressable w={width != undefined ? width : defaultProps.width} h={height != undefined ? height : defaultProps.height} shadow={3} mb={paddingBottom != undefined ? paddingBottom : 0}>\n        {/* @ts-ignore */}\n            <ImageBackground\n                style={{...styles.imageBackground,  width: width != undefined ? width : defaultProps.width, height: height != undefined ? height : defaultProps.height, ...(imageBackgroundStyle != undefined ? imageBackgroundStyle : {})}}\n                source={{\n                    uri: imageUri,\n                }}\n            >\n                <VStack\n                    space=\"4\"\n                    w={width != undefined ? width : defaultProps.width}\n                    h={height != undefined ? height : defaultProps.height} \n                    backgroundColor={`rgba(0, 0, 0, ${overlayOpacity != undefined ? overlayOpacity : 0.6})`}\n                    flexDirection=\"column\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    _android={_android != undefined ? _android : {}}\n                    _ios={_ios != undefined ? _ios : {}}\n                    style={containerStyle != undefined ? containerStyle : {}}\n                >\n                    <Box px=\"4\" pt=\"4\">\n                        <Text fontSize=\"md\" color=\"text.50\" style={styles.text}>\n                            {heading}\n                        </Text>\n                    </Box>\n                    <Box px=\"4\" display={\"flex\"} alignItems={'center'} justifyContent={'space-around'} flexDirection={'row'}>\n                        {\n                            !isSmallScreen ?\n                                <Pressable\n                                    onPress={()=> onPressPrev()}\n                                    >\n                                    <Icon\n                                        mb=\"1\"\n                                        as={\n                                            <FontAwesome name='angle-left'/>\n                                        }\n                                        color=\"white\"\n                                        size=\"lg\"\n                                        width={'5%'}\n                                    />\n                                </Pressable>\n                                :\n                                null\n                        }\n                        <Text width={'85%'} fontSize=\"2xl\" color=\"text.50\" style={styles.text}>\n                            {content}\n                        </Text>\n                        {\n                            !isSmallScreen ?\n                            <Pressable\n                                onPress={()=> onPressNext()}    \n                                >\n                                <Icon\n                                    mb=\"1\"\n                                    as={\n                                        <FontAwesome name='angle-right'/>\n                                    }\n                                    color=\"white\"\n                                    size=\"lg\"\n                                    width={'5%'}\n                                />\n                            </Pressable>\n                            :\n                            null\n                        }\n                       \n                    </Box>\n                    <Box px=\"4\" pb=\"4\">\n                        <Button\n                            py=\"2\"\n                            px=\"1\"\n                            borderRadius=\"4\"\n                            variant=\"subtle\"\n                            _text={{\n                                _dark: { color: \"text.50\" },\n                                _light: { color: \"coolGray.800\" },\n                                fontWeight: \"normal\",\n                            }}\n                            //@ts-ignore\n                            _light={{ colorScheme: \"primary\" }}\n                            _dark={{\n                                bg: \"bg.dark\",\n                                //@ts-ignore\n                                colorScheme: \"dark\",\n                            }}\n                            onPress={()=> btnAction()}\n                        >\n                            {btnText}\n                        </Button>\n                    </Box>\n                    <Box px=\"4\" pb=\"4\" display={'flex'} alignItems={'center'} justifyContent={'space-around'} flexDirection={'row'}>\n\n                        {\n                            [...Array(totalItem).keys()].map((key: number | string)=>(\n                                <Icon\n                                    mb=\"1\"\n                                    as={\n                                        <FontAwesome name='circle'/>\n                                    }\n                                    key={key} color={  key == id ? '#fff' : '#000' }\n                                    size={3}\n                                />\n                            ))\n                        }\n                        \n                    </Box>\n                </VStack>\n            </ImageBackground>\n        </Pressable>\n    );\n};\nconst styles = StyleSheet.create({\n    imageBackground: {\n     \n    },\n    text: {\n        textAlign: \"center\"\n    }\n  });\n\nexport default MainCarouselItem;\n"]},"metadata":{},"sourceType":"module"}