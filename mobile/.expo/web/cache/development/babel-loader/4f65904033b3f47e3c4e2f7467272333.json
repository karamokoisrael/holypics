{"ast":null,"code":"import { Image, Stack, Text } from \"native-base\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from \"react\";\nimport { getImageUrl } from \"../../helpers/utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProductCard = function ProductCard(_ref) {\n  var isSmallScreen = _ref.isSmallScreen,\n      product = _ref.product;\n  return _jsxs(Stack, {\n    flex: 1,\n    alignItems: \"center\",\n    flexBasis: isSmallScreen == true ? \"48%\" : \"24%\",\n    width: isSmallScreen == true ? \"48%\" : \"24%\",\n    paddingBottom: 5,\n    height: isSmallScreen == true ? 229.8 : 285.5,\n    children: [_jsx(Image, {\n      src: getImageUrl(product.thumb),\n      alt: product.name,\n      height: isSmallScreen == true ? 138.8 : 223.5,\n      width: isSmallScreen == true ? 138.8 : 223.5\n    }), _jsx(Text, {\n      numberOfLines: 1,\n      ellipsizeMode: \"tail\",\n      fontSize: isSmallScreen == true ? 'md' : 'lg',\n      height: 5,\n      children: product.name\n    }), _jsx(Text, {\n      fontWeight: \"bold\",\n      children: new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"XOF\"\n      }).format(product.price)\n    }), product.price_before_promotion != null ? _jsx(Text, {\n      style: {\n        textDecorationLine: \"line-through\",\n        textDecorationStyle: \"solid\"\n      },\n      children: new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"XOF\"\n      }).format(product.price_before_promotion)\n    }) : null]\n  });\n};\n\nvar styles = StyleSheet.create({\n  boxBordered: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4.84,\n    elevation: 5\n  }\n});\nexport default ProductCard;","map":{"version":3,"sources":["/Users/macpro/Desktop/computer-science/projects/laboutiik/mobile/components/custom/ProductCard.tsx"],"names":["Image","Stack","Text","React","getImageUrl","ProductCard","isSmallScreen","product","thumb","name","Intl","NumberFormat","style","currency","format","price","price_before_promotion","textDecorationLine","textDecorationStyle","styles","StyleSheet","create","boxBordered","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation"],"mappings":"AAAA,SAGEA,KAHF,EAKEC,KALF,EAMEC,IANF,QASO,aATP;;AAWA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT;;;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,aAAH,QAAGA,aAAH;AAAA,MAAkBC,OAAlB,QAAkBA,OAAlB;AAAA,SAClB,MAAC,KAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,SAAS,EAAED,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAH7C;AAIE,IAAA,KAAK,EAAEA,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAJzC;AAKE,IAAA,aAAa,EAAE,CALjB;AAME,IAAA,MAAM,EAAEA,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAN1C;AAAA,eAQE,KAAC,KAAD;AACE,MAAA,GAAG,EAAEF,WAAW,CAACG,OAAO,CAACC,KAAT,CADlB;AAEE,MAAA,GAAG,EAAED,OAAO,CAACE,IAFf;AAGE,MAAA,MAAM,EAAEH,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC,KAH1C;AAIE,MAAA,KAAK,EAAEA,aAAa,IAAI,IAAjB,GAAwB,KAAxB,GAAgC;AAJzC,MARF,EAcE,KAAC,IAAD;AAAM,MAAA,aAAa,EAAE,CAArB;AAAwB,MAAA,aAAa,EAAC,MAAtC;AAA6C,MAAA,QAAQ,EAAEA,aAAa,IAAI,IAAjB,GAAwB,IAAxB,GAA+B,IAAtF;AAA4F,MAAA,MAAM,EAAE,CAApG;AAAA,gBACGC,OAAO,CAACE;AADX,MAdF,EAiBE,KAAC,IAAD;AAAM,MAAA,UAAU,EAAE,MAAlB;AAAA,gBACG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC9BC,QAAAA,KAAK,EAAE,UADuB;AAE9BC,QAAAA,QAAQ,EAAE;AAFoB,OAA/B,EAGEC,MAHF,CAGSP,OAAO,CAACQ,KAHjB;AADH,MAjBF,EAuBGR,OAAO,CAACS,sBAAR,IAAkC,IAAlC,GACC,KAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,kBAAkB,EAAE,cADf;AAELC,QAAAA,mBAAmB,EAAE;AAFhB,OADT;AAAA,gBAMG,IAAIR,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC9BC,QAAAA,KAAK,EAAE,UADuB;AAE9BC,QAAAA,QAAQ,EAAE;AAFoB,OAA/B,EAGEC,MAHF,CAGSP,OAAO,CAACS,sBAHjB;AANH,MADD,GAYG,IAnCN;AAAA,IADkB;AAAA,CAApB;;AAwCA,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,WAAW,EAAE,MADF;AAEXC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAFH;AAMXC,IAAAA,aAAa,EAAE,IANJ;AAOXC,IAAAA,YAAY,EAAE,IAPH;AASXC,IAAAA,SAAS,EAAE;AATA;AADkB,CAAlB,CAAf;AAcA,eAAexB,WAAf","sourcesContent":["import {\n  AspectRatio,\n  Box,\n  Image,\n  Center,\n  Stack,\n  Text,\n  Heading,\n  HStack,\n} from \"native-base\";\nimport { StyleSheet } from \"react-native\";\nimport React from \"react\";\nimport { Product } from \"../../@types/product\";\nimport { getImageUrl } from \"../../helpers/utils\";\n\ntype Props = {\n  isSmallScreen?: boolean;\n  product: Product;\n};\nconst ProductCard = ({ isSmallScreen, product }: Props) => (\n  <Stack\n    flex={1}\n    alignItems=\"center\"\n    flexBasis={isSmallScreen == true ? \"48%\" : \"24%\"}\n    width={isSmallScreen == true ? \"48%\" : \"24%\"}\n    paddingBottom={5}\n    height={isSmallScreen == true ? 229.8 : 285.5}\n  >\n    <Image\n      src={getImageUrl(product.thumb)}\n      alt={product.name}\n      height={isSmallScreen == true ? 138.8 : 223.5}\n      width={isSmallScreen == true ? 138.8 : 223.5}\n    />\n    <Text numberOfLines={1} ellipsizeMode=\"tail\" fontSize={isSmallScreen == true ? 'md' : 'lg'} height={5}>\n      {product.name}\n    </Text>\n    <Text fontWeight={\"bold\"}>\n      {new Intl.NumberFormat(\"fr-FR\", {\n        style: \"currency\",\n        currency: \"XOF\",\n      }).format(product.price)}\n    </Text>\n    {product.price_before_promotion != null ? (\n      <Text\n        style={{\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\",\n        }}\n      >\n        {new Intl.NumberFormat(\"fr-FR\", {\n          style: \"currency\",\n          currency: \"XOF\",\n        }).format(product.price_before_promotion)}\n      </Text>\n    ) : null}\n  </Stack>\n);\n\nconst styles = StyleSheet.create({\n  boxBordered: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4.84,\n\n    elevation: 5,\n  },\n});\n\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}